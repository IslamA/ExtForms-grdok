
&НаСервере
Процедура ЗаполнитьПустымиНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриемНаРаботу.Ссылка КАК ПриемНаРаботу,
	|	ПриемНаРаботу.ТрудовойДоговорНомер КАК ТрудовойДоговорНомер,
	|	ПриемНаРаботу.ТрудовойДоговорДата КАК ТрудовойДоговорДата,
	|	СостоянияСотрудниковСрезПоследних.Состояние КАК Состояние
	|ИЗ
	|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияСотрудников.СрезПоследних КАК СостоянияСотрудниковСрезПоследних
	|		ПО ПриемНаРаботу.Сотрудник = СостоянияСотрудниковСрезПоследних.Сотрудник
	|ГДЕ
	|	НЕ ПриемНаРаботу.ПометкаУдаления
	|	И ПриемНаРаботу.Проведен
	|	И (ПриемНаРаботу.ТрудовойДоговорНомер = """"
	|			ИЛИ ПриемНаРаботу.ТрудовойДоговорДата = ДАТАВРЕМЯ(1, 1, 1))";
	
	//Запрос.УстановитьПараметр("", );
	
	Объект.ПриемыНаРаботу.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПустыми(Команда)
	ЗаполнитьПустымиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриемыНаРаботуПриемНаРаботуПриИзменении(Элемент)
	ПриемыНаРаботуПриемНаРаботуПриИзмененииНаСервере(Элементы.ПриемыНаРаботу.ТекущиеДанные.НомерСтроки);
КонецПроцедуры

&НаСервере
Процедура ПриемыНаРаботуПриемНаРаботуПриИзмененииНаСервере(ТекущаяСтрока)
	ТекСтрока = Объект.ПриемыНаРаботу[ТекущаяСтрока-1];
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриемНаРаботу.Ссылка КАК ПриемНаРаботу,
	|	ПриемНаРаботу.ТрудовойДоговорНомер КАК ТрудовойДоговорНомер,
	|	ПриемНаРаботу.ТрудовойДоговорДата КАК ТрудовойДоговорДата,
	|	СостоянияСотрудниковСрезПоследних.Состояние КАК Состояние
	|ИЗ
	|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияСотрудников.СрезПоследних КАК СостоянияСотрудниковСрезПоследних
	|		ПО ПриемНаРаботу.Сотрудник = СостоянияСотрудниковСрезПоследних.Сотрудник
	|ГДЕ
	|	ПриемНаРаботу.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ТекСтрока.ПриемНаРаботу);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Если ТЗ.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ТекСтрока,ТЗ[0]);
	Иначе
		ТекСтрока.ТрудовойДоговорНомер = Неопределено;
		ТекСтрока.ТрудовойДоговорДата = Неопределено;
		ТекСтрока.Состояние = Неопределено;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()
	Для каждого ТекСтрока Из Объект.ПриемыНаРаботу Цикл
		Если ТекСтрока.ПриемНаРаботу.ТрудовойДоговорНомер <> ТекСтрока.ТрудовойДоговорНомер
			ИЛИ ТекСтрока.ПриемНаРаботу.ТрудовойДоговорДата <> ТекСтрока.ТрудовойДоговорДата Тогда
			
			ДокОбъект = ТекСтрока.ПриемНаРаботу.ПолучитьОбъект();
			ДокОбъект.ТрудовойДоговорНомер = ТекСтрока.ТрудовойДоговорНомер;
			ДокОбъект.ТрудовойДоговорДата = ТекСтрока.ТрудовойДоговорДата;
			ДокОбъект.ОбменДанными.Загрузка = Истина;
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", ДокОбъект.Ссылка);
			
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриемНаРаботу.Ссылка,
			|	ПриемНаРаботу.Ссылка.Организация КАК Организация,
			|	ПриемНаРаботу.ДатаПриема,
			|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо,
			|	ПриемНаРаботу.Сотрудник,
			|	ПриемНаРаботу.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ПриемНаРаботу.ДолжностьПоШтатномуРасписанию,
			|	ПриемНаРаботу.Подразделение,
			|	ПриемНаРаботу.Территория,
			|	ПриемНаРаботу.Должность,
			|	ПриемНаРаботу.РазрядКатегория,
			|	ПриемНаРаботу.ПКУ,
			|	ПриемНаРаботу.КоличествоСтавок,
			|	ПриемНаРаботу.ГрафикРаботы,
			|	ПриемНаРаботу.СпособРасчетаАванса,
			|	ПриемНаРаботу.Аванс,
			|	ПриемНаРаботу.ВидЗанятости,
			|	ПриемНаРаботу.Ссылка.ВидДоговора КАК ВидДоговора,
			|	ПриемНаРаботу.ФизическоеЛицо,
			|	ПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора,
			|	ПриемНаРаботу.ТрудовойДоговорНомер,
			|	ПриемНаРаботу.ТрудовойДоговорДата,
			|	ПриемНаРаботу.ПорядокРасчетаСтоимостиЕдиницыВремени,
			|	ПриемНаРаботу.СовокупнаяТарифнаяСтавка,
			|	ПриемНаРаботу.ВидТарифнойСтавки,
			|	ПриемНаРаботу.ВидАктаГосоргана,
			|	ПриемНаРаботу.ПоступлениеНаСлужбуВпервые,
			|	ПриемНаРаботу.СпособПоступленияНаСлужбу,
			|	ПриемНаРаботу.СрочныйДоговор,
			|	ПриемНаРаботу.СрокЗаключенияДоговора,
			|	ПриемНаРаботу.ОснованиеСрочногоДоговора,
			|	ПриемНаРаботу.ОборудованиеРабочегоМеста,
			|	ПриемНаРаботу.ИныеУсловияДоговора,
			|	ПриемНаРаботу.Ссылка.Руководитель КАК Руководитель,
			|	ПриемНаРаботу.Ссылка.ДолжностьРуководителя КАК ДолжностьРуководителя,
			|	ПриемНаРаботу.Ссылка.ОснованиеПредставителяНанимателя КАК ОснованиеПредставителяНанимателя
			|ПОМЕСТИТЬ ВТСотрудники
			|ИЗ
			|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
			|ГДЕ
			|	ПриемНаРаботу.Ссылка = &Ссылка";
			
			Запрос.Выполнить();
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА Сотрудники.ТрудовойДоговорДата = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА Сотрудники.ДатаПриема
			|		ИНАЧЕ Сотрудники.ТрудовойДоговорДата
			|	КОНЕЦ КАК Период,
			|	Сотрудники.ДатаПриема КАК ДатаНачала,
			|	Сотрудники.Сотрудник КАК Сотрудник,
			|	Сотрудники.ФизическоеЛицо,
			|	Сотрудники.Организация КАК Организация,
			|	Сотрудники.ДатаЗавершенияТрудовогоДоговора КАК ДатаОкончания,
			|	Сотрудники.ТрудовойДоговорНомер КАК НомерДоговораКонтракта,
			|	Сотрудники.ТрудовойДоговорДата КАК ДатаДоговораКонтракта,
			|	Сотрудники.Руководитель КАК ПредставительНанимателя,
			|	Сотрудники.ДолжностьРуководителя КАК ДолжностьПредставителяНанимателя,
			|	Сотрудники.ОснованиеПредставителяНанимателя КАК ОснованиеПредставителяНанимателя,
			|	Сотрудники.ВидАктаГосоргана,
			|	Сотрудники.ПоступлениеНаСлужбуВпервые,
			|	Сотрудники.СпособПоступленияНаСлужбу,
			|	Сотрудники.СрочныйДоговор,
			|	Сотрудники.СрокЗаключенияДоговора,
			|	Сотрудники.ОснованиеСрочногоДоговора,
			|	Сотрудники.ОборудованиеРабочегоМеста,
			|	Сотрудники.ИныеУсловияДоговора
			|ИЗ
			|	ВТСотрудники КАК Сотрудники";
			
			// Десятый набор данных для проведения - таблица для формирования описаний договоров сотрудников.
			СведенияОКонтрактахДоговорах = Запрос.Выполнить().Выгрузить();
			КонтрактыДоговорыСотрудников.СформироватьДвиженияОсновныхДанныхИСведенийОКонтрактахДоговорах(ДокОбъект.Движения, СведенияОКонтрактахДоговорах);
			
		КонецЕсли; 
		
		
		
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьИзмененияНаСервере();
КонецПроцедуры
