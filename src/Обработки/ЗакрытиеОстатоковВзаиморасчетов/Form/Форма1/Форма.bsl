
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("Период",        Объект.Дата);
	Запрос.Параметры.Вставить("Организация",   Объект.Организация);
	Запрос.Параметры.Вставить("Подразделение", Объект.Подразделение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Организация,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.ВидЗапасов,
	|	Рег.ЗаказНаПроизводство,
	|	Рег.КодСтрокиПродукция,
	|	Рег.ДокументПоступления,
	|	Рег.Этап,
	|	Рег.СтатьяКалькуляции,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииНезавершенногоПроизводства.Остатки(&Период, Организация = &Организация И АналитикаУчетаНоменклатуры.Склад = &Подразделение) КАК Рег";
	
	Запрос.Выполнить();
	Объект.ПартииНезавершенногоПроизводства.Загрузить(Запрос.Результат.Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Организация,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.ВидЗапасов,
	|	Рег.ДокументПоступления,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И АналитикаУчетаНоменклатуры.Склад = &Подразделение) КАК Рег";
	
	Запрос.Выполнить();
	Объект.ПартииПроизводственныхЗатрат.Загрузить(Запрос.Результат.Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.РазделУчета,
	|	Рег.ВидЗапасов,
	|	Рег.Организация,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СуммаДопРасходовОстаток КАК СуммаДопРасходов,
	|	Рег.СуммаДопРасходовБезНДСОстаток КАК СуммаДопРасходовБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				И АналитикаУчетаНоменклатуры.Склад = &Подразделение) КАК Рег";
	
	Запрос.Выполнить();
	Объект.СебестоимостьТоваров.Загрузить(Запрос.Результат.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокумент(Команда)
	СформироватьДокументНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументНаСервере()
	
	ДатаДокумента  = Объект.Дата - 1;
		
	ДокументОбъект =  НайтиДокументКорректировку("Сторно остатков НЗП", ДатаДокумента);
	ДокументОбъект.ПометкаУдаления = Ложь;
	
	ДокументОбъект.ТаблицаРегистров.Очистить();
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "СебестоимостьТоваров";
	
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПартииНезавершенногоПроизводства";
	
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПартииПроизводственныхЗатрат";
	
	Если Ложь Тогда
		ДокументОбъект = Документы.КорректировкаРегистров.СоздатьДокумент();
	КонецЕсли;
	
	Для каждого СтрокаТЗ из Объект.ПартииНезавершенногоПроизводства Цикл
		
		Запись = ДокументОбъект.Движения.ПартииНезавершенногоПроизводства.ДобавитьРасход();
		Запись.Период = ДатаДокумента;
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТЗ);
		
	КонецЦикла;	
	
	Для каждого СтрокаТЗ из Объект.ПартииПроизводственныхЗатрат Цикл
		
		Запись = ДокументОбъект.Движения.ПартииПроизводственныхЗатрат.ДобавитьРасход();
		Запись.Период = ДатаДокумента;
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТЗ);
		
	КонецЦикла;	
	
	Для каждого СтрокаТЗ из Объект.СебестоимостьТоваров Цикл
		
		Запись = ДокументОбъект.Движения.СебестоимостьТоваров.ДобавитьРасход();
		Запись.Период = ДатаДокумента;
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТЗ);
		
	КонецЦикла;	
	
	ДокументОбъект.Записать();
	ДокументСсылка = ДокументОбъект.Ссылка;
	
КонецПроцедуры

&НаСервере
Функция НайтиДокументКорректировку(Комментарий, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРегистров.Ссылка
	|ИЗ
	|	Документ.КорректировкаРегистров КАК КорректировкаРегистров
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(КорректировкаРегистров.Дата, ДЕНЬ) = &Дата
	|	И КорректировкаРегистров.Комментарий ПОДОБНО &Комментарий";
	
	Запрос.Параметры.Вставить("Дата",        НачалоДня(Дата));
	Запрос.Параметры.Вставить("Комментарий", Комментарий);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		ДокументОбъект = Документы.КорректировкаРегистров.СоздатьДокумент();
		ДокументОбъект.Дата        = КонецДня(Дата);
		ДокументОбъект.Комментарий = Комментарий;
		
	Иначе
		
		ДокументОбъект = Результат.Выгрузить()[0][0].ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Ложь;
		
	КонецЕсли;	
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Возврат ДокументОбъект;
	
КонецФункции
