
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВалютаРуб = Константы.ВалютаРегламентированногоУчета.Получить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВклВсе(Команда)
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		СтрокаТЗ.Пометка = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыклВсе(Команда)
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		СтрокаТЗ.Пометка = Ложь;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ТаблицаДанных.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если Поле.Имя = "ТаблицаДанныхИсполнительныйЛист" Тогда
		ПоказатьЗначение(, ТекущиеДанные.ИсполнительныйЛист);
	ИначеЕсли Поле.Имя = "ТаблицаДанныхЗаявка" Тогда
		ПоказатьЗначение(, ТекущиеДанные.Заявка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявки(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьЗаявкиЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Создать заявки?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкиЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СоздатьЗаявкиНаСервере();
		Состояние("Заявки созданы");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОснованиеПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка",   Основание);
	Запрос.Параметры.Вставить("Свойство", "Назначение платежа");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыУдержания.ФизическоеЛицо,
	|	НачислениеЗарплатыУдержания.Результат КАК Сумма,
	|	НачислениеЗарплатыУдержания.ДокументОснование КАК ИсполнительныйЛист,
	|	НачислениеЗарплатыУдержания.ДокументОснование.Получатель КАК Получатель,
	|	ИсполнительныйЛистДополнительныеРеквизиты.Значение КАК НазначениеПлатежа
	|ИЗ
	|	Документ.НачислениеЗарплаты.Удержания КАК НачислениеЗарплатыУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИсполнительныйЛист.ДополнительныеРеквизиты КАК ИсполнительныйЛистДополнительныеРеквизиты
	|		ПО НачислениеЗарплатыУдержания.ДокументОснование = ИсполнительныйЛистДополнительныеРеквизиты.Ссылка
	|			И (ИсполнительныйЛистДополнительныеРеквизиты.Свойство.Заголовок = &Свойство)
	|ГДЕ
	|	НачислениеЗарплатыУдержания.Ссылка = &Ссылка
	|	И НачислениеЗарплатыУдержания.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|	И НачислениеЗарплатыУдержания.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
	|	И НачислениеЗарплатыУдержания.Результат > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачислениеЗарплатыУдержания.НомерСтроки";
	
	ТаблицаДанных.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Номер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "Номер");
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		
		СтрокаТЗ.Комментарий = "ИЛ: " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЗ.ИсполнительныйЛист, "Номер") + ", Начисление: "  + Номер;
		СтрокаТЗ.Заявка = НайтиЗаявку(СтрокаТЗ.Комментарий);
		СтрокаТЗ.Пометка = НЕ ЗначениеЗаполнено(СтрокаТЗ.Заявка);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	ОснованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаявкиНаСервере()
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		
		Если НЕ СтрокаТЗ.Пометка Тогда 
			Продолжить;
		КонецЕсли;	
		
		СтрокаТЗ.Заявка = СоздатьЗаявку(СтрокаТЗ);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьбанковскийСчетКонтрагента(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Владелец", Контрагент);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спр.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК Спр
	|ГДЕ
	|	Спр.Владелец = &Владелец
	|	И НЕ Спр.Закрыт
	|	И НЕ Спр.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат Результат.Выгрузить()[0][0];
	КонецЕсли;	
	
КонецФункции

&НаСервере
Функция СоздатьЗаявку(СтрокаТЗ)
	
	Если ЗначениеЗаполнено(СтрокаТЗ.Заявка) Тогда
		ДокОбъект = СтрокаТЗ.Заявка.ПолучитьОбъект();
	Иначе
		ДокОбъект = Документы.ЗаявкаНаРасходованиеДенежныхСредств.СоздатьДокумент();
	КонецЕсли;
	
	ДокОбъект.Дата = ТекущаяДатаСеанса();
	ДокОбъект.Заполнить(Неопределено);
	
	ДокОбъект.Организация       = Организация;
	ДокОбъект.Подразделение     = Подразделение;
	ДокОбъект.БанковскийСчет    = БанковскийСчет;
	ДокОбъект.Контрагент        = СтрокаТЗ.Получатель;
	ДокОбъект.БанковскийСчетКонтрагента = ПолучитьбанковскийСчетКонтрагента(ДокОбъект.Контрагент);
	ДокОбъект.ХозяйственнаяОперация     = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств;
	ДокОбъект.Статус            = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована;
	ДокОбъект.ПриоритетОплаты   = Справочники.ПриоритетыОплаты.НайтиПоНаименованию("Средний");
	ДокОбъект.СуммаДокумента    = СтрокаТЗ.Сумма;
	ДокОбъект.Валюта            = ВалютаРуб;
	ДокОбъект.ФормаОплатыНаличная    = Ложь;
	ДокОбъект.ФормаОплатыБезналичная = Истина;
	ДокОбъект.КтоЗаявил         = Пользователи.ТекущийПользователь();
	ДокОбъект.ЖелательнаяДатаПлатежа = ТекущаяДата();
	
	ПериодДокумента   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "МесяцНачисления");
	ПериодДокумента   = Формат(ПериодДокумента, "ДФ='MMMM yyyy'") + "г.";
	НазначениеПлатежа = СтрЗаменить(СтрокаТЗ.НазначениеПлатежа, "[Месяц]", ПериодДокумента) + Символы.ПС + "Сумма " + Формат(ДокОбъект.СуммаДокумента, "ЧДЦ=2"); 
	ДокОбъект.НазначениеПлатежа = НазначениеПлатежа;
	
	ДокОбъект.РасшифровкаПлатежа.Очистить();
	НоваяСтрока = ДокОбъект.РасшифровкаПлатежа.Добавить();
	НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтатьяДДС;
	НоваяСтрока.Подразделение  = Подразделение;
	НоваяСтрока.СтатьяРасходов = СтатьяРасходов;
	НоваяСтрока.СчетУчета      = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.41");
	НоваяСтрока.Субконто1      = ДокОбъект.Контрагент;
	НоваяСтрока.Комментарий    = СтрокаТЗ.Комментарий;
	
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	Возврат ДокОбъект.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиЗаявку(Комментарий)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Комментарий", Комментарий);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК Док
	|ГДЕ
	|	Док.Комментарий ПОДОБНО &Комментарий";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат Результат.Выгрузить()[0][0];
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ПровестиДокументы(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПровестиДокументыЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Провести заявки?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокументыЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПровестиДокументыНаСервере();
		Состояние("Заявки проведены");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПровестиДокументыНаСервере()
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		
		Если НЕ СтрокаТЗ.Пометка Тогда 
			Продолжить;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СтрокаТЗ.Заявка) Тогда
			
			ДокОбъект = СтрокаТЗ.Заявка.ПолучитьОбъект();
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры



