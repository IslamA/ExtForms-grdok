
&НаКлиенте
Процедура проверить(Команда)
	
	
	Если  Элементы.Группа3.ТекущаяСтраница.Имя = "Основная" тогда
		Состояние( "Данные собираются.. ждите...",," А пока вы ждёте...  Я работаю!");
		ЗаполнитьТаблицыИЗДеревьев();
		проверитьНаСервере();
	ИначеЕсли Элементы.Группа3.ТекущаяСтраница.Имя = "ВзимосвязьПользовательРоль" тогда
		///вапрвап
		Состояние( "Данные собираются.. ждите...",," А пока вы ждёте...  Я работаю!");
		СопоставитьРолиИпользователей();
	Иначе
		Предупреждение("Перейдите на страницу нужного отчета",5);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьВтаблицуПодчинённыеОтмеченныеЭлементы(ТаблицаДобавления, УзелДерева)
	
	//Если Не УзелДерева.Пометка тогда
	//	Продолжить;
	//КонецЕсли;
	Если Не УзелДерева.Имя = "" и УзелДерева.Пометка тогда
		новаяСтрока = ТаблицаДобавления.Добавить();
		ЗаполнитьЗначенияСвойств(новаяСтрока,УзелДерева);
	КонецЕсли;
	Для каждого УзелокДерева Из УзелДерева.ПолучитьЭлементы() Цикл
		ДобавитьВтаблицуПодчинённыеОтмеченныеЭлементы(ТаблицаОтборМетаданные, УзелокДерева);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицыИЗДеревьев()
	
	ТаблицаОтборМетаданные.Очистить();
	ТаблицаОтборПользователиРоли.Очистить();
	
	Для каждого УзелокДерева Из ДеревоМетаданных.ПолучитьЭлементы() Цикл
		ДобавитьВтаблицуПодчинённыеОтмеченныеЭлементы(ТаблицаОтборМетаданные, УзелокДерева);
	КонецЦикла;
	
	Для каждого ГруппаДерева ИЗ ДеревоРолей.ПолучитьЭлементы() Цикл
		Для Каждого ЭлементДерева Из ГруппаДерева.ПолучитьЭлементы() Цикл
			Если Не (ЭлементДерева.Пометка ) тогда
				Продолжить;
			КонецЕсли;
			новаяСтрока = ТаблицаОтборПользователиРоли.Добавить();
			ЗаполнитьЗначенияСвойств(новаяСтрока,ЭлементДерева); 
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СопоставитьРолиИпользователей()
	
	ТаблицаРезультатВзаимосвязи.Очистить();
	
	СписокРолей = новый СписокЗначений;
	СписокПользователей = новый СписокЗначений;
	
	ГруппыДерева = ДеревоРолей.ПолучитьЭлементы();
	Для Каждого ГруппаДерева  Из ГруппыДерева Цикл
		Для каждого ЭлементДерева Из ГруппаДерева.ПолучитьЭлементы() Цикл
			Если Не ЭлементДерева.Пометка тогда
				Продолжить;
			КонецЕсли;
			Если ГруппаДерева.Синоним = "Пользователи ИБ"  тогда
				СписокПользователей.Добавить().Значение = ПользователиИнформационнойБазы.НайтиПоИмени(ЭлементДерева.Имя);
			Иначе
				СписокРолей.Добавить().Значение = Метаданные.Роли[ЭлементДерева.Имя];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	МассивСтрок = новый Массив();
	МассивСтрок.Добавить(Тип("Строка"));
	ТИПСТРОКА100 = Новый ОписаниеТипов(МассивСтрок,, новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная));
	МассивБулево = новый Массив();
	МассивБулево.Добавить(Тип("Булево"));
	ТипБулево = Новый ОписаниеТипов(МассивБулево);


	
	Табло = новый ТаблицаЗначений;
	Табло.Колонки.Добавить("Роль",ТИПСТРОКА100);
	Табло.Колонки.Добавить("Пользователь",ТИПСТРОКА100);
	Табло.Колонки.Добавить("Доступность",ТипБулево);
	
	Для каждого ЭлемСписка ИЗ СписокПользователей Цикл 
		//Для каждого РольПользователя ИЗ ЭлемСписка.Значение.Роли Цикл
		Для каждого ЭлемСпискаРолей ИЗ СписокРолей Цикл	
			
			новаяСтрока = Табло.Добавить();
			новаяСтрока.Роль = ЭлемСпискаРолей.Значение.Синоним;
			новаяСтрока.Пользователь = ЭлемСписка.Значение.Имя;
			новаяСтрока.Доступность = ЭлемСписка.Значение.Роли.содержит(ЭлемСпискаРолей.Значение);
			
		КонецЦикла;
	КонецЦикла; 
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("Табло",Табло);
	СхемаКомпоновкиДанных = РеквизитФормывЗначение("Отчет").ПолучитьМакет("СхемаПоРолямПользователей");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроекРоли.ПолучитьНастройки());
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,
	ВнешниеНаборыДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТаблицаРезультатВзаимосвязи);
	
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ПроцессорВывода.ЗакончитьВывод();
	
	
КонецПроцедуры

&НаСервере
Процедура проверитьНаСервере()
	
	ТаблицаРезультат.Очистить();
	
	МассивСтрок = новый Массив();
	МассивСтрок.Добавить(Тип("Строка"));
	МассивДат = новый Массив();
	МассивДат.Добавить(Тип("Дата"));
	МассивЧисло = новый Массив();
	МассивЧисло.Добавить(Тип("Число"));
	ТИПСТРОКА25 = Новый ОписаниеТипов(МассивСтрок,, новый КвалификаторыСтроки(25, ДопустимаяДлина.Переменная));
	ТИПСТРОКА100 = Новый ОписаниеТипов(МассивСтрок,, новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная));
	ТипДаты = Новый ОписаниеТипов(МассивДат,, Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ТИПЧисло152 = новый ОписаниеТипов( МассивЧисло,, Новый КвалификаторыЧисла(15,2 ));
	
	МассивБулево = новый Массив();
	МассивБулево.Добавить(Тип("Булево"));
	ТипБулево = Новый ОписаниеТипов(МассивБулево);

	
	СоответствиеПрав = ВернутьСтруктуруТаблицПрав();
	ТаблицаОтборПользователиРоли2 = ТаблицаОтборПользователиРоли.Выгрузить();
	ТаблицаОтборПользователиРоли2.Колонки.Добавить("РольПользователь");
	
	Для каждого строкаТ ИЗ ТаблицаОтборПользователиРоли2 Цикл
		Если строкаТ.ЭтоРоль тогда
			строкаТ.РольПользователь = Метаданные.Роли[строкаТ.Имя];
		Иначе
			строкаТ.РольПользователь = ПользователиИнформационнойБазы.НайтиПоИмени(строкаТ.Имя);
		КонецЕсли;
	КонецЦикла;
	
	//////////////////////конец заполнения соотв прав
						
	Табло = Новый ТаблицаЗначений;
	
	Табло.Колонки.Добавить("ИмяОбъекта", ТИПСТРОКА100); //-Объект метаданных или вся конфигурация 
	Табло.Колонки.Добавить("ИмяПрава", ТИПСТРОКА100);//- имя проверяемого права
	Табло.Колонки.Добавить("ПользовательРоль", ТИПСТРОКА100);//- Пользователь или роль для которого проверяется право
	Табло.Колонки.Добавить("ГруппаОбъекта", ТИПСТРОКА100);//- Для объединения объектов в определённые группы
	Табло.Колонки.Добавить("ЭтоРоль", ТипБулево);//- Признак того что проверяется право для роли
	Табло.Колонки.Добавить("ЕстьПраво",ТипБулево);//- Факт наличия данного права
	
	ОтборПрав = Новый Структура("ВидПрава,Раздел");
	
	Для Каждого СтрокаОтборМетаданные из ТаблицаОтборМетаданные Цикл
		ЭлементМетаданных = Метаданные.НайтиПоПолномуИмени(СтрокаОтборМетаданные.ПолноеИмя);
		
		Для Каждого СтрокаОтборПользователи из ТаблицаОтборПользователиРоли2 Цикл
			ЭтоРоль = СтрокаОтборПользователи.ЭтоРоль;
			РольПользователь = СтрокаОтборПользователи.РольПользователь;
			
			Для каждого ГруппаДереваПрав ИЗ ДеревоПроверяемыхПрав.ПолучитьЭлементы()[0].получитьЭлементы() Цикл
				
				Если ГруппаДереваПрав.Синоним = "Общие" тогда // общие права не проверяются по объектам
					Продолжить;
				КонецЕсли;
				
				ИмяСравненияРодителяПрав = СтрокаОтборМетаданные.Тип;
				Если ИмяСравненияРодителяПрав = "ОбщиеКоманды" или Прав(ИмяСравненияРодителяПрав,8)=".Команды" тогда
					ИмяСравненияРодителяПрав = "Команды";
				КонецЕсли;
				
				Если ГруппаДереваПрав.Синоним <> ИмяСравненияРодителяПрав тогда
					Продолжить;
				КонецЕсли;
				
				
				Для Каждого ЭлементДереваПрав Из ГруппаДереваПрав.ПолучитьЭлементы() Цикл
					Если Не ЭлементДереваПрав.Пометка тогда
						Продолжить;
					КонецЕсли;
					//возможно это не корректные права ...
					
					ЗначениеПрава = ПравоДоступа(ЭлементДереваПрав.Имя , ЭлементМетаданных, РольПользователь);
					НовСтрока = Табло.Добавить(); 
					НовСтрока.ИмяОбъекта = СтрокаОтборМетаданные.Имя; НовСтрока.ИмяПрава = ЭлементДереваПрав.Имя; НовСтрока.ПользовательРоль = РольПользователь.Имя;
					НовСтрока.ГруппаОбъекта = СтрокаОтборМетаданные.Тип; НовСтрока.ЭтоРоль = ЭтоРоль; НовСтрока.ЕстьПраво = ЗначениеПрава;
					
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	//проверка общих прав
	Для каждого ГруппаДереваПрав ИЗ ДеревоПроверяемыхПрав.ПолучитьЭлементы()[0].ПолучитьЭлементы() Цикл
		Если ГруппаДереваПрав.Синоним <> "Общие" тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ЭлементДереваПрав Из ГруппаДереваПрав.ПолучитьЭлементы() Цикл
			Если Не ЭлементДереваПрав.Пометка тогда
				Продолжить;
			КонецЕсли;
			//возможно это не корректные права ...
			Для Каждого СтрокаОтборПользователи из ТаблицаОтборПользователиРоли2 Цикл
				ЭтоРоль = СтрокаОтборПользователи.ЭтоРоль;
				//Если ЭтоРоль тогда
				//	РольПользователь = Метаданные.Роли[СтрокаОтборПользователи.Имя];
				//Иначе
				//	РольПользователь = ПользователиИнформационнойБазы.НайтиПоИмени(СтрокаОтборПользователи.Имя);
				//КонецЕсли;
				РольПользователь = СтрокаОтборПользователи.РольПользователь;
				ЗначениеПрава = ПравоДоступа(ЭлементДереваПрав.Имя , Метаданные, РольПользователь);
				НовСтрока = Табло.Добавить(); 
				НовСтрока.ИмяОбъекта = "Общие по Базе"; НовСтрока.ИмяПрава = ЭлементДереваПрав.Имя; НовСтрока.ПользовательРоль = РольПользователь.Имя;
				НовСтрока.ГруппаОбъекта = " Общие"; НовСтрока.ЭтоРоль = ЭтоРоль; НовСтрока.ЕстьПраво = ЗначениеПрава;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("Табло",Табло);
	СхемаКомпоновкиДанных = РеквизитФормывЗначение("Отчет").ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Отчет.КомпоновщикНастроек.ПолучитьНастройки());
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,
	ВнешниеНаборыДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТаблицаРезультат);
	
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ПроцессорВывода.ЗакончитьВывод();
	
КонецПроцедуры



&НаКлиенте
Процедура ВыбратьВариант(Команда)
	текЭлемент = СписокВариантов.ВыбратьЭлемент("Выберите вариант");
	Если текЭлемент <> Неопределено и текЭлемент.Значение <> ЭтаФорма.КлючТекущегоВарианта тогда
		КлючТекущегоВарианта = текЭлемент.Значение;
		УстановитьТекущийВариант(КлючТекущегоВарианта);
	КонецЕсли;
	         	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьПолноеИмяФормы(ИмяФормы)
	
	СимволТочка = ".";
	ПозицияТочки = СтрДлина(ЭтаФорма.ИмяФормы);
	Пока Сред(ЭтаФорма.ИмяФормы, ПозицияТочки, 1) <> СимволТочка Цикл ПозицияТочки = ПозицияТочки - 1; КонецЦикла; // 
	ИмяновФормы = Лев(ЭтаФорма.ИмяФормы, ПозицияТочки) + ИмяФормы;
	Возврат ИмяновФормы;
	
КонецФункции



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СхемаКомпоновкиДанныхРолей = ОтчетОбъект.ПолучитьМакет("СхемаПоРолямПользователей");
	АдресСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанныхРолей, УникальныйИдентификатор);
	// Инициализируем компоновщик настроек
	КомпоновщикНастроекРоли.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКД));
	КомпоновщикНастроекРоли.ЗагрузитьНастройки(СхемаКомпоновкиДанныхРолей.НастройкиПоУмолчанию);	


	
	
	
	СписокВариантов.Очистить();
	ОтчетОбъект = РеквизитФормыВзначение("Отчет");
	Для каждого Варик ИЗ  ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек Цикл
		СписокВариантов.Добавить().Значение = Варик.Имя;
	КонецЦикла;
	
	
	/////работа с деревом проверяемых прав
	
	Дерево = РеквизитФормыВЗначение("ДеревоПроверяемыхПрав");
	
	ТаблицаСоответствияПрав = ВернутьСтруктуруТаблицПрав();
	
	ГлавнаяГруппа = Дерево.Строки.Добавить();
	ГлавнаяГруппа.Имя = "";
	ГлавнаяГруппа.Синоним = "Все права";
	
	ПредРодитель = "";
	Для Каждого СтрокаСоотв Из ТаблицаСоответствияПрав Цикл
		Если ПредРодитель <> СтрокаСоотв.Раздел тогда
			СтрокаГруппа = ГлавнаяГруппа.строки.Добавить();
			СтрокаГруппа.Имя = "";
			СтрокаГруппа.Синоним = СтрокаСоотв.Раздел;
			ПредРодитель = СтрокаСоотв.Раздел;
		КонецЕсли;
		НоваяСтрока = СтрокаГруппа.Строки.Добавить();
		НоваяСтрока.Имя = 		СтрокаСоотв.ВидПрава;
		НоваяСтрока.Синоним =	СтрокаСоотв.ВидПрава;
		НоваяСтрока.Пометка = Ложь;
	КонецЦикла;	
	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПроверяемыхПрав");
	//конец работы с деревом проверяемых прав
	
	//работа с деревом ролей
	Дерево = РеквизитФормыВЗначение("ДеревоРолей");
	
	Если Метаданные.Роли.Количество() > 0 Тогда 
		СтрокаГруппа = Дерево.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Роли";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Задача;
		Для Каждого Объект Из Метаданные.Роли Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.ЭтоРоль = Истина;
			НоваяСтрока.Имя = Объект.Имя;
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = БиблиотекаКартинок.Задача;
			НоваяСтрока.Пометка = Ложь;
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			Дерево.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	СтрокаГруппа = Дерево.Строки.Добавить();
	СтрокаГруппа.Имя = "";
	СтрокаГруппа.Синоним = "Пользователи ИБ";
	СтрокаГруппа.Картинка = БиблиотекаКартинок.Пользователь;
	Для Каждого Пользак ИЗ ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		НоваяСтрока = СтрокаГруппа.Строки.Добавить();
		НоваяСтрока.ЭтоРоль = Ложь;
		НоваяСтрока.Имя = Пользак.Имя;
		Если Пользак.ПолноеИмя = "" Тогда
			НоваяСтрока.Синоним = Пользак.Имя;
		Иначе
			НоваяСтрока.Синоним = Пользак.ПолноеИмя + " (" + Пользак.Имя + ")";
		КонецЕсли; 
		НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
	КонецЦикла;
	Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
		Дерево.Строки.Удалить(СтрокаГруппа);
	КонецЕсли;	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРолей");
	//конец работы с деревом ролей
	
	//работа с деревом метаданных
	Дерево = РеквизитФормыВЗначение("ДеревоМетаданных");
	
	ГлавнаяГруппа = Дерево.Строки.Добавить();
	ГлавнаяГруппа.Имя = "";
	ГлавнаяГруппа.Синоним = Метаданные.Синоним;
	
	Если Метаданные.ОбщиеКоманды.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Общие Команды";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.СформироватьОтчет;
		Для Каждого Объект Из Метаданные.ОбщиеКоманды Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "ОбщиеКоманды";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			Дерево.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	СтрокаГруппаВсехКоманд = ГлавнаяГруппа.Строки.Добавить();
	СтрокаГруппаВсехКоманд.Имя = "";
	СтрокаГруппаВсехКоманд.Синоним = "Команды объектов";
	СтрокаГруппаВсехКоманд.Картинка = БиблиотекаКартинок.СформироватьОтчет;
	
	Если Метаданные.ПараметрыСеанса.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Параметры сеанса";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.ВыборКомпоновкиДанных;
		Для Каждого Объект Из Метаданные.ПараметрыСеанса Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "ПараметрыСеанса";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрока.Пометка = Ложь;
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			Дерево.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.Подсистемы.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Подсистемы";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
		Для Каждого Объект Из Метаданные.Подсистемы Цикл
			НоваяСтрока1 = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока1.Тип = "Подсистемы";
			НоваяСтрока1.Имя = Объект.Имя;
			НоваяСтрока1.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока1.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока1.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока1.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
			НоваяСтрока1.Пометка = Ложь;
			Для Каждого ПодчПодсистема ИЗ Объект.Подсистемы Цикл
				НоваяСтрока2 = НоваяСтрока1.Строки.Добавить();
				НоваяСтрока2.Тип = "Подсистемы";
				НоваяСтрока2.Имя = ПодчПодсистема.Имя;
				НоваяСтрока2.ПолноеИмя = ПодчПодсистема.ПолноеИмя();
				Если ПодчПодсистема.Синоним = "" Тогда
					НоваяСтрока2.Синоним = ПодчПодсистема.Имя;
				Иначе
					НоваяСтрока2.Синоним = ПодчПодсистема.Синоним + " (" + ПодчПодсистема.Имя + ")";
				КонецЕсли;
				НоваяСтрока2.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
				НоваяСтрока2.Пометка = Ложь;
				Для Каждого ПодчПодсистема1 ИЗ ПодчПодсистема.Подсистемы Цикл
					НоваяСтрока3 = НоваяСтрока2.Строки.Добавить();
					НоваяСтрока3.Тип = "Подсистемы";
					НоваяСтрока3.Имя = ПодчПодсистема1.Имя;
					НоваяСтрока3.ПолноеИмя = ПодчПодсистема1.ПолноеИмя();
					Если ПодчПодсистема1.Синоним = "" Тогда
						НоваяСтрока3.Синоним = ПодчПодсистема1.Имя;
					Иначе
						НоваяСтрока3.Синоним = ПодчПодсистема1.Синоним + " (" + ПодчПодсистема1.Имя + ")";
					КонецЕсли;
					НоваяСтрока3.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
					НоваяСтрока3.Пометка = Ложь;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			Дерево.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.Константы.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Константы";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Константа;
		Для Каждого Объект Из Метаданные.Константы Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "Константы";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрока.Пометка = Ложь;
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			Дерево.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.Справочники.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Справочники";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Справочник;
		Для Каждого Объект Из Метаданные.Справочники Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "Справочники";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрока.Пометка = Ложь;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.Документы.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Документы";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Документ;
		Для Каждого Объект Из Метаданные.Документы Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "Документы";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.ЖурналыДокументов.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Журналы документов";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.ЖурналДокументов;
		Для Каждого Объект Из Метаданные.ЖурналыДокументов Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "ЖурналыДокументов";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрока.Пометка = Ложь;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.Отчеты.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Отчеты";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Отчет;
		Для Каждого Объект Из Метаданные.Отчеты Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "Отчеты";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрока.Пометка = Ложь;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;			
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.Обработки.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Обработки";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Обработка;
		Для Каждого Объект Из Метаданные.Обработки Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "Обработки";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрока.Пометка = Ложь;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;			
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.РегистрыСведений.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Регистры сведений";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.РегистрСведений;
		Для Каждого Объект Из Метаданные.РегистрыСведений Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "РегистрыСведений";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.РегистрыНакопления.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Регистры Накопления";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.РегистрНакопления;
		Для Каждого Объект Из Метаданные.РегистрыНакопления Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "РегистрыНакопления";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.РегистрыБухгалтерии.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Регистры бухгалтерии";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.РегистрБухгалтерии;
		Для Каждого Объект Из Метаданные.РегистрыБухгалтерии Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "РегистрыБухгалтерии";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	Если Метаданные.РегистрыРасчета.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Регистры расчета";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.РегистрРасчета;
		Для Каждого Объект Из Метаданные.РегистрыРасчета Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "РегистрыРасчета";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.ПланыВидовХарактеристик.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Планы видов характеристик";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.ПланВидовХарактеристик;
		Для Каждого Объект Из Метаданные.ПланыВидовХарактеристик Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "ПланыВидовХарактеристик";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.ПланыВидовРасчета.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Планы видов расчета";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.ПланВидовРасчета;
		Для Каждого Объект Из Метаданные.ПланыВидовРасчета Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип =  "ПланыВидовРасчета";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.ПланыСчетов.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Планы счетов";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.ПланСчетов;
		Для Каждого Объект Из Метаданные.ПланыСчетов Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип =  "ПланыСчетов";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.ПланыОбмена.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Планы обмена";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.ПланОбмена;
		Для Каждого Объект Из Метаданные.ПланыОбмена Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "ПланыОбмена";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.БизнесПроцессы.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Бизнес-процессы";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.БизнесПроцесс;
		Для Каждого Объект Из Метаданные.БизнесПроцессы Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "БизнесПроцессы";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если Метаданные.Задачи.Количество() > 0 Тогда 
		СтрокаГруппа = ГлавнаяГруппа.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Задачи";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Задача;
		Для Каждого Объект Из Метаданные.Задачи Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = "Задачи";
			НоваяСтрока.Имя = Объект.Имя;
			НоваяСтрока.ПолноеИмя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			
			Для каждого КомандаОбъекта ИЗ Объект.Команды Цикл
				строкаКоманда = СтрокаГруппаВсехКоманд.Строки.Добавить();
				строкаКоманда.Тип = НоваяСтрока.Тип+"."+Объект.Имя+".Команды";
				строкаКоманда.Имя = КомандаОбъекта.Имя;
				строкаКоманда.ПолноеИмя = КомандаОбъекта.ПолноеИмя();
				Если Объект.Синоним = "" Тогда
					строкаКоманда.Синоним = Объект.Имя + " (" + КомандаОбъекта.Имя + ")";
				Иначе
					строкаКоманда.Синоним = Объект.Синоним + " (" + КомандаОбъекта.Имя + ")";
				КонецЕсли;
				строкаКоманда.Картинка = НоваяСтрока.Картинка;
				строкаКоманда.Пометка = Ложь;
			КонецЦикла;
			
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			ГлавнаяГруппа.Строки.Удалить(СтрокаГруппа);
		КонецЕсли;
	КонецЕсли;
	
	Если СтрокаГруппаВсехКоманд.Строки.Количество() = 0 Тогда 
		ГлавнаяГруппа.Строки.Удалить(СтрокаГруппаВсехКоманд);
	КонецЕсли;
	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
	//конец работы с деревом метаданных
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНастройки(Команда)
	
	Элементы.ФормаПоказатьНастройки.Пометка = не Элементы.ФормаПоказатьНастройки.Пометка;
	Элементы.КомпоновщикНастроекПользовательскиеНастройки.Видимость = Элементы.ФормаПоказатьНастройки.Пометка;
	Элементы.КомпоновщикНастроекРолиПользовательскиеНастройки.Видимость = Элементы.ФормаПоказатьНастройки.Пометка;
	Элементы.ОсновнаяКоманднаяПанель.Видимость = Элементы.ФормаПоказатьНастройки.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ФормаПоказатьНастройки.Пометка = Элементы.КомпоновщикНастроекПользовательскиеНастройки.Видимость;
	ПеренестиСохранённыеПометки();
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиСохранённыеПометки()
	
	Если ТаблицаОтборМетаданные.Количество()>0 тогда
		Древко = РеквизитФормыВЗначение("ДеревоМетаданных");
		ПараметрыОтбора = Новый Структура("Имя");
		Для Каждого строкаТаблица Из ТаблицаОтборМетаданные Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора,строкаТаблица);
			НайденныеСтроки = Древко.Строки.НайтиСтроки(ПараметрыОтбора,Истина);
			Для каждого ЭлемМассив  ИЗ НайденныеСтроки Цикл 
				ЭлемМассив.Пометка = Истина;
			КонецЦикла;
 		КонецЦикла;
		ЗначениеВРеквизитФормы(Древко, "ДеревоМетаданных");
	КонецЕсли;
	
	Если ТаблицаОтборПользователиРоли.Количество()>0 тогда
		Древко = РеквизитФормыВЗначение("ДеревоРолей");
		ПараметрыОтбора = Новый Структура("Имя");
		Для Каждого строкаТаблица Из ТаблицаОтборПользователиРоли Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора,строкаТаблица);
			НайденныеСтроки = Древко.Строки.НайтиСтроки(ПараметрыОтбора,Истина);
			Для каждого ЭлемМассив  ИЗ НайденныеСтроки Цикл 
				ЭлемМассив.Пометка = Истина;
			КонецЦикла;
 		КонецЦикла;
		ЗначениеВРеквизитФормы(Древко, "ДеревоРолей");
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРолейПометкаПриИзменении(Элемент)
	
	ЭлементДрева = Элементы.ДеревоРолей.ТекущиеДанные;
	
	УстановитьГалочкиПодчЭлементам(ЭлементДрева, ЭлементДрева.Пометка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПроверяемыхПравПометкаПриИзменении(Элемент)
	
	ЭлементДрева = Элементы.ТаблицаПроверяемыхПрав.ТекущиеДанные;
	
	УстановитьГалочкиПодчЭлементам(ЭлементДрева, ЭлементДрева.Пометка);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьГалочкиПодчЭлементам(Узелок, Пометка)
	Узелок.Пометка = Пометка;
	Для каждого Узелочек Из Узелок.ПолучитьЭлементы()  Цикл
		УстановитьГалочкиПодчЭлементам(Узелочек, Пометка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхПометкаПриИзменении(Элемент)
	
	ЭлементДрева = Элементы.ДеревоМетаданных.ТекущиеДанные;
	
	
	УстановитьГалочкиПодчЭлементам(ЭлементДрева, ЭлементДрева.Пометка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСтруктуруТаблицПрав()
	
	МассивСтрок = новый Массив();
	МассивСтрок.Добавить(Тип("Строка"));
	ТИПСТРОКА100 = Новый ОписаниеТипов(МассивСтрок,, новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная));
	
	
	таб = новый ТаблицаЗначений;
	таб.Колонки.Добавить("ВидПрава", ТИПСТРОКА100);
	таб.Колонки.Добавить("Раздел"  , ТИПСТРОКА100);
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Администрирование"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "АдминистрированиеДанных"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ОбновлениеКонфигурацииБазыДанных"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "МонопольныйРежим"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "АктивныеПользователи"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ЖурналРегистрации"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ТонкийКлиент"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВебКлиент"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ТолстыйКлиент"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВнешнееСоединение"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Automation"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "РежимВсеФункции"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "СохранениеДанныхПользователя"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеОткрытиеВнешнихОбработок"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеОткрытиеВнешнихОтчетов"; новстрока.Раздел = "Общие";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Вывод"; новстрока.Раздел = "Общие";
	
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "Константы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "Константы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Константы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "Константы";
	
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "Справочники";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "Справочники";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Проведение"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ОтменаПроведения"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеПроведение"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеПроведениеНеоперативное"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяОтменаПроведения"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеИзменениеПроведенных"; новстрока.Раздел = "Документы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "Документы";
	
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "ЖурналыДокументов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "ЖурналыДокументов";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Использование"; новстрока.Раздел = "Отчеты";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Отчеты";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Использование"; новстрока.Раздел = "Обработки";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Обработки";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "ПланыВидовХарактеристик";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "ПланыВидовХарактеристик";
	
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "ПланыСчетов";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "ПланыСчетов";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "ПланыВидовРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "ПланыВидовРасчета";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "ПланыОбмена";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "ПланыОбмена";
	
	
	 
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "РегистрыСведений";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "РегистрыСведений";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "РегистрыСведений";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "РегистрыСведений";
	
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "РегистрыНакопления";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "РегистрыНакопления";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "РегистрыНакопления";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "РегистрыНакопления";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "УправлениеИтогами"; новстрока.Раздел = "РегистрыНакопления";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "РегистрыБухгалтерии";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "РегистрыБухгалтерии";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "РегистрыБухгалтерии";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "РегистрыБухгалтерии";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "УправлениеИтогами"; новстрока.Раздел = "РегистрыБухгалтерии";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "РегистрыРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "РегистрыРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "РегистрыРасчета";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "РегистрыРасчета";
	
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяАктивация"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Старт"; новстрока.Раздел = "БизнесПроцессы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивныйСтарт"; новстрока.Раздел = "БизнесПроцессы";
	
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Чтение"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Добавление"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Изменение"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Удаление"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеДобавление"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Редактирование"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдаление"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяПометкаУдаления"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеСнятиеПометкиУдаления"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеУдалениеПомеченных"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ВводПоСтроке"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивнаяАктивация"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Выполнение"; новстрока.Раздел = "Задачи";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "ИнтерактивноеВыполнение"; новстрока.Раздел = "Задачи";
	
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Команды";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Просмотр"; новстрока.Раздел = "Подсистемы";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Получение"; новстрока.Раздел = "ПараметрыСеанса";
	новстрока = таб.Добавить();  новстрока.ВидПрава = "Установка"; новстрока.Раздел = "ПараметрыСеанса";
	
	Возврат таб;
	
	
	
КонецФункции

&НаКлиенте
Процедура плюсануть(Команда)
	ЗапуститьПриложение("http://infostart.ru/public/236417/?rate=1");
КонецПроцедуры
