{3,
{42,0,1,0,0,1,0,1,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Пользователи 1С"}
},0,0,1,1,1,0,0,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{10,06ee6a21-061e-47f8-81c5-92ae8b8f3b5d,198ea630-fda2-4cda-8a23-f999f4c67ee6,239f0103-8de9-4fdf-b485-eb5531da7e51,3f01ed62-97f8-465b-b4f7-6517ac2bc994,5174ad3f-0569-42fd-8adf-011d8206db6c,5d41082e-9619-42ec-b96f-98b082b3a2f0,679b62d9-ff72-4329-bf3a-c0c32b311dd2,71e0226e-ebb2-4e33-8745-0a94a01bbf15,d7e9e72c-8fa7-430c-a3e9-aeadfd57dfc7,f3613d5c-20c6-46e5-b4d5-7d712ece1296},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,2,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"Закрыть",
{1,0},1,
{0,3772996b-41f4-4c47-a5a8-ea397db424ae},
{0},0,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",0,0,1,
{10,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗакрытьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Выгрузка",
{1,1,
{"ru","Выгрузка:"}
},
{1,1,
{"ru","Выгрузка"}
},0,1,0,61,0,0,0,
{3,4,
{0}
},
{7,1,60,
{0},700,0,0,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ФайлВыгрузки",1,0,
{1,1,
{"ru","Выгрузить   в   файл"}
},
{1,1,
{"ru","Укажите файл, в который будет сохранен список пользователей"}
},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},46,0,0,0,1,2,2,2,2,2,1,2,2,1,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"ФайлВыгрузкиНачалоВыбора",ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,"ФайлВыгрузкиОткрытие",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1,ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ФайлВыгрузкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФайлВыгрузкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ВыгрузитьПользователей",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",0,0,1,
{10,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыгрузитьПользователейРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыгрузкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Загрузка",
{1,1,
{"ru","Загрузка:"}
},
{1,1,
{"ru","Загрузка"}
},0,1,0,61,0,0,0,
{3,4,
{0}
},
{7,1,60,
{0},700,0,0,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ПриоритетФайла",4,0,
{1,0},
{1,0},
{1,
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПриоритетФайлаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПриоритетФайлаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ФормироватьПротокол",4,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ФормироватьПротоколКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормироватьПротоколРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ФайлЗагрузки",1,0,
{1,0},
{1,1,
{"ru","Укажите файл, откуда будет выполнена загрузка списка пользователей"}
},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},46,0,0,0,1,2,2,2,2,2,1,2,2,1,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"ФайлЗагрузкиНачалоВыбора",ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,"ФайлЗагрузкиОткрытие",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1,ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ФайлЗагрузкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{33,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФайлЗагрузкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЗагрузитьПользователей",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",0,0,1,
{10,
{34,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗагрузитьПользователейРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗагрузкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",2,2,0,0,0,0,3,3,0,0,2},"
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФайлВыгрузки = ""IBUsers.xml"";
	ФайлЗагрузки = ""IBUsers.xml"";
	ПриоритетФайла = Ложь;
	ФормироватьПротокол = Истина;
	
	РежимИспользованияМодальностиБулево = Параметры.РежимИспользованияМодальностиБулево;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
#Если ВебКлиент Тогда
	// В веб-клиенте оставим только имена файлов
	ФайлВыгрузки = ""IBUsers.xml"";
	ФайлЗагрузки = ""IBUsers.xml"";
	// и уберем поля для предварительного выбора файлов, т.к. будут использоваться интерактивные методы
	Элементы.ФайлВыгрузки.Видимость = Ложь;
	Элементы.ФайлЗагрузки.Видимость = Ложь;
#КонецЕсли
	
КонецПроцедуры

// Выгрузка пользователей.

&НаКлиенте
Процедура ФайлВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбора.Заголовок = НСтр(""ru = 'Укажите файл для сохранения списка пользователей'"", ""ru"");
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	ДиалогВыбора.ПолноеИмяФайла = ФайлВыгрузки;
	ДиалогВыбора.Фильтр = НСтр(""ru = 'XML-файлы|*.xml|Все файлы|*.*'"", ""ru"");
	Результат = ДиалогВыбора.Выбрать();
	Если Результат Тогда
		ФайлВыгрузки = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	Перем Файл;
	
	СтандартнаяОбработка = Ложь;
	Файл = Новый Файл(ФайлВыгрузки);
	Если НЕ Файл.Существует() Тогда
		ПредупреждениеСообщение(, ""Файл: "" + ФайлВыгрузки + "" не существует."");
		Возврат;
	КонецЕсли;
	
	ЗапуститьПриложение(ФайлВыгрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПользователей(Команда)
	
	Состояние(НСтр(""ru = 'Выполняется выгрузка списка пользователей...'"", ""ru""));
	Результат = ВыгрузитьПользователейНаСервере();
	Если НЕ Результат.Статус Тогда
		ПредупреждениеСообщение(, НСтр(""ru = 'При выполнении выгрузки пользователей произошла ошибка.'"", ""ru""));
		Возврат;
	КонецЕсли;
	
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		Получаемые = Новый Массив;
		ПолучаемыйФайл = Новый ОписаниеПередаваемогоФайла;
		ПолучаемыйФайл.Имя = ФайлВыгрузки;
		ПолучаемыйФайл.Хранение = Результат.Адрес;
		Получаемые.Добавить(ПолучаемыйФайл);
		Полученные = Новый Массив;
		Если ПолучитьФайлы(Получаемые, Полученные, """", Ложь) Тогда
			ПредупреждениеСообщение(, НСтр(""ru='Выгрузка завершена успешно. Выгружено пользователей: "" + Результат.Количество + ""'"", ""ru""));
		КонецЕсли;
	Иначе
		ПолучитьФайл(Результат.Адрес, ФайлВыгрузки, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Функция выполняет выгрузку списка пользователей информационной базы в файл.
// Для выгрузки используется схема, расположенная в макете обработки XMLСхемаUSERS.
//
// Возвращаемое значение:
//   Структура		- Структура. Результат выгрузки.
//		Статус		- Булево. Собственно результат выгрузки: Истина - удачное завершение.
//		Количество	- Число. Количество выгруженных пользователей.
//		Адрес		- Строка. Адрес временного хранилища, по которому расположен файл с данными.
&НаСервере
Функция ВыгрузитьПользователейНаСервере()
	
	РежимыЗапуска = Новый Соответствие;
	РежимыЗапуска.Вставить(РежимЗапускаКлиентскогоПриложения.Авто, ""Auto"");
	РежимыЗапуска.Вставить(РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение, ""OrdinaryApplication"");
	РежимыЗапуска.Вставить(РежимЗапускаКлиентскогоПриложения.УправляемоеПриложение, ""ManagedApplication"");
	
	Результат = Новый Структура(""Статус, Количество, Адрес"", Ложь, 0, """");
	ИмяФайла = ПолучитьИмяВременногоФайла();
	Фабрика = СоздатьФабрику();
	Сериализатор = Новый СериализаторXDTO(Фабрика);
	
	ТипРоль = Фабрика.Тип(ИмяПространстваИмен(), ""Role"");
	ТипПользователь = Фабрика.Тип(ИмяПространстваИмен(), ""User"");
	
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьФайл(ИмяФайла);
	Запись.ЗаписатьОбъявлениеXML();
	Запись.ЗаписатьНачалоЭлемента(""users"", ИмяПространстваИмен());
	Запись.ЗаписатьСоответствиеПространстваИмен(""xs"", ""http://www.w3.org/2001/XMLSchema"");
	Запись.ЗаписатьСоответствиеПространстваИмен(""xsi"", ""http://www.w3.org/2001/XMLSchema-instance"");
	Запись.ЗаписатьСоответствиеПространстваИмен(""usr"", ИмяПространстваИмен());
	
	СписокПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого Пользователь ИЗ СписокПользователей Цикл
		User = Фабрика.Создать(ТипПользователь);
		User.OSAuthentication = Пользователь.АутентификацияОС;
		User.StandardAuthentication = Пользователь.АутентификацияСтандартная;
		User.OpenIDAuthentication = Пользователь.АутентификацияOpenID;
		User.CannotChangePassword = Пользователь.ЗапрещеноИзменятьПароль;
		User.Name = Пользователь.Имя;
		Если Пользователь.ОсновнойИнтерфейс <> Неопределено Тогда
			User.DefaultInterface = Пользователь.ОсновнойИнтерфейс.Имя;
		КонецЕсли;
		User.ShowInList = Пользователь.ПоказыватьВСпискеВыбора;
		User.FullName = Пользователь.ПолноеИмя;
		User.OSUser = Пользователь.ПользовательОС;
		User.RunMode = РежимыЗапуска[Пользователь.РежимЗапуска];
		User.StoredPasswordValue = Пользователь.СохраняемоеЗначениеПароля;
		User.UUID = Пользователь.УникальныйИдентификатор;
		Если Пользователь.Язык <> Неопределено Тогда
			User.Language = Пользователь.Язык.Имя;
		КонецЕсли;
		Для Каждого Роль ИЗ Пользователь.Роли Цикл
			Role = Фабрика.Создать(ТипРоль);
			Role.Name = Роль.Имя;
			User.Roles.Добавить(Role);
		КонецЦикла;
		Фабрика.ЗаписатьXML(Запись, User);
		Результат.Количество = Результат.Количество + 1;
	КонецЦикла;
	Запись.ЗаписатьКонецЭлемента();
	Запись.Закрыть();
	
	Данные = Новый ДвоичныеДанные(ИмяФайла);
	Результат.Адрес = ПоместитьВоВременноеХранилище(Данные);
	Результат.Статус = Истина;
	УдалитьФайлы(ИмяФайла);
	
	Возврат Результат;
	
КонецФункции

// Загрузка пользователей.

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = НСтр(""ru = 'Укажите файл для загрузки списка пользователей'"", ""ru"");
	ДиалогВыбора.ПолноеИмяФайла = ФайлЗагрузки;
	ДиалогВыбора.Фильтр = НСтр(""ru = 'XML-файлы|*.xml|Все файлы|*.*'"", ""ru"");
	Результат = ДиалогВыбора.Выбрать();
	Если Результат Тогда
		ФайлЗагрузки = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	Перем Файл;
	
	СтандартнаяОбработка = Ложь;
	Файл = Новый Файл(ФайлЗагрузки);
	Если НЕ Файл.Существует() Тогда
		ПредупреждениеСообщение(, ""Файл: "" + ФайлЗагрузки + "" не существует."");
		Возврат;
	КонецЕсли;
	
	ЗапуститьПриложение(ФайлЗагрузки);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПользователей(Команда)
	Перем Оповещение;
	
	ИмяПротокола = ""IBUsers_log.txt"";
	Адрес = """";
	Если ИспользоватьРежимМодальности() Тогда
		// Стандартно в модальном режиме (8.2/8.3) с обработкой результата.
		ПомещенныеФайлы = Новый Массив;
		Результат = ПоместитьФайлы( , ПомещенныеФайлы, ФайлЗагрузки, Ложь);
		Если Результат = Ложь Тогда
			Возврат;
		КонецЕсли;
		Адрес = ПомещенныеФайлы[0].Хранение;
		ЗагрузитьПользователейЗавершение(Результат, Адрес, ФайлЗагрузки, ИмяПротокола);
	Иначе
		// Стандартно в немодальном режиме (8.3) с обработкой результата.
		//+yuraos, 10.09.2015 - для обратной совместимости лучше использовать атрибут ""ЭтаФорма"", ""ЭтотОбъект"" появляется в режиме совместимости ""Версия 8.3.3"" и выше.
		Оповещение = Вычислить(""Новый ОписаниеОповещения(""""ЗагрузитьПользователейЗавершение"""", ЭтаФормаЭтотОбъект(), ИмяПротокола)"");
		Выполнить(""НачатьПомещениеФайла(Оповещение, Адрес, ФайлЗагрузки, Ложь)"");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПользователейЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ИмяПротокола) Экспорт
	
	Если Результат Тогда
		Состояние(НСтр(""ru = 'Выполняется загрузка пользователей информационной базы...'"", ""ru""));
		Результат = ЗагрузитьПользователейНаСервере(Адрес, ПриоритетФайла, ФормироватьПротокол);
		Если Результат.Статус = Ложь Тогда
			ПредупреждениеСообщение(, НСтр(""ru = 'При выполнении загрузки пользователей произошла ошибка.'"", ""ru""));
			Возврат;
		КонецЕсли;

		Если ФормироватьПротокол Тогда
			Если ИспользоватьРежимМодальности() Тогда
				Файл = Новый Файл(ФайлЗагрузки);
				ФайлПротокола = Файл.Путь + ИмяПротокола;
				ПолучитьФайл(Результат.ФайлПротокола, ФайлПротокола, Ложь);
				Текст = Новый ТекстовыйДокумент;
				Текст.Прочитать(ФайлПротокола);
				Текст.Показать(""Протокол загрузки пользователей"");
			Иначе
				ПолучитьФайл(Результат.ФайлПротокола, ИмяПротокола, Истина);
			КонецЕсли;
		Иначе
			Текст = НСтр(""ru = 'Загрузка пользователей завершена. Всего прочитано: %1. Загружено: %2. Совпадений: %3.'"", ""ru"");
			Текст = СтрЗаменить(Текст, ""%1"", Результат.ИзФайла);
			Текст = СтрЗаменить(Текст, ""%2"", Результат.Загружено);
			Текст = СтрЗаменить(Текст, ""%3"", Результат.Совпадений);
			ПредупреждениеСообщение(, Текст);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция выполняет загрузку списка пользователей информационной базы из файла.
// Для загрузки используется схема, расположенная в макете обработки XMLСхемаUSERS.
//
// Параметры
//  Адрес				- Строка. Адрес во временном хранилище, по которому расположен
//						загружаемый файл.
//  ПриоритетФайла		- Булево. Признак того, что нужно обновлять (Истина) данные пользователя
//						информационной базы данными из файла в случае совпадения имен.
//  ФормироватьПротокол	- Булево. Признак необходимости (Истина) формирования протокола загрузки.
//
// Возвращаемое значение:
//   Структура			- Структура. Результат загрузки.
//		Статус			- Булево. Собственно результат выгрузки: Истина - удачное завершение.
//		ИзФайла			- Число. Количество пользователей в файле с данными.
//		Загружено		- Число. Количество загруженных пользователей (в том числе совпадения).
//		Совпадений		- Число. Количество совпадений между информаицонной базой и файлом.
//		ФайлПротокола	- Строка. Адрес временного хранилища, по которому расположен файл с
//						протоколом (формируется только в случае, если ФормироватьПротокол = Истина).
&НаСервере
Функция ЗагрузитьПользователейНаСервере(Адрес, ПриоритетФайла, ФормироватьПротокол)
	
	Результат = Новый Структура(""Статус, ИзФайла, Загружено, Совпадений, ФайлПротокола"", Ложь, 0, 0, 0, """");
	
	РежимыЗапуска = Новый Соответствие;
	РежимыЗапуска.Вставить(""Auto"", РежимЗапускаКлиентскогоПриложения.Авто);
	РежимыЗапуска.Вставить(""OrdinaryApplication"", РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение);
	РежимыЗапуска.Вставить(""ManagedApplication"", РежимЗапускаКлиентскогоПриложения.УправляемоеПриложение);

	ИмяФайла = ПолучитьИмяВременногоФайла();
	Данные = ПолучитьИзВременногоХранилища(Адрес);
	Данные.Записать(ИмяФайла);
	
	Фабрика = СоздатьФабрику();
	Сериализатор = Новый СериализаторXDTO(Фабрика);
	ТипРоль = Фабрика.Тип(ИмяПространстваИмен(), ""Role"");
	ТипПользователь = Фабрика.Тип(ИмяПространстваИмен(), ""User"");
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ИмяФайла);
	Чтение.Прочитать();
	Чтение.ПерейтиКСодержимому();
	
	Если ФормироватьПротокол Тогда
		ИмяПротокола = ПолучитьИмяВременногоФайла(""log"");
		Протокол = Новый ЗаписьТекста(ИмяПротокола, КодировкаТекста.UTF8);
		ЗаписатьЭлементПротокола(Протокол, NStr(""ru = 'Приоритет данных из файла:'"", ""ru"") + "" "" + Строка(ПриоритетФайла));
	КонецЕсли;
	
	Если НЕ(Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента И Чтение.ЛокальноеИмя = ""users"") Тогда
		ЗаписатьЭлементПротокола(Протокол, NStr(""ru = 'ОШИБКА: Неверный формат файла. Отсутствует узел <users>.'"", ""ru""));
		Результат.ФайлПротокола = ЗакрытьФайлПротокола(Протокол, ИмяПротокола);
		Возврат Результат;
	КонецЕсли;
	Чтение.Прочитать();
	Чтение.ПерейтиКСодержимому();
	Пока Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента И Чтение.ЛокальноеИмя = ""User"" Цикл
		Попытка
			ПрочитанныйОбъект = Фабрика.ПрочитатьXML(Чтение, ТипПользователь);
			Результат.ИзФайла = Результат.ИзФайла + 1;
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ПрочитанныйОбъект.Name);
			Если ПользовательИБ <> Неопределено Тогда
				Результат.Совпадений = Результат.Совпадений + 1;
				Если НЕ ПриоритетФайла Тогда
					Если ФормироватьПротокол Тогда
						ЗаписатьЭлементПротокола(Протокол, СтрЗаменить(NStr(""ru = 'Пользователь: %1. Не изменен.'"", ""ru""), ""%1"", ПрочитанныйОбъект.Name));
					КонецЕсли;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ПользовательИБ = Неопределено Тогда
				Если ФормироватьПротокол Тогда
					ЗаписатьЭлементПротокола(Протокол, СтрЗаменить(NStr(""ru = 'Пользователь: %1. Создан новый.'"", ""ru""), ""%1"", ПрочитанныйОбъект.Name));
				КонецЕсли;
				ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
			Иначе	
				Если ФормироватьПротокол Тогда
					ЗаписатьЭлементПротокола(Протокол, СтрЗаменить(NStr(""ru = 'Пользователь: %1. Обновлен данными из файла.'"", ""ru""), ""%1"", ПрочитанныйОбъект.Name));
				КонецЕсли;
			КонецЕсли;
			
			ПользовательИБ.Имя = ПрочитанныйОбъект.Name;
			ПользовательИБ.ПолноеИмя = ПрочитанныйОбъект.FullName;
			ПользовательИБ.АутентификацияОС = ПрочитанныйОбъект.OSAuthentication;
			ПользовательИБ.АутентификацияOpenID = ПрочитанныйОбъект.OpenIDAuthentication;
			ПользовательИБ.АутентификацияСтандартная = ПрочитанныйОбъект.StandardAuthentication;
			ПользовательИБ.ЗапрещеноИзменятьПароль = ПрочитанныйОбъект.CannotChangePassword;
			ПользовательИБ.ПоказыватьВСпискеВыбора = ПрочитанныйОбъект.ShowInList;
			ПользовательИБ.ПользовательОС = ПрочитанныйОбъект.OSUser;
			ПользовательИБ.СохраняемоеЗначениеПароля = ПрочитанныйОбъект.StoredPasswordValue;
			ПользовательИБ.РежимЗапуска = РежимыЗапуска[ПрочитанныйОбъект.RunMode];
			Если ПрочитанныйОбъект.Установлено(""DefaultInterface"") Тогда
				ИзФайла = ПрочитанныйОбъект.DefaultInterface;
				Если Метаданные.Интерфейсы.Найти(ИзФайла) = Неопределено Тогда
					Если ФормироватьПротокол Тогда
						ЗаписатьЭлементПротокола(Протокол, СтрЗаменить(NStr(""ru = 'ОШИБКА: Интерфейс '%1' не обнаружен в информационной базе. Загрузка прервана.'"", ""ru""), ""%1"", ИзФайла));
					КонецЕсли;
					ВызватьИсключение ""Ошибка"";
				КонецЕсли;
				ПользовательИБ.ОсновнойИнтерфейс = Метаданные.Интерфейсы[ИзФайла];
			КонецЕсли;
			Если ПрочитанныйОбъект.Установлено(""Language"") Тогда
				ИзФайла = ПрочитанныйОбъект.Language;
				Если Метаданные.Языки.Найти(ИзФайла) = Неопределено Тогда
					Если ФормироватьПротокол Тогда
						ЗаписатьЭлементПротокола(Протокол, СтрЗаменить(NStr(""ru = 'ОШИБКА: Язык '%1' не обнаружен в информационной базе. Загрузка прервана.'"", ""ru""), ""%1"", ИзФайла));
					КонецЕсли;
					ВызватьИсключение ""Ошибка"";
				КонецЕсли;
				ПользовательИБ.Язык = Метаданные.Языки[ИзФайла];
			КонецЕсли;
			Для Каждого РольXDTO ИЗ ПрочитанныйОбъект.Roles Цикл
				ИзФайла = РольXDTO.Name;
				Если Метаданные.Роли.Найти(ИзФайла) = Неопределено Тогда
					Если ФормироватьПротокол Тогда
						ЗаписатьЭлементПротокола(Протокол, СтрЗаменить(NStr(""ru = 'ОШИБКА: Роль '%1' не обнаружена в информационной базе. Загрузка прервана.'"", ""ru""), ""%1"", ИзФайла));
					КонецЕсли;
					ВызватьИсключение ""Ошибка"";
				КонецЕсли;
				ПользовательИБ.Роли.Добавить(Метаданные.Роли[ИзФайла]);
			КонецЦикла;
			ПользовательИБ.Записать();
			Результат.Загружено = Результат.Загружено + 1;
		Исключение
			Если ФормироватьПротокол Тогда
				Результат.ФайлПротокола = ЗакрытьФайлПротокола(Протокол, ИмяПротокола);
			КонецЕсли;
			Чтение.Закрыть();
			УдалитьФайлы(ИмяФайла);
			Возврат Результат;
		КонецПопытки;
	КонецЦикла;
	
	Если ФормироватьПротокол Тогда
		Текст = НСтр(""ru = 'Загрузка пользователей завершена. Всего прочитано: %1. Загружено: %2. Совпадений: %3.'"", ""ru"");
		Текст = СтрЗаменить(Текст, ""%1"", Результат.ИзФайла);
		Текст = СтрЗаменить(Текст, ""%2"", Результат.Загружено);
		Текст = СтрЗаменить(Текст, ""%3"", Результат.Совпадений);
		ЗаписатьЭлементПротокола(Протокол, Текст);
		Результат.ФайлПротокола = ЗакрытьФайлПротокола(Протокол, ИмяПротокола);
	КонецЕсли;
	
	Чтение.Закрыть();
	УдалитьФайлы(ИмяФайла);
	Результат.Статус = Истина;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаписатьЭлементПротокола(ФайлПротокола, ТекстДляПротокола)
	
	ФайлПротокола.ЗаписатьСтроку(ТекстДляПротокола);
	
КонецПроцедуры

&НаСервере
Функция ЗакрытьФайлПротокола(ФайлПротокола, ИмяФайла)
	
	ФайлПротокола.Закрыть();
	Данные = Новый ДвоичныеДанные(ИмяФайла);
	Результат = ПоместитьВоВременноеХранилище(Данные);
	УдалитьФайлы(ИмяФайла);
	
	Возврат Результат;
	
КонецФункции

//+yuraos, 20.10.2015
&НаКлиенте
Функция ЭтаФормаЭтотОбъект()
	Попытка
		Возврат Вычислить(""ЭтотОбъект"");
	Исключение
		Возврат Вычислить(""ЭтаФорма"");
	КонецПопытки;
КонецФункции

&НаСервере
Функция ОбъектОбработка()
	Возврат РеквизитФормыВЗначение(""Объект"");
КонецФункции

&НаСервере
Функция ИмяПространстваИмен()
	
	Возврат ""http://v8.1c.ru/8.2/infobase/users-exchange"";
	
КонецФункции

&НаСервере
Функция СоздатьФабрику()
	
	Макет = ОбъектОбработка().ПолучитьМакет(""XMLСхемаUSERS"");
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(Макет.ПолучитьТекст());
	
	Построитель = Новый ПостроительDOM;
	Документ = Построитель.Прочитать(Чтение);
	
	ПостроительСхем = Новый ПостроительСхемXML;
	Схема = ПостроительСхем.СоздатьСхемуXML(Документ);
	
	НаборСхем = Новый НаборСхемXML;
	НаборСхем.Добавить(Схема);
	
	Возврат Новый ФабрикаXDTO(НаборСхем);
	
КонецФункции

&НаКлиенте
Процедура ПредупреждениеСообщение(Оповещение, ТекстПредупрежденияСообщения, Таймаут = 0, Заголовок = """")
	
	Если ИспользоватьРежимМодальности() Тогда
		// Стандартно в модальном режиме (8.2/8.3) с обработкой результата.
		Предупреждение(ТекстПредупрежденияСообщения, Таймаут, Заголовок);
	Иначе
		// Стандартно в немодальном режиме (8.3) с обработкой результата.
		Выполнить(""ПоказатьПредупреждение(Оповещение, ТекстПредупрежденияСообщения, Таймаут, Заголовок)"");
	КонецЕсли;;
		
КонецПроцедуры

&НаКлиенте
Функция ИспользоватьРежимМодальности()
	Возврат РежимИспользованияМодальностиБулево;
КонецФункции
",
{4,6,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",888e785d-b1c5-4835-8ecc-e992429b6cd8}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ФайлВыгрузки",
{1,1,
{"ru","Выгрузить в файл"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ФайлЗагрузки",
{1,1,
{"ru","Загрузить из файла"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ПриоритетФайла",
{1,1,
{"ru","При совпадении имен пользователей обновлять свойства пользователей"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ФормироватьПротокол",
{1,1,
{"ru","Формировать протокол загрузки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"РежимИспользованияМодальностиБулево",
{1,1,
{"ru","Режим использования модальности (булево)"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,2,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыгрузитьПользователей",
{1,1,
{"ru","Выгрузить пользователей..."}
},
{1,1,
{"ru","Выгрузить пользователей"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыгрузитьПользователей",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьПользователей",
{1,1,
{"ru","Загрузить пользователей..."}
},
{1,1,
{"ru","Загрузить пользователей"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьПользователей",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}