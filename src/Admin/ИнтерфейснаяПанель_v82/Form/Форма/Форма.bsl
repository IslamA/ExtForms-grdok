
&НаКлиенте
Процедура ФильтрИменПриИзменении(Элемент)
	
	ЗаполнитьДеревоИнтерфейса(Объект.ФильтрИмен);
	
	Если НЕ ПустаяСтрока(Объект.ФильтрИмен) Тогда
		
		ЭлементСписка = СписокФильтровИмен.НайтиПоЗначению(Объект.ФильтрИмен);
		Если ЭлементСписка = Неопределено Тогда
			СписокФильтровИмен.Вставить(0, Объект.ФильтрИмен);
		Иначе
			СписокФильтровИмен.Сдвинуть(ЭлементСписка, -СписокФильтровИмен.Индекс(ЭлементСписка));
		КонецЕсли;
			
		Если СписокФильтровИмен.Количество() > 10 Тогда
			СписокФильтровИмен.Удалить(СписокФильтровИмен[10]);
		КонецЕсли;
		
		Элементы.ФильтрИмен.СписокВыбора.ЗагрузитьЗначения(СписокФильтровИмен.ВыгрузитьЗначения());
		
	КонецЕсли;
	
	Для Каждого СтрокаДерева Из ДеревоИнтерфейса.ПолучитьЭлементы() Цикл
		Элементы.ДеревоИнтерфейса.Развернуть(СтрокаДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоИнтерфейсаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Попытка
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Форма) Тогда
			ОткрытьФорму(ТекущиеДанные.Тип + "." + ТекущиеДанные.Вид + ".Форма." + ТекущиеДанные.Форма);
			
		Иначе	
		
			Если ТекущиеДанные.Тип = "Константа" Тогда
				
				ОткрытьФорму(ТекущиеДанные.Тип + "." + ТекущиеДанные.Вид + ".ФормаКонстант");
				
			ИначеЕсли ТекущиеДанные.Тип = "ОбщаяФорма" Тогда
				
				ОткрытьФорму(ТекущиеДанные.Тип + "." + ТекущиеДанные.Вид);
				
			ИначеЕсли ТекущиеДанные.Тип = "РегламентноеЗадание" Тогда
				
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Имя",           ТекущиеДанные.Вид);
				ПараметрыФормы.Вставить("Действие",      "Изменить");
				
				ОткрытьФорму("ВнешняяОбработка.ИнтерфейснаяПанель.Форма.РегламентноеЗадание", ПараметрыФормы);
				
			ИначеЕсли ТекущиеДанные.Тип = "Обработка"
				ИЛИ ТекущиеДанные.Тип = "Отчет" Тогда
				
				ОткрытьФорму(ТекущиеДанные.Тип + "." + ТекущиеДанные.Вид + ".Форма");
				
			ИначеЕсли ТекущиеДанные.Тип = "ВнешнийОтчет" Тогда
				
				ИмяОбработки = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(ТекущиеДанные.Вид);
				ОткрытьФорму("ВнешнийОтчет." + ИмяОбработки + ".ФормаОбъекта");
				
			ИначеЕсли ТекущиеДанные.Тип = "ВнешняяОбработка" Тогда
				
				ИмяОбработки = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(ТекущиеДанные.Вид);
				ОткрытьФорму("ВнешняяОбработка." + ИмяОбработки + ".ФормаОбъекта");
				
			Иначе
				ОткрытьФорму(ТекущиеДанные.Тип + "." + ТекущиеДанные.Вид + ".ФормаСписка");
			КонецЕсли;
		
		КонецЕсли;
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрИменОчистка(Элемент, СтандартнаяОбработка)
	
	СписокФильтровИмен.Очистить();
	Элементы.ФильтрИмен.СписокВыбора.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ФильтрИмен.СписокВыбора.ЗагрузитьЗначения(СписокФильтровИмен.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ФильтрИмен = Настройки["Объект.ФильтрИмен"];
	
	Если ЗначениеЗаполнено(ФильтрИмен) Тогда
		ЗаполнитьДеревоИнтерфейса(ФильтрИмен);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоИнтерфейсаПередРазворачиванием(Элемент, Строка, Отказ)
	
	Строка1 = ДеревоИнтерфейса.НайтиПоИдентификатору(Строка);
	ДанныеРодителя = Строка1.ПолучитьРодителя();
	Если ДанныеРодителя = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Строка1 = ДеревоИнтерфейса.НайтиПоИдентификатору(Строка);
	
	Строка1Строки = Строка1.ПолучитьЭлементы();
	Строка1Строки.Очистить();
	
	СписокФорм = ПолучитьСписокФорм(Строка1.Тип, Строка1.Вид);
	
	Для каждого Элемент Из СписокФорм Цикл
		
		Строка2 = Строка1Строки.Добавить();
		Строка2.Форма          = Элемент.Имя;
		Строка2.Имя            = Элемент.Имя;
		Строка2.Представление  = Элемент.Представление;
		Строка2.Тип            = Строка1.Тип;
		Строка2.Вид            = Строка1.Вид;
		Строка2.ИндексКартинки = 8;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокФорм(Тип, Вид)
	
	Массив = Новый Массив;
	
	Если Вид = "Константа" Тогда
		Возврат Массив;
	КонецЕсли;
	
	ГруппаМетаданных = ПолучитьГруппуМетаданных(Тип);
	ОбъектМетаданных = ГруппаМетаданных[Вид];
	Для каждого ФормаМетаданных Из ОбъектМетаданных.Формы Цикл
		
		Структура = Новый Структура;
		Структура.Вставить("Имя",           ФормаМетаданных.Имя);
		Структура.Вставить("Представление", ФормаМетаданных.Представление());
		
		Массив.Добавить(Структура);
		
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Функция ЗаполнитьДеревоИнтерфейса(Фильтр)
	
	Если ТипЗнч(ДеревоИнтерфейса) = Тип("ДанныеФормыДерево") Тогда
		Строки = ДеревоИнтерфейса.ПолучитьЭлементы();
	Иначе
		Строки = ДеревоИнтерфейса.Строки;
	КонецЕсли;
	Строки.Очистить();
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Общие формы";	
	НоваяСтрока.Тип            = "ОбщаяФорма";
	НоваяСтрока.ИндексКартинки = 8;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Регламентные задания";	
	НоваяСтрока.Тип            = "РегламентноеЗадание";
	НоваяСтрока.ИндексКартинки = 9;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Константы";	
	НоваяСтрока.Тип            = "Константа";
	НоваяСтрока.ИндексКартинки = 7;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Справочники";	
	НоваяСтрока.Тип            = "Справочник";	
	НоваяСтрока.ИндексКартинки = 0;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Документы";	
	НоваяСтрока.Тип            = "Документ";
	НоваяСтрока.ИндексКартинки = 1;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Регистры сведений";	
	НоваяСтрока.Тип            = "РегистрСведений";
	НоваяСтрока.ИндексКартинки = 2;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Регистры накопления";	
	НоваяСтрока.Тип            = "РегистрНакопления";
	НоваяСтрока.ИндексКартинки = 3;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Бизнес-процессы";	
	НоваяСтрока.Тип            = "БизнесПроцесс";
	НоваяСтрока.ИндексКартинки = 4;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Задачи";	
	НоваяСтрока.Тип            = "Задача";
	НоваяСтрока.ИндексКартинки = 10;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Обработки";	
	НоваяСтрока.Тип            = "Обработка";
	НоваяСтрока.ИндексКартинки = 5;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Отчеты";	
	НоваяСтрока.Тип            = "Отчет";
	НоваяСтрока.ИндексКартинки = 6;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Планы видов характеристик";	
	НоваяСтрока.Тип            = "ПланВидовХарактеристик";
	НоваяСтрока.ИндексКартинки = 11;
	
	ДобавитьВетвьМетаданных(НоваяСтрока, Фильтр);
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Внешние отчеты";	
	НоваяСтрока.Тип            = "ВнешнийОтчет";
	НоваяСтрока.ИндексКартинки = 6;
	
	ДобавитьВнешниеОтчеты(НоваяСтрока, Фильтр, ПредопределенноеЗначение("Перечисление.ВидыДополнительныхОтчетовИОбработок.ДополнительныйОтчет"));
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Представление  = "Внешние обработки";	
	НоваяСтрока.Тип            = "ВнешняяОбработка";
	НоваяСтрока.ИндексКартинки = 5;
	
	ДобавитьВнешниеОтчеты(НоваяСтрока, Фильтр, ПредопределенноеЗначение("Перечисление.ВидыДополнительныхОтчетовИОбработок.ДополнительнаяОбработка"));
	
КонецФункции // ЗаполнитьДеревоИнтерфейса

&НаСервере
Процедура ДобавитьВетвьМетаданных(СтрокаДерева, Фильтр)
	
	ГруппаМетаданных = ПолучитьГруппуМетаданных(СтрокаДерева.Тип); 
	
	Для каждого ОбъектМетаданных Из ГруппаМетаданных Цикл
		
		Если Найти(ВРег(ОбъектМетаданных.Представление()), ВРег(Фильтр)) = 0 
			И Найти(ВРег(ОбъектМетаданных.Имя), ВРег(Фильтр)) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(СтрокаДерева) = Тип("ДанныеФормыЭлементДерева") Тогда
			Строка1 = СтрокаДерева.ПолучитьЭлементы().Добавить();	
		Иначе
			Строка1 = СтрокаДерева.Строки.Добавить();	
		КонецЕсли;
		
		Строка1.Тип            = СтрокаДерева.Тип;
		Строка1.Вид            = ОбъектМетаданных.Имя;
		Строка1.Имя            = ОбъектМетаданных.Имя;
		Строка1.Представление  = ОбъектМетаданных.Представление();
		Строка1.ИндексКартинки = СтрокаДерева.ИндексКартинки;
		
		Если СтрокаДерева.Тип = "ОбщаяФорма"
			ИЛИ СтрокаДерева.Тип = "РегламентноеЗадание"
			ИЛИ СтрокаДерева.Тип = "Константа"
			Тогда
		Иначе	
			Строка2 = Строка1.ПолучитьЭлементы().Добавить();
		КонецЕсли;	
		
	КонецЦикла;
	
	Если СтрокаДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДеревоИнтерфейса.ПолучитьЭлементы().Удалить(СтрокаДерева);
	КонецЕсли;	
	
КонецПроцедуры // ДобавитьВетвьМетаданных

&НаСервере
Процедура ДобавитьВнешниеОтчеты(СтрокаДерева, Фильтр, Вид)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Спр.Наименование,
	|	Спр.Ссылка
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК Спр
	|ГДЕ
	|	Спр.Наименование ПОДОБНО &Фильтр
	|	И Спр.Вид = &Вид";
	
	Запрос.Параметры.Вставить("Фильтр", "%" + Фильтр + "%");
	Запрос.Параметры.Вставить("Вид",    Вид);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ Из Таблица Цикл
		
		Если ТипЗнч(СтрокаДерева) = Тип("ДанныеФормыЭлементДерева") Тогда
			Строка1 = СтрокаДерева.ПолучитьЭлементы().Добавить();	
		Иначе
			Строка1 = СтрокаДерева.Строки.Добавить();	
		КонецЕсли;
		
		Строка1.Тип            = СтрокаДерева.Тип;
		Строка1.Вид            = СтрокаТЗ.Ссылка;
		Строка1.Имя            = СтрокаТЗ.Ссылка;
		Строка1.Представление  = СтрокаТЗ.Наименование;
		Строка1.ИндексКартинки = СтрокаДерева.ИндексКартинки;
		
	КонецЦикла;

	Если СтрокаДерева.ПолучитьЭлементы().Количество() = 0 Тогда
		ДеревоИнтерфейса.ПолучитьЭлементы().Удалить(СтрокаДерева);
	КонецЕсли;	
	
КонецПроцедуры // ДобавитьВетвьМетаданных

&НаСервереБезКонтекста
Функция ПолучитьГруппуМетаданных(Тип)
	
	Если Тип = "ОбщаяФорма" Тогда
		ГруппаМетаданных = Метаданные.ОбщиеФормы;
		
	ИначеЕсли Тип = "РегламентноеЗадание" Тогда
		ГруппаМетаданных = Метаданные.РегламентныеЗадания;
		
	ИначеЕсли Тип = "Константа" Тогда
		ГруппаМетаданных = Метаданные.Константы;
		
	ИначеЕсли Тип = "Справочник" Тогда
		ГруппаМетаданных = Метаданные.Справочники;
		
	ИначеЕсли Тип = "Документ" Тогда
		ГруппаМетаданных = Метаданные.Документы;
		
	ИначеЕсли Тип = "РегистрСведений" Тогда
		ГруппаМетаданных = Метаданные.РегистрыСведений;
		
	ИначеЕсли Тип = "РегистрНакопления" Тогда
		ГруппаМетаданных = Метаданные.РегистрыНакопления;
		
	ИначеЕсли Тип = "БизнесПроцесс" Тогда
		ГруппаМетаданных = Метаданные.БизнесПроцессы;
		
	ИначеЕсли Тип = "Задача" Тогда
		ГруппаМетаданных = Метаданные.Задачи;
		
	ИначеЕсли Тип = "Обработка" Тогда
		ГруппаМетаданных = Метаданные.Обработки;
		
	ИначеЕсли Тип = "Отчет" Тогда
		ГруппаМетаданных = Метаданные.Отчеты;
	
	ИначеЕсли Тип = "ПланВидовХарактеристик" Тогда
		ГруппаМетаданных = Метаданные.ПланыВидовХарактеристик;
		
	КонецЕсли;
	
	Возврат ГруппаМетаданных;
	
КонецФункции	
