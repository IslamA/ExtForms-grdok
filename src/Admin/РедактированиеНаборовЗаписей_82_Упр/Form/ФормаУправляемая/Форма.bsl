
//************************************************************************************************** 
&НаКлиенте
Процедура ВидНабораЗаписейПриИзменении(Элемент)

	//***** добавление на форму списка регистра сведений 
	ДобавитьСписокРегистраСведений(); 
	
КонецПроцедуры //ВидНабораЗаписейПриИзменении


//**************************************************************************************************
//* Процедура/Функция
//************************************************************************************************** 
&НаКлиенте
Процедура ВидНабораЗаписейОчистка(Элемент, СтандартнаяОбработка)

	//***** Очистка реквизитов
	СтандартнаяОбработка=Ложь;
	ВидНабораЗаписей=Неопределено;
	Регистратор=Неопределено;
	
	//***** Чтение набора записей и установка доступности
	ЧтениеНабораЗаписей();
	УстановкаДоступности();
	
КонецПроцедуры //ВидНабораЗаписейОчистка

&НаКлиенте
Процедура РегистраторПриИзменении(Элемент)
	
	Если не ЗначениеЗаполнено(Регистратор) Тогда 
		Возврат; 
	КонецЕсли; 
	
	//***** Чтение набора записей и установка доступности
	ЧтениеНабораЗаписей();
	УстановкаДоступности();

	
	//***** Получение списка регистров, доступных для выбранного регистратора 
	ПолучитьСписокРегистров(); 

	ДобавитьСписокРегистраСведений(); 
	
КонецПроцедуры


//**************************************************************************************************
//* Процедура/Функция
//************************************************************************************************** 
&НаСервере
Процедура ЧтениеНабораЗаписей__()

	//***** Описание переменных
	Перем лкНабор;
	//***** Проверка условия
	Если Не(Регистратор=Неопределено) И Не(Регистратор.Пустая()) Тогда
		
		//у нас в переменной ВидНабораЗаписей есть имя регистра, надо получить его метаданные 
		Попытка 
			лкМетаданные = Метаданные.РегистрыСведений[ВидНабораЗаписей]; 
			лкНабор=РегистрыСведений[ВидНабораЗаписей].СоздатьНаборЗаписей();
		Исключение 	
			Попытка 
				лкМетаданные = Метаданные.РегистрыНакопления[ВидНабораЗаписей]; 
				лкНабор=РегистрыНакопления[ВидНабораЗаписей].СоздатьНаборЗаписей();
			Исключение 	
				Попытка 
					лкМетаданные = Метаданные.РегистрыБухгалтерии[ВидНабораЗаписей]; 
					лкНабор=РегистрыБухгалтерии[ВидНабораЗаписей].СоздатьНаборЗаписей();
				Исключение 	
				КонецПопытки;
			КонецПопытки; 	
		КонецПопытки; 
		

		//	Если Метаданные.РегистрыСведений.Содержит(ВидНабораЗаписей) Тогда
		//	лкНабор=РегистрыСведений[ВидНабораЗаписей.Имя].СоздатьНаборЗаписей();
		//ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ВидНабораЗаписей) Тогда
		//	лкНабор=РегистрыНакопления[ВидНабораЗаписей.Имя].СоздатьНаборЗаписей();
		//ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(ВидНабораЗаписей) Тогда
		//	лкНабор=РегистрыБухгалтерии[ВидНабораЗаписей.Имя].СоздатьНаборЗаписей();
		//КонецЕсли;
		лкНабор.Отбор.Регистратор.Установить(Регистратор);
		лкНабор.Прочитать();
		НаборЗаписей.
		НаборЗаписей.Загрузить(лкНабор.Выгрузить());
	Иначе
		НаборЗаписей.Очистить(); 
	КонецЕсли; 
//	Элементы.НаборЗаписей.СоздатьКолонки();

КонецПроцедуры //ЧтениеНабораЗаписей


//**************************************************************************************************
//* Процедура/Функция
//************************************************************************************************** 
&НаКлиенте
Процедура УстановкаДоступности()

	//***** Установка доступности элементов
	//Элементы.Регистратор.Доступность=Не(ВидНабораЗаписей=Неопределено);
	//Элементы.НаборЗаписей.Доступность=Не(Регистратор=Неопределено) И Не(Регистратор.Пустая());

КонецПроцедуры //УстановкаДоступности

&НаСервере
// Процедура отрисовывает таблицу регистра на странице формы.
//
Процедура ЧтениеНабораЗаписей()
	
	ТаблицаРегистра1.Отбор.Регистратор.Значение = Регистратор; 
	ТаблицаРегистра1.Отбор.Регистратор.Использование = Истина; 
	лкНабор = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей(); 
	лкНабор.Отбор.Регистратор.Установить(Регистратор); 
	лкНабор.Прочитать(); 
	
	ТаблицаРегистра1.Очистить();
	
	//ТаблицаРегистра1.Загрузить(лкНабор.Выгрузить());  
	Для каждого Проводка из лкНабор Цикл 
		Новая = ТаблицаРегистра1.Добавить(); 
		ЗаполнитьЗначенияСвойств(Новая,Проводка); 
		//субконто Дт 
		Инд = 0; 
		Для каждого ВидСубконто из Проводка.СчетДт.ВидыСубконто Цикл 
			Инд = Инд + 1; 
			Новая["СубконтоДт"+Инд] = Проводка.СубконтоДт[ВидСубконто.ВидСубконто]; 
		КонецЦикла; 
		
		Инд = 0; 
		Для каждого ВидСубконто из Проводка.СчетКт.ВидыСубконто Цикл 
			Инд = Инд + 1; 
			Новая["СубконтоКт"+Инд] = Проводка.СубконтоКт[ВидСубконто.ВидСубконто]; 
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры 


&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
	Предупреждение("Набор записан!" ); 
КонецПроцедуры

&НаСервере 
Процедура ЗаписатьНаСервере()
	
	лкНабор = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей(); 
	лкНабор.Отбор.Регистратор.Установить(Регистратор); 
	
	
	//ТаблицаРегистра1.Загрузить(лкНабор.Выгрузить());  
	Для каждого Строка из ТаблицаРегистра1 Цикл 
		Проводка = лкНабор.Добавить(); 
		ЗаполнитьЗначенияСвойств(Проводка,Строка); 
		//субконто Дт 
		Инд = 0; 
		Для каждого ВидСубконто из Строка.СчетДт.ВидыСубконто Цикл 
			Инд = Инд + 1; 
			Проводка.СубконтоДт[ВидСубконто.ВидСубконто] = Строка["СубконтоДт"+Инд]; 
		КонецЦикла; 
		
		Инд = 0; 
		Для каждого ВидСубконто из Строка.СчетКт.ВидыСубконто Цикл 
			Инд = Инд + 1; 
			Проводка.СубконтоКт[ВидСубконто.ВидСубконто] = Строка["СубконтоКт"+Инд]; 
		КонецЦикла; 
		
	КонецЦикла; 
    лкНабор.ОбменДанными.Загрузка = ОбменДаннымиЗагрузка; 
	лкНабор.Записать(); 
	
КонецПроцедуры 

&НаСервере 
Процедура ДобавитьСписокРегистраСведений()
	
	Если НЕ ЗначениеЗаполнено(ВидНабораЗаписей) Тогда
		Возврат;
	КонецЕсли;	
	
	//***** Поиск нужного регистра 
	лкМетаданныеРегистра = неопределено; 
	лкТипНабораРегистра = ""; 
	Для каждого Регистр из Метаданные.РегистрыСведений Цикл 
		Если Регистр.Имя = ВидНабораЗаписей Тогда 
			лкМетаданныеРегистра = Регистр; 
			лкТипНабораРегистра = "РегистрСведенийНаборЗаписей."+лкМетаданныеРегистра.Имя; 
			Элементы.СтраницаРегистр.Заголовок = лкМетаданныеРегистра.Синоним;
		КонецЕсли; 
	КонецЦикла; 
	
	Если лкМетаданныеРегистра = Неопределено Тогда 
		Для каждого Регистр из Метаданные.РегистрыНакопления Цикл 
			Если Регистр.Имя = ВидНабораЗаписей Тогда 
				лкМетаданныеРегистра = Регистр; 
				лкТипНабораРегистра = "РегистрНакопленияНаборЗаписей."+лкМетаданныеРегистра.Имя; 			
				Элементы.СтраницаРегистр.Заголовок = лкМетаданныеРегистра.Синоним;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 

	//***** Если ранее уже был добавлен реквизит, то удалим его
	Попытка 
		МассивУдаляемыеРеквизиты = Новый Массив;
		МассивУдаляемыеРеквизиты.Добавить("ТаблицаРегистра");
		ИзменитьРеквизиты(,МассивУдаляемыеРеквизиты);
	Исключение
	КонецПопытки; 
	
	//***** Добавление реквизита формы
	МассивДобавляемыеРеквизиты = Новый Массив;
	МассивДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТаблицаРегистра", Новый ОписаниеТипов(лкТипНабораРегистра)));
	ИзменитьРеквизиты(МассивДобавляемыеРеквизиты);
	
	//***** Удаление элемента формы, если был ранее добавлен 
	лкЭлементДляУдаления = Элементы.Найти("ТаблицаРегистра"); 
	Если лкЭлементДляУдаления <> неопределено Тогда 
		Элементы.Удалить(лкЭлементДляУдаления); 
	КонецЕсли; 
			
	//***** Добавление элемента формы, который будет содержать добавленный реквизит
	Элемент = Элементы.Добавить("ТаблицаРегистра", Тип("ТаблицаФормы"),Элементы.СтраницаРегистр);	
	Элемент.Заголовок = "Регистр сведений";
	Элемент.ПутьКДанным = "ТаблицаРегистра";
	
	//***** Добавление колонки Период, такая есть  в любом регистре
	Колонка = Элементы.Добавить("ТаблицаРегистраПериод",Тип("ПолеФормы"),Элемент); 
	///!!!!!!!!!ВНИМАНИЕ!!! ВОТ С ЭТОЙ КОЛОНКОЙ УЖЕ ДВАЖДЫ ТУПИЛ ЕЕ НАДО ДОБАВЛЯТЬ 
	Колонка.Вид = ВидПоляФормы.ПолеВвода;
	//!!!!!---------
	Колонка.Заголовок = "Период";
	Колонка.ПутьКДанным = "ТаблицаРегистра.Период"; 
	
	//***** Если это оборотный регистр накопления, тогда надо добавить колонку ВидДвижения
	Если Метаданные.РегистрыНакопления.Содержит(лкМетаданныеРегистра) и лкМетаданныеРегистра.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда 
		Колонка = Элементы.Добавить("ТаблицаРегистраВидДвижения",Тип("ПолеФормы"),Элемент); 
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.Заголовок = "Вид движения";
		Колонка.ПутьКДанным = "ТаблицаРегистра.ВидДвижения"; 
	КонецЕсли; 	
	
	//***** Добавление колонок в соответствии со структурой регистра
	Для каждого Измерение из лкМетаданныеРегистра.Измерения Цикл 
		Колонка = Элементы.Добавить("ТаблицаРегистра"+Измерение.Имя,Тип("ПолеФормы"),Элемент); 
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.Заголовок = Измерение.Синоним;
		Колонка.ПутьКДанным = "ТаблицаРегистра."+Измерение.Имя; 
	КонецЦикла; 
	
	Для каждого Измерение из лкМетаданныеРегистра.Ресурсы Цикл 
		Колонка = Элементы.Добавить("ТаблицаРегистра"+Измерение.Имя,Тип("ПолеФормы"),Элемент); 
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.Заголовок = Измерение.Синоним;
		Колонка.ПутьКДанным = "ТаблицаРегистра."+Измерение.Имя; 
	КонецЦикла; 

    Для каждого Измерение из лкМетаданныеРегистра.Реквизиты Цикл 
		Колонка = Элементы.Добавить("ТаблицаРегистра"+Измерение.Имя,Тип("ПолеФормы"),Элемент); 
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.Заголовок = Измерение.Синоним;
		Колонка.ПутьКДанным = "ТаблицаРегистра."+Измерение.Имя; 
	КонецЦикла; 
	
	//***** Добавление кнопки "Записать регистр" в КоманднуюПанель 
	Кнопка = Элементы.Добавить("КнопкаЗаписатьРегистр",Тип("КнопкаФормы"),Элементы.ТаблицаРегистраКоманднаяПанель); 
	Кнопка.ИмяКоманды = "ЗаписатьРегистр";
	
	//***** Чтение набора записей по указанному Регистратору и вывод его в добавленный реквизит
	ЭтаФорма.ТаблицаРегистра.Отбор.Регистратор.Значение = Регистратор; 
	ЭтаФорма.ТаблицаРегистра.Отбор.Регистратор.Использование = Истина; 
	лкНабор = РеквизитФормыВЗначение("ТаблицаРегистра");
    лкНабор.Прочитать(); 
    ЗначениеВРеквизитФормы(лкНабор,"ТаблицаРегистра");

	//***** Делаем страницу с регистром текущей
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРегистр; 
	
КонецПроцедуры 

&НаСервере
Процедура ПолучитьСписокРегистров()

	//***** Описание переменных
	Перем лкСписок,лкМетаРег;
	
	//***** Получение списка выбора
	лкСписок=Элементы.ВидНабораЗаписей.СписокВыбора;
	лкСписок.Очистить();
	
	//***** Заполнение списка (регистры сведений)
	лкМетаданныеРегистратора = Регистратор.Метаданные(); 
	Для каждого лкМетаРег из лкМетаданныеРегистратора.Движения Цикл 
		Если не Метаданные.РегистрыБухгалтерии.Содержит(лкМетаРег) Тогда 
			лкСписок.Добавить(лкМетаРег.Имя,лкМетаРег.Представление());		
		КонецЕсли; 		
	КонецЦикла; 

	лкСписок.СортироватьПоПредставлению();
	
КонецПроцедуры //ПередОткрытием

&НаКлиенте
Процедура ЗаписатьРегистр(Команда)
	ЗаписатьРегистрНаСервере(); 
	Предупреждение("Регистр записан!");
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРегистрНаСервере() 
	
	лкНабор = РеквизитФормыВЗначение("ТаблицаРегистра");
    лкНабор.Записать(); 
    
	
КонецПроцедуры 



