
Процедура КнопкаВыполнитьНажатие(Кнопка)

	Для Каждого ЭлементРегистра Из СтруктураКоллизий Цикл
		Для Каждого СтрокаЗаписи Из ЭлементРегистра.Значение Цикл
			Если СтрокаЗаписи.Заменить Тогда
				СтрокаЗаписи.МенеджерЗамены.Записать();
			КонецЕсли;
			СтрокаЗаписи.МенеджерОригинала.Удалить();
		КонецЦикла;
	КонецЦикла;
	Закрыть();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	СтраницаШаблона = ЭлементыФормы.ОсновнаяПанель.Страницы.СтраницаШаблона;
	ТабличноеПолеШаблона = ЭлементыФормы.ТабличноеПолеШаблона;
	КолонкаШаблона = ТабличноеПолеШаблона.Колонки.КолонкаШаблона;
	
	Для Каждого ЭлементРегистра Из СтруктураКоллизий Цикл
		МетаданныеРегистра = Метаданные.РегистрыСведений[ЭлементРегистра.Ключ];
		СтраницаРегистра = ЭлементыФормы.ОсновнаяПанель.Страницы.Добавить("Страница" + ЭлементРегистра.Ключ,
			МетаданныеРегистра.Представление(), ЭлементРегистра);
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = СтраницаРегистра;
		ТабличноеПолеРегистра = ЭлементыФормы.Добавить(Тип("ТабличноеПоле"), "ТабличноеПоле" + ЭлементРегистра.Ключ, Истина, ЭлементыФормы.ОсновнаяПанель);
		ЗаполнитьЗначенияСвойств(ТабличноеПолеРегистра, ТабличноеПолеШаблона, "Ширина, Высота, Лево, Верх, ТолькоПросмотр, ИзменятьСоставСтрок");
		ТабличноеПолеРегистра.Значение = ЭлементРегистра.Значение;
		СтрокаСортировки = "";
		Для Каждого МетаИзмерение Из МетаданныеРегистра.Измерения Цикл
			СтрокаСортировки = СтрокаСортировки + "," + МетаИзмерение.Имя;
		КонецЦикла;
		ТабличноеПолеРегистра.Значение.Сортировать(Сред(СтрокаСортировки, 2));
		ТабличноеПолеРегистра.СоздатьКолонки();
		ЛксСкопироватьПривязки(ЭтаФорма, ТабличноеПолеРегистра, ТабличноеПолеШаблона);
		Для Каждого Колонка Из ТабличноеПолеРегистра.Колонки Цикл
			ЗаполнитьЗначенияСвойств(Колонка.ЭлементУправления, КолонкаШаблона.ЭлементУправления, 
				"ТолькоПросмотр, КнопкаОткрытия, КнопкаВыбора, КнопкаОчистки");
		КонецЦикла;
		КолонкаФлагаЗамены = ТабличноеПолеРегистра.Колонки.Заменить;
		КолонкаФлагаЗамены.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		КолонкаФлагаЗамены.ДанныеФлажка = КолонкаФлагаЗамены.Данные;
		ТабличноеПолеРегистра.Колонки.МенеджерЗамены.Видимость            = Ложь;
		ТабличноеПолеРегистра.Колонки.МенеджерОригинала.Видимость         = Ложь;
		ТабличноеПолеРегистра.Колонки.МенеджерЗамены.ИзменятьВидимость    = Ложь;
		ТабличноеПолеРегистра.Колонки.МенеджерОригинала.ИзменятьВидимость = Ложь;
		ТабличноеПолеРегистра.УстановитьДействие("ПриПолученииДанных", ТабличноеПолеШаблона.ПолучитьДействие("ПриПолученииДанных"));
	КонецЦикла;
	СтраницаШаблона.Видимость = Ложь;
	
КонецПроцедуры

Процедура КоманднаяПанельОбщаяВключитьВсе(Кнопка)
	
	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Значение.Значение.ЗаполнитьЗначения(Истина, "Заменить");
	ЭтаФорма.Обновить();
	
КонецПроцедуры

Процедура КоманднаяПанельОбщаяВыключитьВсе(Кнопка)

	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Значение.Значение.ЗаполнитьЗначения(Ложь, "Заменить");
	ЭтаФорма.Обновить();
	
КонецПроцедуры

Процедура ТабличноеПолеШаблонаПриПолученииДанных(Элемент, ОформленияСтрок)
	
	МетаданныеРегистра = Метаданные.РегистрыСведений[ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Значение.Ключ];
	МассивКоллекцийРеквизитов = Новый Массив;
	МассивКоллекцийРеквизитов.Добавить(МетаданныеРегистра.Ресурсы);
	МассивКоллекцийРеквизитов.Добавить(МетаданныеРегистра.Реквизиты);
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Для Каждого КоллекцияРеквизитов Из МассивКоллекцийРеквизитов Цикл
			Для Каждого МетаРеквизит Из КоллекцияРеквизитов Цикл
				ИмяКолонки = МетаРеквизит.Имя;
				Если ОформлениеСтроки.ДанныеСтроки["Оригинал" + ИмяКолонки] <> ОформлениеСтроки.ДанныеСтроки["Замена" + ИмяКолонки] Тогда 
					ОформлениеСтроки.Ячейки["Замена" + ИмяКолонки].ЦветФона = WebЦвета.Бирюзовый;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Копирует привязки между элементами форм.
//
// Параметры:
//  пФорма       – Форма – в которую копируем;
//  ЭлементПриемник – ЭлементУправления;
//  ЭлементИсточник – ЭлементУправления.
//
Процедура ЛксСкопироватьПривязки(пФорма, ЭлементПриемник, ЭлементИсточник) Экспорт

	Перем ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент, ГраницаВторогоЭлемента;
	
	Границы = Новый Массив;
	Границы.Добавить(ГраницаЭлементаУправления.Верх);
	Границы.Добавить(ГраницаЭлементаУправления.Низ);
	Границы.Добавить(ГраницаЭлементаУправления.Лево);
	Границы.Добавить(ГраницаЭлементаУправления.Право);
	Для Каждого Граница Из Границы Цикл
		ЭлементИсточник.ПолучитьПривязку( Граница, ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент,
										ГраницаВторогоЭлемента);
		Если ПервыйЭлемент <> Неопределено Тогда 
			ПервыйЭлемент = пФорма.ЭлементыФормы.Найти(ПервыйЭлемент.Имя);
			Если ПервыйЭлемент = Неопределено Тогда 
				ПервыйЭлемент = пФорма.Панель;
			КонецЕсли;
		КонецЕсли;
		Если ВторойЭлемент <> Неопределено Тогда 
			ВторойЭлемент = пФорма.ЭлементыФормы.Найти(ВторойЭлемент.Имя);
			Если ВторойЭлемент = Неопределено Тогда 
				ВторойЭлемент = пФорма.Панель;
			КонецЕсли;
		КонецЕсли;				
		ЭлементПриемник.УстановитьПривязку(Граница, ПервыйЭлемент, ГраницаПервогоЭлемента, ВторойЭлемент,
										ГраницаВторогоЭлемента); 
	КонецЦикла;

КонецПроцедуры // ЛксСкопироватьПривязки()


