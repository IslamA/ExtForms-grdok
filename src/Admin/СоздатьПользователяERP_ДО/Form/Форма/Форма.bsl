
&НаКлиенте
Процедура ПользовательОснованиеПриИзменении(Элемент)
	ПользовательОснованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПользовательОснованиеПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Пользователь", Объект.ПользовательОснование);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпрСостав.Ссылка КАК Группа
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК СпрСостав
	|ГДЕ
	|	СпрСостав.Пользователь = &Пользователь
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ГруппыПользователей.Загрузить(Таблица);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпрСостав.Ссылка КАК Группа
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК СпрСостав
	|ГДЕ
	|	СпрСостав.Пользователь = &Пользователь
	|АВТОУПОРЯДОЧИВАНИЕ";	
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ГруппыДоступа.Загрузить(Таблица);
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйПользовательПриИзменении(Элемент)
	
	Индекс = СтрНайти(ДанныеПользователя, "<");
	
	ПользовательФИО = СокрЛП(Сред(ДанныеПользователя, 1, Индекс - 1));
	
	МассивФИО = СтрРазделить(ДанныеПользователя, " ");
	ИмяВхода = МассивФИО[0] + Лев(МассивФИО[1], 1) + Лев(МассивФИО[2], 1);
	
	email = СокрЛП(СтрЗаменить(Сред(ДанныеПользователя, Индекс + 1), ">", ""));
	
	Индекс = СтрНайти(email, "@");
	Аутентификация = "\\UNISERVICE\" + Сред(email, 1, Индекс - 1);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.СтрокаСоединенияДО = "Srvr=""gr-rphost-01"";Ref=""docflow""";
	ТекущийЭлемент = Элементы.ПользовательОснование;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПользователя(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	СоздатьПользователяНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПользователяНаСервере()
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяВхода);
	Если ПользовательИБ = Неопределено Тогда
		
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
		ПользовательИБ.Имя              = ИмяВхода;
		ПользовательИБ.ПолноеИмя        = ПользовательФИО;
		ПользовательИБ.АутентификацияОС = Истина;
		ПользовательИБ.ПользовательОС   = Аутентификация;
		ПользовательИБ.АутентификацияСтандартная = Ложь;
		ПользовательИБ.Записать();
		
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ИдентификаторПользователяИБ", ПользовательИБ.УникальныйИдентификатор);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ИдентификаторПользователяИБ = &ИдентификаторПользователяИБ
	|	И НЕ Пользователи.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		ПользовательОбъект = Результат.Выгрузить()[0][0].ПолучитьОбъект();
		
	Иначе
		
		ПользовательОбъект = Справочники.Пользователи.СоздатьЭлемент();
		ПользовательОбъект.ИдентификаторПользователяИБ = ПользовательИБ.УникальныйИдентификатор;
		
	КонецЕсли;	
	
	ПользовательОбъект.Наименование  = ПользовательФИО;
	ПользовательОбъект.Подразделение = Объект.ПользовательОснование.Подразделение;
	
	СтрокаТЧ = ПользовательОбъект.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.EmailПользователя, "Вид");
	Если СтрокаТЧ = Неопределено Тогда
		
		СтрокаТЧ = ПользовательОбъект.КонтактнаяИнформация.Добавить();
		СтрокаТЧ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПользователя;
		
	КонецЕсли;	
	
	СтрокаТЧ.Представление = email;
	
	ПользовательОбъект.ОбменДанными.Загрузка = Истина;
	ПользовательОбъект.Записать();
	
	ПользовательСсылка = ПользовательОбъект.Ссылка;
	
	Для каждого СтрокаТЗ из ГруппыПользователей Цикл
		
		ГруппаОбъект = СтрокаТЗ.Группа.ПолучитьОбъект();
		
		НайденнаяСтрока = ГруппаОбъект.Состав.Найти(ПользовательСсылка, "Пользователь");
		Если НайденнаяСтрока = Неопределено Тогда
			
			НайденнаяСтрока = ГруппаОбъект.Состав.Добавить();
			НайденнаяСтрока.Пользователь = ПользовательСсылка;
			
			ГруппаОбъект.Записать();
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	
	Для каждого СтрокаТЗ из ГруппыДоступа Цикл
		
		ГруппаОбъект = СтрокаТЗ.Группа.ПолучитьОбъект();
		
		НайденнаяСтрока = ГруппаОбъект.Пользователи.Найти(ПользовательСсылка, "Пользователь");
		Если НайденнаяСтрока = Неопределено Тогда
			
			НайденнаяСтрока = ГруппаОбъект.Пользователи.Добавить();
			НайденнаяСтрока.Пользователь = ПользовательСсылка;
			
			ГруппаОбъект.Записать();
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

