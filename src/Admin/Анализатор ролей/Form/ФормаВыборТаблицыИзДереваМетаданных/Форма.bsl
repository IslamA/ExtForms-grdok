
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ВнешнийОтчет.АнализаторПравДоступа.ФормаВыборТаблицыИзДереваМетаданных.Модуль
//
// Автор: Уничкин Р. А. 15 января 2015 г. 19:15:37
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

//==================================================================================== Уничкин_РА [15.01.2015 19:16:12]=
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВариантАнализа = Параметры.ВариантАнализа;
	
	Если ВариантАнализа = "Роль" Тогда
		Заголовок = "Выбор роли для анализа";
		
	ИначеЕсли ВариантАнализа = "Объект" Тогда 
		Заголовок = "Выбор объекта для анализа";
		
	КонецЕсли; 
	
	сп_ПостроитьДеревоМетаданныхНаСервере();
КонецПроцедуры


//==================================================================================== Уничкин_РА [29.05.2015 16:40:56]=
&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Если ВариантАнализа = "Объект" Тогда
		СписокВыбораСтрокиФильтраОбъект.ЗагрузитьЗначения(Элементы.СтрокаФильтра.СписокВыбора.ВыгрузитьЗначения());
		
	ИначеЕсли ВариантАнализа = "Роль" Тогда			
		СписокВыбораСтрокиФильтраРоль.ЗагрузитьЗначения(Элементы.СтрокаФильтра.СписокВыбора.ВыгрузитьЗначения());
		
	КонецЕсли; 
	
КонецПроцедуры

//==================================================================================== Уничкин_РА [29.05.2015 16:39:58]=
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ВариантАнализа = "Объект" Тогда
		Элементы.СтрокаФильтра.СписокВыбора.ЗагрузитьЗначения(СписокВыбораСтрокиФильтраОбъект.ВыгрузитьЗначения());
		
	ИначеЕсли ВариантАнализа = "Роль" Тогда			
		Элементы.СтрокаФильтра.СписокВыбора.ЗагрузитьЗначения(СписокВыбораСтрокиФильтраРоль.ВыгрузитьЗначения());
		
	КонецЕсли; 	
	
КонецПроцедуры


//==================================================================================== Уничкин_РА [15.04.2015 19:46:32]=
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтрокаФильтра = "";

	Если ВариантАнализа = "Роль" Тогда
		ЭлементыДерева_2 = дзМетаданые.ПолучитьЭлементы();
		Элементы.дзМетаданные.Развернуть(ЭлементыДерева_2[0].ПолучитьИдентификатор(), Истина);
	КонецЕсли; 		
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ: дзМетаданные

//==================================================================================== Уничкин_РА [30.03.2015 16:05:54]=
&НаКлиенте
Процедура дзМетаданныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	стр_дз = дзМетаданые.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
	ПозТочки = Найти(стр_дз.ПолноеИмя, ".");
	
	Если ПозТочки = 0 Тогда
		Если ВариантАнализа <> "Объект" Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли; 	
		Если стр_дз.ПолноеИмя <> "Конфигурация" Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли; 	
	КонецЕсли; 
	
	ДанныеВыбора = Новый Структура("Имя, ПолноеИмя", стр_дз.ПолноеИмя, стр_дз.ПолноеИмяДляВыбора);
	
	ОповеститьОВыборе(ДанныеВыбора);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

//==================================================================================== Уничкин_РА [30.03.2015 15:03:38]=
&НаКлиенте
Процедура СтрокаФильтраПриИзменении(Элемент)
	
	Элем = Элементы.СтрокаФильтра.СписокВыбора.НайтиПоЗначению(СтрокаФильтра);
	Если Элем <> Неопределено Тогда
		Элементы.СтрокаФильтра.СписокВыбора.Удалить(Элем);			
	КонецЕсли; 
	Элементы.СтрокаФильтра.СписокВыбора.Вставить(0, СтрокаФильтра);
	
	Если Элементы.СтрокаФильтра.СписокВыбора.Количество() = 11 Тогда
		Элементы.СтрокаФильтра.СписокВыбора.Удалить(10);			
	КонецЕсли; 
	
	сп_ПостроитьДеревоМетаданныхНаСервере();		
	ЭлементыДерева_2 = дзМетаданые.ПолучитьЭлементы();
	
	Если ВариантАнализа = "Роль" Тогда		
		Элементы.дзМетаданные.Развернуть(ЭлементыДерева_2[0].ПолучитьИдентификатор(), Истина);
	Иначе
		Элементы.дзМетаданные.Развернуть(ЭлементыДерева_2[0].ПолучитьИдентификатор());
	КонецЕсли; 		
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ  (сп)


//==================================================================================== Уничкин_РА [29.05.2015 11:40:21]=
&НаСервере
Процедура сп_РекурсивноеЗаполнениеПодсистемНаСервере(СтруктураПараметров)
	
	МетаКоллекция = СтруктураПараметров.МетаКоллекция;
	
	ОтборПоФильтру = СтруктураПараметров.Свойство("ТаблицаФильтров");
	Если ОтборПоФильтру Тогда
		тзФильтр = СтруктураПараметров.ТаблицаФильтров;	
	КонецЕсли; 
	
	стр_дз_ур_0 = СтруктураПараметров.СтрокаДерева;
	
	Для каждого мп_1 Из МетаКоллекция Цикл
		
		ИмяТаблЕдЧ = "Подсистема";
		ПолноеИмя = "Подсистема." + мп_1.Имя;
		Синоним = мп_1.Синоним;
		
		ДобавлятьСтроку = Истина;
		Если ОтборПоФильтру Тогда
			
			нрИмяТаблЕдЧ =  НРег(ИмяТаблЕдЧ);
			нрПолноеИмя = НРег(ПолноеИмя);
			нрСиноним = НРег(Синоним);
			
			Для каждого стр_тзФильтр Из тзФильтр Цикл
				ДобавлятьСтроку = Ложь;
				
				стр_Фильтр = стр_тзФильтр.стр;
				Если НЕ ДобавлятьСтроку Тогда
					стр = нрПолноеИмя + " " + нрСиноним;
					ДобавлятьСтроку = Найти(стр, стр_Фильтр) > 0;						
				КонецЕсли; 	
				Если НЕ ДобавлятьСтроку Тогда
					ДобавлятьСтроку = Найти(нрСиноним, стр_Фильтр) > 0;
				КонецЕсли;
				Если НЕ ДобавлятьСтроку Тогда
					ДобавлятьСтроку = Найти(нрИмяТаблЕдЧ, стр_Фильтр) > 0;						
				КонецЕсли; 

				стр_тзФильтр.Найдено = 0 + ДобавлятьСтроку;
			КонецЦикла; 
			
			ДобавлятьСтроку = тзФильтр.Количество() = тзФильтр.Итог("Найдено");	
		КонецЕсли; 
		
		Если ДобавлятьСтроку Тогда
			стр_дз_ур_1 = стр_дз_ур_0.Строки.Добавить();
			стр_дз_ур_1.Вид = ИмяТаблЕдЧ;
			стр_дз_ур_1.ПолноеИмя = ПолноеИмя;
			стр_дз_ур_1.ПолноеИмяДляВыбора = мп_1.ПолноеИмя();
			стр_дз_ур_1.Синоним = Синоним;
			стр_дз_ур_1.Картинка = 1;
		Иначе
			стр_дз_ур_1 = стр_дз_ур_0;			
		КонецЕсли; 

		Если мп_1.Подсистемы.Количество() > 0 Тогда
			СтруктураПараметров.МетаКоллекция = мп_1.Подсистемы;
			СтруктураПараметров.СтрокаДерева = стр_дз_ур_1;
			
			сп_РекурсивноеЗаполнениеПодсистемНаСервере(СтруктураПараметров);
		КонецЕсли; 
		
		Если ДобавлятьСтроку Тогда
			Если стр_дз_ур_1.Строки.Количество() > 0 Тогда				
				Поиск = Новый Структура("Вид", "Подсистема");
				МассивСтрок = стр_дз_ур_1.Строки.НайтиСтроки(Поиск, Истина);				
				стр_дз_ур_1.КоличествоПодчиненных = МассивСтрок.Количество();
			КонецЕсли;	
		КонецЕсли; 
	КонецЦикла; 		

КонецПроцедуры
 

//==================================================================================== Уничкин_РА [30.03.2015 14:58:15]=
&НаСервере
Процедура сп_ПостроитьДеревоМетаданныхНаСервере()
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	
	тзСписокМетаданных = ОтчетОбъект.зт_СписокМетаданных_НаСервере();
	
	дз = свт_Метаданные_ДеревоЗначений();

	стр_ур_0 = дз.Строки.Добавить();
	стр_ур_0.Вид = "Конфигурация";
	стр_ур_0.ПолноеИмя = "Конфигурация";
	стр_ур_0.Синоним = Метаданные.Синоним;
	стр_ур_0.Картинка = 0;
	стр_ур_0.ПолноеИмяДляВыбора = "Конфигурация";

	
	ОтборПоФильтру = НЕ ПустаяСтрока(СтрокаФильтра);
	Если ОтборПоФильтру Тогда
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаФильтра, " ");		
		тзФильтр = Новый ТаблицаЗначений;
		тзФильтр.Колонки.Добавить("стр", Новый ОписаниеТипов("Строка"));
		тзФильтр.Колонки.Добавить("Найдено", Новый ОписаниеТипов("Число"));
		
		Для каждого Элем Из МассивПодстрок Цикл
			нс_Фильтр = тзФильтр.Добавить();
			нс_Фильтр.стр = НРег(Элем);
			нс_Фильтр.Найдено = 0;
		КонецЦикла; 
	КонецЕсли; 
	
	Для каждого стр_тз Из тзСписокМетаданных Цикл
		
		Вид = стр_тз.ИмяТаблицыМнЧ; 
		
		Если ВариантАнализа = "Роль" Тогда
			Если Вид <> "Роли" Тогда
				Продолжить;	
			КонецЕсли; 		
		ИначеЕсли ВариантАнализа = "Объект" Тогда
			Если Вид = "Роли" Тогда
				Продолжить;	
			КонецЕсли;
		КонецЕсли; 
				
		Если Вид = "Конфигурация" Тогда
			Продолжить;
		КонецЕсли;
				
		стр_ур_1 = стр_ур_0.Строки.Добавить();	
		стр_ур_1.Вид = Вид;
		стр_ур_1.ПолноеИмя = Вид;
		стр_ур_1.Картинка = стр_тз.Порядок;
		стр_ур_1.Синоним = стр_тз.Представление;

		МетаКоллекция = Метаданные[Вид];
		
		Если Вид = "Подсистемы" Тогда
			
			дз.Колонки.Добавить("КоличествоПодчиненных", Новый ОписаниеТипов("Число"));
			
			СтруктураПараметров = Новый Структура("МетаКоллекция, СтрокаДерева"
			, МетаКоллекция
			, стр_ур_1
			);
			
			Если ОтборПоФильтру Тогда
				СтруктураПараметров.Вставить("ТаблицаФильтров", тзФильтр);				
			КонецЕсли; 

			сп_РекурсивноеЗаполнениеПодсистемНаСервере(СтруктураПараметров);
			
			Если стр_ур_1.Строки.Количество() = 0 Тогда
				стр_ур_0.Строки.Удалить(стр_ур_1);
			Иначе
				МассивСтрокДЗ = дз.Строки.НайтиСтроки(Новый Структура("Вид", "Подсистема"), Истина);
				Для каждого стр_дз Из МассивСтрокДЗ Цикл
					
					Если стр_дз.КоличествоПодчиненных = 0 Тогда
						Продолжить;					
					КонецЕсли; 
					
					стр_дз.Вид = стр_дз.Вид + " ("+ стр_дз.КоличествоПодчиненных +")";					
				КонецЦикла; 
				
				стр_ур_1.Вид = стр_ур_1.Вид + " ("+ МассивСтрокДЗ.Количество() +")";
			КонецЕсли; 
			
			дз.Колонки.Удалить("КоличествоПодчиненных");
			Продолжить;
		КонецЕсли; 
	
		КоличествоВКоллекции = МетаКоллекция.Количество();
		Для каждого МетаТаблица Из МетаКоллекция Цикл	
			
			ИмяТаблЕдЧ =  стр_тз.ИмяТаблицыЕДЧ;
			ПолноеИмя = стр_тз.ИмяТаблицыЕДЧ + "." + МетаТаблица.Имя;
			Синоним = МетаТаблица.Синоним;
			
			Если ОтборПоФильтру Тогда
				
				нрИмяТаблЕдЧ =  НРег(ИмяТаблЕдЧ);
				нрПолноеИмя = НРег(ПолноеИмя);
				нрСиноним = НРег(Синоним);
				
				Для каждого стр_тзФильтр Из тзФильтр Цикл
					ДобавлятьСтроку = Ложь;
					
					стр_Фильтр = стр_тзФильтр.стр;
					Если НЕ ДобавлятьСтроку Тогда
						стр = нрПолноеИмя + " " + нрСиноним;
						ДобавлятьСтроку = Найти(стр, стр_Фильтр) > 0;						
					КонецЕсли; 	
					Если НЕ ДобавлятьСтроку Тогда
						ДобавлятьСтроку = Найти(нрСиноним, стр_Фильтр) > 0;
					КонецЕсли;
					Если НЕ ДобавлятьСтроку Тогда
						ДобавлятьСтроку = Найти(нрИмяТаблЕдЧ, стр_Фильтр) > 0;						
					КонецЕсли; 

					стр_тзФильтр.Найдено = 0 + ДобавлятьСтроку;
				КонецЦикла; 
				
				ДобавлятьСтроку = тзФильтр.Количество() = тзФильтр.Итог("Найдено");
				Если НЕ ДобавлятьСтроку Тогда
					КоличествоВКоллекции = КоличествоВКоллекции - 1;
					Продолжить;					
				КонецЕсли; 			
			КонецЕсли; 
			
			стр_ур_2 = стр_ур_1.Строки.Добавить();
			стр_ур_2.Вид = ИмяТаблЕдЧ;
			стр_ур_2.ПолноеИмя = ПолноеИмя;
			стр_ур_2.Синоним = Синоним;
			стр_ур_2.Картинка = стр_тз.Порядок;
			стр_ур_2.ПолноеИмяДляВыбора = МетаТаблица.ПолноеИмя();
		КонецЦикла; 
		
		стр_ур_1.Вид = стр_ур_1.Вид + " ("+ КоличествоВКоллекции +")";
		
		Если КоличествоВКоллекции = 0 Тогда
			стр_ур_0.Строки.Удалить(стр_ур_1);					
		КонецЕсли; 
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(дз, "дзМетаданые");
	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ: Структуры временных таблиц (свт)


//==================================================================================== Уничкин_РА [29.05.2015 11:29:25]=
&НаСервереБезКонтекста
Функция свт_Метаданные_ДеревоЗначений()
	
	дз = Новый ДеревоЗначений;
	дз.Колонки.Добавить("Вид");
	дз.Колонки.Добавить("ПолноеИмя");
	дз.Колонки.Добавить("ПолноеИмяДляВыбора");
	дз.Колонки.Добавить("Картинка");
	дз.Колонки.Добавить("Синоним");
	
	Возврат дз;
	
КонецФункции


 


