Перем мОтображатьВиртуальныеТаблицы;
Перем мОтображатьТаблицыИзменений;
Перем мОтображатьТабличныеЧасти;
Перем мОтображатьРегистры;
Перем мОтображатьОтчетыОбработки;
Перем мОтображатьСсылочныеОбъекты;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ 

// Процедура передает сделанные настройки в главную форму отчета.
//
Процедура мВыбрать()

	Результат = Новый Структура("ПолноеИмяОбъекта, Представление");

	Если ЭлементыФормы.ДеревоИсточников.ТекущаяСтрока <> Неопределено Тогда
		СтрТабличноеПоле = ЭлементыФормы.ДеревоИсточников.ТекущаяСтрока;
		Результат.ПолноеИмяОбъекта = СтрТабличноеПоле.ПолноеИмяОбъекта;
		Результат.Представление = СтрТабличноеПоле.Представление;
	КонецЕсли;

	Если МодальныйРежим Тогда 
		Закрыть(Результат);
	Иначе
		ОповеститьОВыборе(Результат);
	КонецЕсли;

КонецПроцедуры // мВыбрать()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "При открытии" формы.
//
Процедура ПриОткрытии()

	РежимВыбора = Истина;
	Если ВладелецФормы <> Неопределено Тогда
		ВладелецФормы.Панель.Доступность = Ложь;
	КонецЕсли; 

	СтруктураПараметров = НачальноеЗначениеВыбора;

	СтруктураПараметров.Свойство("ОтображатьВиртуальныеТаблицы", мОтображатьВиртуальныеТаблицы);
	СтруктураПараметров.Свойство("ОтображатьТаблицыИзменений", мОтображатьТаблицыИзменений);
	СтруктураПараметров.Свойство("ОтображатьТабличныеЧасти", мОтображатьТабличныеЧасти);
	СтруктураПараметров.Свойство("ОтображатьРегистры", мОтображатьРегистры);
	СтруктураПараметров.Свойство("ОтображатьОтчетыОбработки", мОтображатьОтчетыОбработки);
	СтруктураПараметров.Свойство("ОтображатьСсылочныеОбъекты", мОтображатьСсылочныеОбъекты);
	ЗаполнитьДеревоИсточников();
	НачальноеЗначениеВыбора = Неопределено;
	СтруктураПараметров.Свойство("НачальноеЗначениеВыбора", НачальноеЗначениеВыбора);
	НоваяТекущаяСтрока = ДеревоИсточников.Строки.Найти(НачальноеЗначениеВыбора, "ПолноеИмяОбъекта", Истина);
	Если НоваяТекущаяСтрока <> Неопределено Тогда
		ЭлементыФормы.ДеревоИсточников.ТекущаяСтрока = НоваяТекущаяСтрока;
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик попытки удаления строки из таблицы.
//
Процедура ДеревоПередУдалением(Элемент, Отказ)

	Отказ = Истина;

КонецПроцедуры // ТабличноеПолеПередУдалением()

// Процедура - обработчик выбора строки таблицы.
//
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Если ЗначениеЗаполнено(Элемент.ТекущаяСтрока.ПолноеИмяОбъекта) Тогда

		мВыбрать();

	КонецЕсли;

КонецПроцедуры // ТабличноеПолеВыбор()

// Процедура - обработчик попытки добавления строки в таблицу.
//
Процедура ДеревоПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;

КонецПроцедуры // ТабличноеПолеПередНачаломДобавления()

Процедура КнопкаОкНажатие(Кнопка)
	
    Если ЭлементыФормы.ДеревоИсточников.ТекущаяСтрока.Строки.Количество()=0 Тогда

	   мВыбрать();

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если ВладелецФормы <> Неопределено Тогда
		ВладелецФормы.Панель.Доступность = Истина;
	КонецЕсли; 
	
КонецПроцедуры

// Процедура предназначена для заполнения дерева таблиц, которые
// могут служить источниками данных.
//
Процедура ЗаполнитьДеревоИсточников() Экспорт
	
	Если ДеревоИсточников.Строки.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	КоллекцияКорневыхТипов = Новый Массив;
	СтрокиМетаОбъектов = ирПлатформа.ТаблицаТиповМетаОбъектов.НайтиСтроки(Новый Структура("Категория", 0));
	Для Каждого СтрокаТаблицыМетабОбъектов Из СтрокиМетаОбъектов Цикл
		Единственное = СтрокаТаблицыМетабОбъектов.Единственное;
		Если Ложь
			Или (Истина
				И мОтображатьСсылочныеОбъекты = Истина
				И ЛксЛиКорневойТипОбъектаБД(Единственное))
			Или (Истина
				И мОтображатьРегистры = Истина
				И ЛксЛиКорневойТипРегистраБД(Единственное))
		Тогда
			КоллекцияКорневыхТипов.Добавить(Единственное);
		КонецЕсли;
	КонецЦикла;
	Если мОтображатьОтчетыОбработки = Истина Тогда
		КоллекцияКорневыхТипов.Добавить("Обработка");
		КоллекцияКорневыхТипов.Добавить("Отчет");
	КонецЕсли;
	
	СтрокаТипаТабличнойЧасти = ирПлатформа.ПолучитьСтрокуТипаМетаОбъектов("ТабличнаяЧасть", , 2);
	
	Для Каждого КорневойТип Из КоллекцияКорневыхТипов Цикл
		СтрокаКорневогоТипа = ирПлатформа.ПолучитьСтрокуТипаМетаОбъектов(КорневойТип);
		МножественноеКорневогоТипа = СтрокаКорневогоТипа.Множественное;
		Если Метаданные[МножественноеКорневогоТипа].Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		НовыйИсточник = ДеревоИсточников.Строки.Добавить();
		НовыйИсточник.Представление = ЛксПолучитьПредставлениеИзИдентификатора(МножественноеКорневогоТипа);
		НовыйИсточник.ИндексКартинки = СтрокаКорневогоТипа.ИндексКартинкиМножественное;
		
		Для Каждого МетаИсточник Из Метаданные[МножественноеКорневогоТипа] Цикл
			ГлавнаяСтрока = НовыйИсточник.Строки.Добавить();
			ГлавнаяСтрока.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя();
			ГлавнаяСтрока.Представление = МетаИсточник.Представление();
			ГлавнаяСтрока.ИндексКартинки = СтрокаКорневогоТипа.ИндексКартинкиЕдинственное;
			
			Если мОтображатьТабличныеЧасти = Истина Тогда
				Если ЛксЛиКорневойТипОбъектаБД(КорневойТип) Тогда
					Если МетаИсточник.ТабличныеЧасти.Количество() > 0 Тогда
						Для Каждого МетаТабличнаяЧасть Из МетаИсточник.ТабличныеЧасти Цикл
							ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
							ДочерняяТаблица.ПолноеИмяОбъекта = МетаТабличнаяЧасть.ПолноеИмя();
							ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": " + МетаТабличнаяЧасть.Представление();
							ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если мОтображатьТаблицыИзменений = Истина Тогда
				Если Ложь
					Или ЛксЛиКорневойТипОбъектаБД(КорневойТип)
					Или ЛксЛиКорневойТипРегистраБД(КорневойТип)
				Тогда
					ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
					ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + "." + "Изменения";
					ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": " + "Изменения";
					ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;
				КонецЕсли;
			КонецЕсли;
			
			Если мОтображатьВиртуальныеТаблицы = Истина Тогда
				Если КорневойТип = "РегистрСведений" Тогда 
					Если Не Строка(МетаИсточник.ПериодичностьРегистраСведений) = "Непериодический" Тогда
						ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
						ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".СрезПоследних";
						ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": срез последних";
						ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;
					КонецЕсли;
					
				ИначеЕсли КорневойТип = "РегистрНакопления" Тогда 
					//ГлавнаяСтрокаТаблица = ГлавнаяСтрока.Строки.Добавить();
					//ГлавнаяСтрокаТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя();
					//ГлавнаяСтрокаТаблица.Представление = МетаИсточник.Представление()+": движения регистра";
					//
					//Если МетаИсточник.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
					//	
					//	ГлавнаяСтрокаТаблицаПриход = ГлавнаяСтрокаТаблица.Строки.Добавить();
					//	ГлавнаяСтрокаТаблицаПриход.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя();
					//	ГлавнаяСтрокаТаблицаПриход.Представление = МетаИсточник.Представление()+" движения: приход";
					//	
					//	ГлавнаяСтрокаТаблицаРасход = ГлавнаяСтрокаТаблица.Строки.Добавить();
					//	ГлавнаяСтрокаТаблицаРасход.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя();
					//	ГлавнаяСтрокаТаблицаРасход.Представление = МетаИсточник.Представление()+" движения: расход";
					//	
					//Иначе
					//	
					//	ГлавнаяСтрокаТаблицаДвижение=ГлавнаяСтрокаТаблица.Строки.Добавить();
					//	ГлавнаяСтрокаТаблицаДвижение.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя();
					//	ГлавнаяСтрокаТаблицаДвижение.Представление = МетаИсточник.Представление()+" движения: оборот";

					//КонецЕсли;
					
					ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
					ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".Обороты";
					ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": обороты";
					ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;

					Если МетаИсточник.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
						ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
						ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".Остатки";
						ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": остатки";
						ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;
						
						ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
						ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".ОстаткиИОбороты";
						ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": остатки и обороты";
						ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;
					КонецЕсли;
					
				ИначеЕсли КорневойТип = "РегистрБухгалтерии" Тогда 
					ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
					ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".Обороты";
					ДочерняяТаблица.Представление = МетаИсточник.Представление()+": обороты";
					ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;
					
					Если МетаИсточник.Корреспонденция Тогда
						ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
						ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".ОборотыДтКт";
						ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": обороты с корреспонденцией";
						ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;
					КонецЕсли;
					
					ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
					ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".ДвиженияССубконто";
					ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": движения с субконто";
					ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;

					ДочерняяТаблица =ГлавнаяСтрока.Строки.Добавить();
					ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".Остатки";
					ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": остатки";
					ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;

					ДочерняяТаблица = ГлавнаяСтрока.Строки.Добавить();
					ДочерняяТаблица.ПолноеИмяОбъекта = МетаИсточник.ПолноеИмя() + ".ОстаткиИОбороты";
					ДочерняяТаблица.Представление = МетаИсточник.Представление() + ": остатки и обороты";
					ДочерняяТаблица.ИндексКартинки = СтрокаТипаТабличнойЧасти.ИндексКартинкиЕдинственное;

				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДеревоИсточников()

ДеревоИсточников = Новый ДеревоЗначений;
ДеревоИсточников.Колонки.Добавить("ПолноеИмяОбъекта");
ДеревоИсточников.Колонки.Добавить("Представление");
ДеревоИсточников.Колонки.Добавить("ИндексКартинки");