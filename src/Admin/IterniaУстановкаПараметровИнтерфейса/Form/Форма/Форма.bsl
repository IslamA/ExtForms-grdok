
#Область ОбработчикиСобытийФормы
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) //Iternia (&) Geg AddOn Begin
	
	Если НЕ РольДоступна("ПолныеПрава") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У вас недостаточно прав для использования обработки!",,,, Отказ);
		Возврат;
	КонецЕсли;

	КодФормы = РеквизитФормыВЗначение("Объект").Метаданные().Имя;
	КлючНастроек = "Общее/НастройкиКлиентскогоПриложения";

	ЗаполнитьСписки();
	УстановитьУсловноеОформление();
	ВосстановитьНастройкиФормыНаСервере();
	ОбновитьСостояниеНаСервере();
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты) //Iternia (&) Geg AddOn Begin
	
	НайденныеСтроки = ТаблицаПользователей.НайтиСтроки(Новый Структура("Выбран", Истина));
	Если Не НайденныеСтроки.Количество() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нужно выбрать хотя-бы одного пользователя!",,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры //Iternia (&) Geg AddOn End

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОбновитьСостояние(Команда) //Iternia (&) Geg AddOn Begin
	
	ВывестиСостояние("Заполняю таблицу ..");
	ОбновитьСостояниеНаСервере();
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура ПриЗакрытии() //Iternia (&) Geg AddOn Begin
	
	СохранитьНастройкиФормыНаСервере();
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура ОткрытьЛого(Команда) //Iternia (&) Geg AddOn Begin
	
	ОткрытьФорму("ВнешняяОбработка." + КодФормы + ".Форма.IterniaLogo");
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура УстановитьПараметрыИнтерфейсаПользователям(Команда) //Iternia (&) Geg AddOn Begin
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
		
	Оповещение = Новый ОписаниеОповещения("ПродолжениеУстановкиПараметров", ЭтаФорма);
	ПоказатьВопрос(Оповещение, "Установить параметры интерфейса для выбранных пользователей?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура ПродолжениеУстановкиПараметров(Результат, ДополнительныеПараметры) Экспорт //Iternia (&) Geg AddOn Begin

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ВывестиСостояние("Устанавливаю новые параметры ..");
	
	Перезапуск = Ложь;
	УстановитьПараметрыНаСервере(Перезапуск);
	
	Если Перезапуск Тогда
		Оповещение = Новый ОписаниеОповещения("ОбработатьКомандуПерезапуска", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "Изменены параметры интерфейса для текущего пользователя, выполнить перезапуск приложения? 
									|В процессе перезапуска будут закрыты все окна без сохранения изменений!", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	КонецЕсли;

КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура ОбработатьКомандуПерезапуска(Результат, ДополнительныеПараметры) Экспорт //Iternia (&) Geg AddOn Begin

	ВывестиСостояние("Выполняю перезапуск приложения ..");
	ЗавершитьРаботуСистемы(Ложь, Истина);

КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура ВыбратьВсе(Команда) //Iternia (&) Geg AddOn Begin
	
	ОбработатьВсеНаСервере(Истина);
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура СнятьВсе(Команда) //Iternia (&) Geg AddOn Begin
	
	ОбработатьВсеНаСервере(Ложь);
	
КонецПроцедуры //Iternia (&) Geg AddOn End

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыДокументы

&НаКлиенте
Процедура ТаблицаПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) //Iternia (&) Geg AddOn Begin
	
	//Обработка расшифровки
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = ТаблицаПользователей.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ВывестиСостояние("Открываю элемент справочника ..");
	ПоказатьЗначение(, ТекущаяСтрока.Ссылка);
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура ТаблицаПользователейПередНачаломИзменения(Элемент, Отказ) //Iternia (&) Geg AddOn Begin
	
	ТекущаяСтрока = ТаблицаПользователей.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);
	
	Если ТекущаяСтрока.ПользовательИБНеСуществует ИЛИ ТекущаяСтрока.Недействителен Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя выбрать недействительного или несуществующего пользователя!",,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры //Iternia (&) Geg AddOn End

#КонецОбласти

#Область ОсновныеПроцедуры

&НаСервере
Процедура ОбновитьСостояниеНаСервере() //Iternia (&) Geg AddOn Begin

	ЗаполнитьТаблицуНаСервере();
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере() //Iternia (&) Geg AddOn Begin
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.Наименование КАК Наименование,
	|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ,
	|	Пользователи.Недействителен КАК Недействителен,
	|	ЛОЖЬ КАК ПользовательИБНеСуществует,
	|	НЕОПРЕДЕЛЕНО КАК ВариантИнтерфейса,
	|	НЕОПРЕДЕЛЕНО КАК РежимОткрытияФорм,
	|	НЕОПРЕДЕЛЕНО КАК ВариантМасштабаФорм,
	|	ЛОЖЬ КАК ОтображатьПанельРазделов,
	|	ЛОЖЬ КАК ОтображатьПанелиНавигацииИДействий
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи";
	
	ТаблицаЗначенияНастроекПользователей = Запрос.Выполнить().Выгрузить();
	Для каждого ТекПользователь Из ТаблицаЗначенияНастроекПользователей Цикл
		ТекПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекПользователь.ИдентификаторПользователяИБ);
		Если ТекПользовательИБ = Неопределено Тогда
			ТекПользователь.ПользовательИБНеСуществует = Истина; 
			Продолжить;
		КонецЕсли;
		
		ТекНастройка = ХранилищеСистемныхНастроек.Загрузить(КлючНастроек, "",, ТекПользовательИБ.Имя);
		
		//Настроек нет, создадим пустые настройки
		Если ТекНастройка = Неопределено Тогда
			ТекНастройка = Новый НастройкиКлиентскогоПриложения;
			ХранилищеСистемныхНастроек.Сохранить(КлючНастроек, "", ТекНастройка,, ТекПользовательИБ.Имя);
		КонецЕсли;
		
		//Превратим настройки в значения параметров
		Если ТекНастройка.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси Тогда
			ТекПользователь.ВариантИнтерфейса = 0;
		Иначе
			ТекПользователь.ВариантИнтерфейса = 1;
		КонецЕсли;
		
		Если ТекНастройка.РежимОткрытияФормПриложения = РежимОткрытияФормПриложения.Закладки Тогда
			ТекПользователь.РежимОткрытияФорм = 0;
		Иначе
			ТекПользователь.РежимОткрытияФорм = 1;
		КонецЕсли;
		
		Если ТекНастройка.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения.Авто Тогда
			ТекПользователь.ВариантМасштабаФорм = 0;
		ИначеЕсли ТекНастройка.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения.Компактный Тогда
			ТекПользователь.ВариантМасштабаФорм = 1;
		Иначе
			ТекПользователь.ВариантМасштабаФорм = 2;
		КонецЕсли;

		ТекПользователь.ОтображатьПанельРазделов = ТекНастройка.ОтображатьПанельРазделов;
		ТекПользователь.ОтображатьПанелиНавигацииИДействий = ТекНастройка.ОтображатьПанелиНавигацииИДействий;
	КонецЦикла;
	
	ТаблицаПользователей.Загрузить(ТаблицаЗначенияНастроекПользователей);

КонецПроцедуры //Iternia (&) Geg AddOn End

&НаСервере
Процедура УстановитьПараметрыНаСервере(Перезапуск = Ложь) //Iternia (&) Geg AddOn Begin
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого ТекПользователь Из ТаблицаПользователей Цикл
		Если НЕ ТекПользователь.Выбран Тогда
			Продолжить;
		КонецЕсли;
		
		ТекПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекПользователь.ИдентификаторПользователяИБ);
		Если ТекПользовательИБ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		
		Если ТекПользователь.ИдентификаторПользователяИБ = ПараметрыСеанса.ТекущийПользователь.ИдентификаторПользователяИБ Тогда
			Перезапуск = Истина;
		КонецЕсли;
		
		ТекНастройка = ХранилищеСистемныхНастроек.Загрузить(КлючНастроек, "",, ТекПользовательИБ.Имя);
		
		//Настроек нет, создадим пустые настройки
		Если ТекНастройка = Неопределено Тогда
			ТекНастройка = Новый НастройкиКлиентскогоПриложения;
			ХранилищеСистемныхНастроек.Сохранить(КлючНастроек, "", ТекНастройка,, ТекПользовательИБ.Имя);
		КонецЕсли;
		
		//Превратим значения параметров в настройки
		Если ВариантИнтерфейса = 0 Тогда
			ТекНастройка.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси;
		Иначе
			ТекНастройка.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2;
		КонецЕсли;
		
		Если РежимОткрытияФорм = 0 Тогда
			ТекНастройка.РежимОткрытияФормПриложения = РежимОткрытияФормПриложения.Закладки;
		Иначе
			ТекНастройка.РежимОткрытияФормПриложения = РежимОткрытияФормПриложения.ОтдельныеОкна;
		КонецЕсли;
		
		Если ВариантМасштабаФорм = 0 Тогда
			ТекНастройка.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения.Авто;
		ИначеЕсли ВариантМасштабаФорм = 1 Тогда
			ТекНастройка.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения.Компактный;
		Иначе
			ТекНастройка.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения.Обычный;
		КонецЕсли;

		ТекНастройка.ОтображатьПанельРазделов = ОтображатьПанельРазделов;
		ТекНастройка.ОтображатьПанелиНавигацииИДействий = ОтображатьПанелиНавигацииИДействий;
		
		ХранилищеСистемныхНастроек.Сохранить(КлючНастроек, "", ТекНастройка,, ТекПользовательИБ.Имя);
	КонецЦикла;

	ОбновитьСостояниеНаСервере();
	
КонецПроцедуры //Iternia (&) Geg AddOn End

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УстановитьУсловноеОформление() //Iternia (&) Geg AddOn Begin

	//Недействительный или несуществующий пользователь ИБ
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователей.Имя);

	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.Недействителен");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ПользовательИБНеСуществует");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.СеребристоСерый);

	//Недействительный пользователь
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователей.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.Недействителен");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.СеребристоСерый);

	//Вариант интерфейса
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейВариантИнтерфейса.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ВариантИнтерфейса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Такси");
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейВариантИнтерфейса.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ВариантИнтерфейса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "8.2");
	
	//Режим открытия форм
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейРежимОткрытияФорм.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.РежимОткрытияФорм");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Закладки");
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейРежимОткрытияФорм.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.РежимОткрытияФорм");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Отдельные окна");

	//Вариант масштаба форм
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейВариантМасштабаФорм.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ВариантМасштабаФорм");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Авто");
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейВариантМасштабаФорм.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ВариантМасштабаФорм");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Компактный");

	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейВариантМасштабаФорм.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ВариантМасштабаФорм");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 2;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Обычный");

	//Отображение панели разделов
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейОтображатьПанельРазделов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ОтображатьПанельРазделов");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Отображать");
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейОтображатьПанельРазделов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ОтображатьПанельРазделов");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "НЕ отображать");
	
	//Отображение панели разделов
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейОтображатьПанелиНавигацииИДействий.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ОтображатьПанелиНавигацииИДействий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "Отображать");
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейОтображатьПанелиНавигацииИДействий.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ОтображатьПанелиНавигацииИДействий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "НЕ отображать");
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаСервере
Процедура ВосстановитьНастройкиФормыНаСервере() //Iternia (&) Geg AddOn Begin
	
	НастройкиФормы = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(КодФормы, "");
	Если НастройкиФормы <> Неопределено Тогда
		Если НастройкиФормы.Свойство("ВариантИнтерфейса") Тогда
			ВариантИнтерфейса = НастройкиФормы.ВариантИнтерфейса;
		КонецЕсли;
		
		Если НастройкиФормы.Свойство("РежимОткрытияФорм") Тогда
			РежимОткрытияФорм = НастройкиФормы.РежимОткрытияФорм;
		КонецЕсли;
		
		Если НастройкиФормы.Свойство("ВариантМасштабаФорм") Тогда
			ВариантМасштабаФорм = НастройкиФормы.ВариантМасштабаФорм;
		КонецЕсли;
		
		Если НастройкиФормы.Свойство("ОтображатьПанельРазделов") Тогда
			ОтображатьПанельРазделов = НастройкиФормы.ОтображатьПанельРазделов;
		Иначе
			ОтображатьПанельРазделов = 1;
		КонецЕсли;
		
		Если НастройкиФормы.Свойство("ОтображатьПанелиНавигацииИДействий") Тогда
			ОтображатьПанелиНавигацииИДействий = НастройкиФормы.ОтображатьПанелиНавигацииИДействий;
		КонецЕсли;
	Иначе
		ОтображатьПанельРазделов = 1;
	КонецЕсли;
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаСервере
Процедура СохранитьНастройкиФормыНаСервере() //Iternia (&) Geg AddOn Begin
	
	НастройкиФормы = Новый Структура;
	НастройкиФормы.Вставить("ВариантИнтерфейса", ВариантИнтерфейса);
	НастройкиФормы.Вставить("РежимОткрытияФорм", РежимОткрытияФорм);
	НастройкиФормы.Вставить("ВариантМасштабаФорм", ВариантМасштабаФорм);
	НастройкиФормы.Вставить("ОтображатьПанельРазделов", ОтображатьПанельРазделов);
	НастройкиФормы.Вставить("ОтображатьПанелиНавигацииИДействий", ОтображатьПанелиНавигацииИДействий);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КодФормы,, НастройкиФормы);
			
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаКлиенте
Процедура ВывестиСостояние(ТекстСообщения) //Iternia (&) Geg AddOn Begin
	
	#Если НЕ ВебКлиент Тогда
	Состояние(НСтр("ru = '" + ТекстСообщения + "'"));
	#КонецЕсли
	
КонецПроцедуры //Iternia (&) Geg AddOn End

&НаСервере
Процедура ЗаполнитьСписки() //Iternia (&) Geg AddOn Begin

	//Вариант интерфейса
	СписокВариантИнтерфейса = Элементы.ВариантИнтерфейса.СписокВыбора;
	СписокВариантИнтерфейса.Очистить();
	
	СписокВариантИнтерфейса.Добавить(0, "Такси");
	СписокВариантИнтерфейса.Добавить(1, "8.2");
	
	//Режим открытия форм
	СписокРежимОткрытияФорм = Элементы.РежимОткрытияФорм.СписокВыбора;
	СписокРежимОткрытияФорм.Очистить();
	
	СписокРежимОткрытияФорм.Добавить(0, "Закладки");
	СписокРежимОткрытияФорм.Добавить(1, "Отдельные окна");
	
	//Вариант масштаба форм
	СписокВариантМасштабаФорм = Элементы.ВариантМасштабаФорм.СписокВыбора;
	СписокВариантМасштабаФорм.Очистить();
	
	СписокВариантМасштабаФорм.Добавить(0, "Авто");
	СписокВариантМасштабаФорм.Добавить(1, "Компактный");
	СписокВариантМасштабаФорм.Добавить(2, "Обычный");
	
	//Отображение панели разделов
	СписокОтображатьПанельРазделов = Элементы.ОтображатьПанельРазделов.СписокВыбора;
	СписокОтображатьПанельРазделов.Очистить();
	
	СписокОтображатьПанельРазделов.Добавить(0, "НЕ Отображать");
	СписокОтображатьПанельРазделов.Добавить(1, "Отображать");

	//Отображение панели навигации и действий
	СписокОтображатьПанелиНавигацииИДействий = Элементы.ОтображатьПанелиНавигацииИДействий.СписокВыбора;
	СписокОтображатьПанелиНавигацииИДействий.Очистить();
	
	СписокОтображатьПанелиНавигацииИДействий.Добавить(0, "НЕ Отображать");
	СписокОтображатьПанелиНавигацииИДействий.Добавить(1, "Отображать");

КонецПроцедуры //Iternia (&) Geg AddOn End

&НаСервере
Процедура ОбработатьВсеНаСервере(НовоеЗначениеВыбран) //Iternia (&) Geg AddOn Begin

	Для Каждого ТекСтрока Из ТаблицаПользователей Цикл
		Если ТекСтрока.ПользовательИБНеСуществует
			ИЛИ ТекСтрока.Недействителен
			Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрока.Выбран <> НовоеЗначениеВыбран Тогда
			ТекСтрока.Выбран = НовоеЗначениеВыбран;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры //Iternia (&) Geg AddOn End

#КонецОбласти
