
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ТабельУчетаРабочегоВремени"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Вид",             "ЗаполнениеОбъекта"); //может быть – ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов…
	ПараметрыРегистрации.Вставить("Назначение",      МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование",    "Проверка табеля"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия",          "1.0");
	ПараметрыРегистрации.Вставить("Информация",      "Проверка данных в табеле и по приказам");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Проверка табеля", "ПроверкаТабеля", "ОткрытиеФормы", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
		
	Возврат ПараметрыРегистрации;	
		
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры


Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПроверкаТабеля") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПроверкаТабеля", "Проверка табеля", СформироватьПечатнуюФорму_ПроверкаТабеля(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;

КонецПроцедуры

Функция СформироватьПечатнуюФорму_ПроверкаТабеля(МассивОбъектов, ОбъектыПечати) Экспорт
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МассивОбъектов[0], "ПериодРегистрации, Организация");
	
	ТекстЗапроса = "";
	ВсегоДней = День(КонецМесяца(Реквизиты.ПериодРегистрации));
	
	Для Счетчик = 1 По ВсегоДней Цикл
		
		Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			|
			|";
			
		КонецЕсли;	
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&ПериодРегистрации, ДЕНЬ, " + (Счетчик - 1) + ") КАК Дата,
		|	Док.Сотрудник,
		|	Док.Часов" + Счетчик + " КАК Часов,
		|	Док.ВидВремени" + Счетчик + " КАК ВидВремени,
		|	Док.ВидВремени" + Счетчик + ".БуквенныйКод КАК ВидВремениКод
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремени.ДанныеОВремени КАК Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка"
		
	КонецЦикла;	
		
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Дата,
	|	ВидВремени
	|ИТОГИ ПО
	|	Сотрудник,
	|	Дата
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ПериодРегистрации", Реквизиты.ПериодРегистрации);
	Запрос.Параметры.Вставить("Ссылка",            МассивОбъектов[0]);
	
	Запрос.Текст = ТекстЗапроса;
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = ПолучитьМакет("Макет");
	ТабДок = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	
	ТаблицаДанныхПоПриказам = ДанныеПоПриказам(МассивОбъектов, Реквизиты.ПериодРегистрации, Реквизиты.Организация);
	ТаблицаДанныхПоПриказам.Индексы.Добавить("Сотрудник, Дата");
	СтруктураОтбора = Новый Структура("Сотрудник, Дата");
	
	фЕстьРахождения = Ложь;
	Для каждого СтрокаСотрудник из Дерево.Строки Цикл
		
		Сотрудник = Неопределено;
			
		Для каждого СтрокаДата из СтрокаСотрудник.Строки Цикл
			
			Область.Параметры.Сотрудник = СтрокаДата.Сотрудник;
			Сотрудник = СтрокаДата.Сотрудник;
			
			Область.Параметры.Дата = СтрокаДата.Дата;
			
			ВидВремени = Неопределено;
			ВТабеле = ПредставлениеВремени(СтрокаДата.Строки, ВидВремени);
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаДата);
			НайденныеСтроки = ТаблицаДанныхПоПриказам.НайтиСтроки(СтруктураОтбора);
			ПоПриказам = ПредставлениеВремени(НайденныеСтроки);
			
			Если ЕстьРасхождения(ВТабеле, ПоПриказам) Тогда
			
				Область.Параметры.ВТабеле    = ВТабеле;
				Область.Параметры.ВидВремени = ВидВремени;
				Область.Параметры.ПоПриказам = ПоПриказам;
				Область.Параметры.Документ   = НайденныеСтроки[0].Документ;
				ТабДок.Вывести(Область);
				
				фЕстьРахождения = Истина;
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Если фЕстьРахождения = Ложь Тогда
		Область = Макет.ПолучитьОбласть("ОшибокНет");
		ТабДок.Вывести(Область);
	КонецЕсли;	
	
	Возврат ТабДок;
	
КонецФункции

Функция ЕстьРасхождения(ВТабеле, ПоПриказам)
	
	Если ПустаяСтрока(ПоПриказам) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ПоПриказам = "Я"
		И (
		  Найти(ВТабеле, "РВ") > 0 ИЛИ 
		  Найти(ВТабеле, "Я") > 0 ИЛИ 
		  Найти(ВТабеле, "ВЧ") > 0 ИЛИ 
		  Найти(ВТабеле, "Н") > 0
		  ) Тогда
		
		Возврат Ложь;
		
	ИначеЕсли ПоПриказам = "ОТ"
		И Найти(ВТабеле, "ОТ") > 0 Тогда
		
		Возврат Ложь;
		
	ИначеЕсли ПоПриказам <> "ОТ"
		И Найти(ВТабеле, "ОТ") > 0 Тогда
		
		Возврат Ложь;
		
	КонецЕсли;	
	
	Возврат Истина;
	
КонецФункции	

Функция ПредставлениеВремени(ТаблицаВидовВремени, ВидВремени = Неопределено)
	
	Результат = "";
	Для каждого СтрокаТЗ из ТаблицаВидовВремени Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЗ.ВидВремени) Тогда
			
			Если НЕ ПустаяСтрока(Результат) Тогда
				Результат = Результат + " ";
			КонецЕсли;	
			
			Результат = Результат + СтрокаТЗ.ВидВремени.БуквенныйКод;
			Если СтрокаТЗ.Часов <> 0 Тогда
				Результат = Результат + Строка(СтрокаТЗ.Часов);
			КонецЕсли;
			
			ВидВремени = СтрокаТЗ.ВидВремени;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции	

Функция ДанныеПоПриказам(МассивОбъектов, ПериодРегистрации, Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	Запрос.Параметры.Вставить("Организация",    Организация);
	Запрос.Параметры.Вставить("Дата1",          ПериодРегистрации);
	Запрос.Параметры.Вставить("Дата2",          КонецМесяца(ПериодРегистрации));
	Запрос.Параметры.Вставить("Календарь",      Константы.ОсновнойКалендарьПредприятия.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабельУчетаРабочегоВремениДанныеОВремени.Сотрудник
	|ПОМЕСТИТЬ Сотрудники
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремени.ДанныеОВремени КАК ТабельУчетаРабочегоВремениДанныеОВремени
	|ГДЕ
	|	ТабельУчетаРабочегоВремениДанныеОВремени.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботаВВыходныеИПраздничныеДниСотрудники.Сотрудник,
	|	РаботаВВыходныеИПраздничныеДниСотрудники.Дата,
	|	ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.Явка) КАК ВидВремени,
	|	0 КАК Часов,
	|	РаботаВВыходныеИПраздничныеДниСотрудники.Ссылка КАК Документ
	|ИЗ
	|	Документ.РаботаВВыходныеИПраздничныеДни.Сотрудники КАК РаботаВВыходныеИПраздничныеДниСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Сотрудники КАК Сотрудники
	|		ПО РаботаВВыходныеИПраздничныеДниСотрудники.Сотрудник = Сотрудники.Сотрудник
	|ГДЕ
	|	РаботаВВыходныеИПраздничныеДниСотрудники.Дата МЕЖДУ &Дата1 И &Дата2
	|	И РаботаВВыходныеИПраздничныеДниСотрудники.Ссылка.Проведен
	|	И РаботаВВыходныеИПраздничныеДниСотрудники.НеРаботал = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрОтпусков.Сотрудник,
	|	КалендарныеГрафики.ДатаГрафика,
	|	ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.ОсновнойОтпуск),
	|	0,
	|	РеестрОтпусков.Регистратор
	|ИЗ
	|	РегистрСведений.РеестрОтпусков КАК РеестрОтпусков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|		ПО (КалендарныеГрафики.ДатаГрафика МЕЖДУ РеестрОтпусков.ДатаНачалаПериодаОтсутствия И РеестрОтпусков.ДатаОкончанияПериодаОтсутствия)
	|			И (КалендарныеГрафики.Календарь = &Календарь)
	|ГДЕ
	|	РеестрОтпусков.ДокументОснование.Организация = &Организация";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Возврат Таблица;
	
КонецФункции
