&НаКлиенте
Процедура ПриОткрытии(Отказ)
	л_Отказ = Истина;
	ДокументЗаполнения = Параметры.ОбъектыНазначения[0];
	КлючПоиска = Новый Структура("Ключ", Параметры.ОбъектыНазначения[0]);
	Окна = ПолучитьОкна();
	МассивОкон = Новый Массив;
	Для ИндексОкон = 0 По  Окна.Количество() -1 Цикл
		Попытка
			ТекущееОкно = Окна.Получить(ИндексОкон);
			Если  ТипЗнч(ТекущееОкно) = Тип("ОкноКлиентскогоПриложения") ТОгда
				МассивОкон.Добавить(ТекущееОкно);
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;	
	
	ЭтоНужноеОкно = Ложь;
	Для каждого Окно из МассивОкон Цикл
		Попытка
			Если Окно.Содержимое[0].Объект.Ссылка = Параметры.ОбъектыНазначения[0] Тогда	
				ЭтоНужноеОкно = Истина;
			КонецЕсли;	
		Исключение
				Продолжить;
		КонецПопытки;
		Если НЕ Окно.Основное И ЭтоНужноеОкно Тогда
			Если ТипЗнч(Окно.Содержимое[0].ТекущийЭлемент) = Тип("ТаблицаФормы") Тогда 
				ТабличнаяЧасть = Окно.Содержимое[0].ТекущийЭлемент.Имя;
				Если ТипЗнч(Окно.Содержимое[0].ТекущийЭлемент.ТекущийЭлемент) = Тип("ПолеФормы") Тогда 
					Если Окно.Содержимое[0].ТекущийЭлемент.ТекущийЭлемент.Вид  = ВидПоляФОрмы.ПолеВвода Тогда
						л_Отказ = Ложь;
						ПолеИмяФормы = Параметры.ИмяФормы;
						ТекущееПоле = Окно.Содержимое[0].ТекущийЭлемент.ТекущийЭлемент.Имя;
						ПолеЗаполнения = СтрЗаменить(ТекущееПоле,ТабличнаяЧасть,"");
						ЗначениеЗаполнения = Окно.Содержимое[0].ТекущийЭлемент.ТекущиеДанные[ПолеЗаполнения];
						СтароеЗначениеЗаполнения = ЗначениеЗаполнения;
						СтроковыйТип = СтроковоеПредставлениеТипа(ТипЗнч(ЗначениеЗаполнения));
						ТипЗначенияЗаполнения = СтроковыйТип; 
						ОписаниеТипа = Новый ОписаниеТипов(СтроковыйТип);
						ЭтаФорма.Элементы.ЗначениеЗаполнения.ОграничениеТипа = ОписаниеТипа; 
						ЭтаФорма.Элементы.ЗначениеЗаполнения.ВыбиратьТип = Ложь; 
					Прервать;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	
	
	Если л_Отказ Тогда
		ТабличнаяЧасть = "---";
		ПолеЗаполнения    = "---";
		ЗначениеЗаполнения = "---";
		ТипЗначенияЗаполнения = "---";
		Элементы.ЗначениеЗаполнения.Доступность = Ложь;
		Элементы.ЗаполнитьВсе.Доступность = Ложь;
		Элементы.ЗаполнитьПустые.Доступность = Ложь;
		ЭтаФорма.Заголовок = "Не выбрано поле в табличной части или данное поле не заполняется!!!"; 
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьОбъект(НовыйОбъект, ДанныеДляЗаполнения, РежимЗаполнения) // 0 - Все, 1 - Пустые, 2 - Заменить текущие
	л_КолЗамен = 0; 
	Попытка
		Для Каждого РедактируемаяСтрока Из НовыйОбъект[ДанныеДляЗаполнения.ТекущаяТаблица] Цикл
			Если РежимЗаполнения = 0 Тогда
				РедактируемаяСтрока[ДанныеДляЗаполнения.ТекущееПоле] = ДанныеДляЗаполнения.ТекущееЗначение; 
				л_КолЗамен = л_КолЗамен + 1; 
			ИначеЕсли РежимЗаполнения = 1 Тогда
				Если НЕ ЗначениеЗаполнено(РедактируемаяСтрока[ДанныеДляЗаполнения.ТекущееПоле]) Тогда 
					РедактируемаяСтрока[ДанныеДляЗаполнения.ТекущееПоле] = ДанныеДляЗаполнения.ТекущееЗначение; 
					л_КолЗамен = л_КолЗамен + 1; 
				КонецЕсли; 	
			ИначеЕсли РежимЗаполнения = 2 Тогда	
				Если РедактируемаяСтрока[ДанныеДляЗаполнения.ТекущееПоле] = ДанныеДляЗаполнения.СтароеЗначениеЗаполнения Тогда 
					РедактируемаяСтрока[ДанныеДляЗаполнения.ТекущееПоле] = ДанныеДляЗаполнения.ТекущееЗначение; 
					л_КолЗамен = л_КолЗамен + 1; 
				КонецЕсли; 	
			КонецЕсли;	
		КонецЦикла;
	Исключение
		л_КолЗамен = Неопределено; 
	КонецПопытки;
	
	Возврат л_КолЗамен; 
КонецФункции

&НаСервере
Функция СтроковоеПредставлениеТипа(Тип) Экспорт
	
	Представление = "";
	
	Если ЭтоСсылка(Тип) Тогда
	
		ПолноеИмя = Метаданные.НайтиПоТипу(Тип).ПолноеИмя();
		ИмяОбъекта = РазложитьСтрокуВМассивПодстрок(ПолноеИмя, ".")[1];
		
		Если Справочники.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "СправочникСсылка";
		
		ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "ДокументСсылка";
		
		ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "БизнесПроцессСсылка";
		
		ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "ПланВидовХарактеристикСсылка";
		
		ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "ПланСчетовСсылка";
		
		ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "ПланВидовРасчетаСсылка";
		
		ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "ЗадачаСсылка";
		
		ИначеЕсли ПланыОбмена.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "ПланОбменаСсылка";
		
		ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Представление = "ПеречислениеСсылка";
		
		КонецЕсли;
		
		Результат = ?(Представление = "", Представление, Представление + "." + ИмяОбъекта);
		
	Иначе
		
		Результат = Строка(Тип);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЭтоСсылка(Тип) 
	
	Возврат Тип <> Тип("Неопределено") 
		И (Справочники.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ Документы.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ Перечисления.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыСчетов.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ БизнесПроцессы.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ БизнесПроцессы.ТипВсеСсылкиТочекМаршрутаБизнесПроцессов().СодержитТип(Тип)
		ИЛИ Задачи.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыОбмена.ТипВсеСсылки().СодержитТип(Тип));
	
КонецФункции

&НаСервере
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Процедура ЗаполнитьВсе(Команда)
	ДанныеДляЗаполнения = Новый Структура;
	ДанныеДляЗаполнения.Вставить("ТекущаяТаблица"	, ТабличнаяЧасть);
	ДанныеДляЗаполнения.Вставить("ТекущееПоле"  	, ПолеЗаполнения);
	ДанныеДляЗаполнения.Вставить("ТекущееЗначение"	, ЗначениеЗаполнения);
	КлючПоиска = Новый Структура("Ключ", ДокументЗаполнения);
	Форма = ОткрытьФорму(ПолеИмяФормы,КлючПоиска);
	НовыйОбъект = Форма.Объект;
	КолЗамен = ЗаполнитьОбъект(НовыйОбъект, ДанныеДляЗаполнения, 0);
	КопироватьДанныеФормы(НовыйОбъект, Форма.Объект);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОКЗавершение", ЭтотОбъект);
	Режим = РежимДиалогаВопрос.ОК;
	Если  КолЗамен = Неопределено Тогда
		Текст = "ОШИБКА, что то пошло не так!"; 
	ИначеЕсли  КолЗамен > 0 Тогда
		Текст = "Заполнено значений: " + Строка(КолЗамен);
		Форма.Модифицированность = Истина;
	Иначе
		Текст = "Ничего не заполнили!"; 
	КонецЕсли;	
	ПоказатьВопрос(ОписаниеОповещения, Текст, Режим, 0);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПустые(Команда)
	ДанныеДляЗаполнения = Новый Структура;
	ДанныеДляЗаполнения.Вставить("ТекущаяТаблица"	, ТабличнаяЧасть);
	ДанныеДляЗаполнения.Вставить("ТекущееПоле"  	, ПолеЗаполнения);
	ДанныеДляЗаполнения.Вставить("ТекущееЗначение"	, ЗначениеЗаполнения);
	КлючПоиска = Новый Структура("Ключ", ДокументЗаполнения);
	Форма = ОткрытьФорму(ПолеИмяФормы,КлючПоиска);
	НовыйОбъект = Форма.Объект;
	КолЗамен = ЗаполнитьОбъект(НовыйОбъект, ДанныеДляЗаполнения, 1);
	КопироватьДанныеФормы(НовыйОбъект, Форма.Объект);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОКЗавершение", ЭтотОбъект);
	Режим = РежимДиалогаВопрос.ОК;
	Если  КолЗамен = Неопределено Тогда
		Текст = "ОШИБКА, что то пошло не так!"; 
	ИначеЕсли  КолЗамен > 0 Тогда
		Текст = "Заполнено значений: " + Строка(КолЗамен);
		Форма.Модифицированность = Истина;
	Иначе
		Текст = "Ничего не заполнили!"; 
	КонецЕсли;	
	ПоказатьВопрос(ОписаниеОповещения, Текст, Режим, 0);
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьСтароеЗначениеНаНовое(Команда)
	ДанныеДляЗаполнения = Новый Структура;
	ДанныеДляЗаполнения.Вставить("ТекущаяТаблица"	, ТабличнаяЧасть);
	ДанныеДляЗаполнения.Вставить("ТекущееПоле"  	, ПолеЗаполнения);
	ДанныеДляЗаполнения.Вставить("ТекущееЗначение"	, ЗначениеЗаполнения);
	ДанныеДляЗаполнения.Вставить("СтароеЗначениеЗаполнения"	, СтароеЗначениеЗаполнения);
	КлючПоиска = Новый Структура("Ключ", ДокументЗаполнения);
	Форма = ОткрытьФорму(ПолеИмяФормы,КлючПоиска);
	НовыйОбъект = Форма.Объект;
	КолЗамен = ЗаполнитьОбъект(НовыйОбъект, ДанныеДляЗаполнения, 2);
	КопироватьДанныеФормы(НовыйОбъект, Форма.Объект);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОКЗавершение", ЭтотОбъект);
	Режим = РежимДиалогаВопрос.ОК;
	Если  КолЗамен = Неопределено Тогда
		Текст = "ОШИБКА, что то пошло не так!"; 
	ИначеЕсли  КолЗамен > 0 Тогда
		Текст = "Заполнено значений: " + Строка(КолЗамен);
		Форма.Модифицированность = Истина;
	Иначе
		Текст = "Ничего не заполнили!"; 
	КонецЕсли;	
	ПоказатьВопрос(ОписаниеОповещения, Текст, Режим, 0);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОКЗавершение(Ответ, ДопПараметры) Экспорт 
	Если ЭтаФорма.Открыта()Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ЗначениеЗаполненияПриИзменении(Элемент)
	ИсходнаяСтрока = "Значение заполнения"; 
	Если  ЗначениеЗаполнения <> СтароеЗначениеЗаполнения Тогда
		Элементы.ЗаменитьСтароеЗначение.Доступность = Истина;
		СтрокаСтароеЗначение =  " (Старое значение: " + Строка(СтароеЗначениеЗаполнения)+ " )"; 
		Элементы.ГруппаЗначенияЗаполнения.Заголовок = ИсходнаяСтрока + СтрокаСтароеЗначение; 
	Иначе	
		Элементы.ЗаменитьСтароеЗначение.Доступность = Ложь;
		Элементы.ГруппаЗначенияЗаполнения.Заголовок = ИсходнаяСтрока;
	КонецЕсли;	
КонецПроцедуры

