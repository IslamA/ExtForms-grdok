
&НаКлиенте
Перем ФормаДокумента;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.ОбъектыНазначения) = Тип("Массив") Тогда
		Объект.ДокументСсылка = Параметры.ОбъектыНазначения[0];
		НомерГТД = ПолучитьНомер(Объект.ДокументСсылка);
	КонецЕсли;
	
	ОбновитьДокумент = Истина;
	ПрисоединитьФайл = Истина;
	
	ПрочитатьСоотвестивеВидовДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Окна = ПолучитьОкна();
	НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Объект.ДокументСсылка);
	Для каждого пОкно из Окна Цикл
		
		Если пОкно.Основное Тогда
			Продолжить;
		КонецЕсли;
		
		Если НавигационнаяСсылка = пОкно.ПолучитьНавигационнуюСсылку() Тогда
			ФормаДокумента = пОкно.Содержимое[0];
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьСоотвестивеВидовДокументов()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ОбработкаОбъект.ПолучитьМакет("СоотвествиеВидовДокументов");
	
	СоответствиеВидовДокументов = Новый Структура;
	
	Для Счетчик = 2 По Макет.ВысотаТаблицы Цикл
		
		XMLКод = Макет.Область(Счетчик, 1, Счетчик, 1).Текст;
		Если НЕ ПустаяСтрока(XMLКод) Тогда
			
			СоответствиеВидовДокументов.Вставить("К_" + XMLКод, Макет.Область(Счетчик, 2, Счетчик, 2).Текст);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецФункции	

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Показать(Новый ОписаниеОповещения("КаталогНачалоВыбораЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		Объект.Каталог = ВыбранныеФайлы[0];
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура КаталогОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(Объект.Каталог);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура Прочитать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьПоискФайовЗавершение", ЭтотОбъект);
	НачатьПоискФайлов(ОписаниеОповещения, Объект.Каталог, "*.xml", Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
// Из формата yyyy-mm-dd в формат ddmmyy
Функция ДатаФормат(Парам)
	
	Массив = СтрРазделить(Парам, "-");
	Возврат Массив[2] + Массив[1] + Прав(Массив[0], 2);
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьНомер(ДокументСсылка)
	
	Возврат СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Номер"));
	
КонецФункции	

&НаКлиенте
Процедура НачатьПоискФайовЗавершение(НайденныеФайлы, ДополнительныеПараметры) Экспорт
	
	Элементы.Индикатор.МаксимальноеЗначение = НайденныеФайлы.Количество();
	Индикатор = 0;
	ЧтениеXML = Новый ЧтениеXML;
	
	Для каждого Файл из НайденныеФайлы Цикл
		
		МассивДокументов = Новый Массив;
		
		СтруктураФайла = Новый Структура;
		СтруктураФайла.Вставить("PresentedDocument", Новый Массив);
		
		ЧтениеXML.ОткрытьФайл(Файл.ПолноеИмя);
		Пока ЧтениеXML.Прочитать() Цикл
			
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				ИмяУзла = ЧтениеXML.Имя;
			КонецЕсли;
			
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
				И ЧтениеXML.Имя = "PresentedDocument" Тогда
				
				СтруктураPresentedDocument = Новый Структура;
				
			ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента
				И ЧтениеXML.Имя = "PresentedDocument" Тогда
				
				СтруктураФайла.PresentedDocument.Добавить(СтруктураPresentedDocument);
				
			ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
				
				Если ИмяУзла = "PrDocumentNumber"
					ИЛИ ИмяУзла = "PrDocumentDate"
					ИЛИ ИмяУзла = "PresentedDocumentModeCode" Тогда
					
					СтруктураPresentedDocument.Вставить(ИмяУзла, ЧтениеXML.Значение);	
					
				ИначеЕсли ИмяУзла = "TransportIdentifier"
					ИЛИ ИмяУзла = "TransportModeCode" 
					ИЛИ ИмяУзла = "CustomsCode" 
					ИЛИ ИмяУзла = "RegistrationDate" 
					ИЛИ ИмяУзла = "GTDNumber" Тогда
					
					СтруктураФайла.Вставить(ИмяУзла, ЧтениеXML.Значение);	
					
				КонецЕсли;	
				
			КонецЕсли;	
			
		КонецЦикла;
		
		ЧтениеXML.Закрыть();
		
		Индикатор = Индикатор + 1;
		ОбработкаПрерыванияПользователя();
		
		НомерГТДПрочитанный = СтруктураФайла.CustomsCode + "/" + ДатаФормат(СтруктураФайла.RegistrationDate) + "/" + СтруктураФайла.GTDNumber;
		
		Если НомерГТДПрочитанный = НомерГТД Тогда
			ИмяФайла = Файл.ПолноеИмя;
			ЗаполнитьФормуПоДанным(СтруктураФайла);
			Элементы.ФормаПеренестиВДокумент.КнопкаПоУмолчанию = Истина;
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФормуПоДанным(СтруктураФайла)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураФайла,, "PresentedDocument");
	PresentedDocument.Очистить();
	Для каждого СтрокаТЗ из СтруктураФайла.PresentedDocument Цикл
		
		НоваяСтрока = PresentedDocument.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		
		Попытка
			НоваяСтрока.ВидДокумента = СоответствиеВидовДокументов["К_" + НоваяСтрока.PresentedDocumentModeCode];
		Исключение
		КонецПопытки;	
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ЕстьФайл(ДокументСсылка, НомерГТД)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ВладелецФайла", ДокументСсылка);
	Запрос.Параметры.Вставить("Наименование",  НомерГТД);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка
	|ИЗ
	|	Справочник.ТаможеннаяДекларацияЭкспортПрисоединенныеФайлы КАК Спр
	|ГДЕ
	|	Спр.ВладелецФайла = &ВладелецФайла
	|	И Спр.Наименование = &Наименование
	|	И НЕ Спр.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции	

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Если ПрисоединитьФайл
		И НЕ ЕстьФайл(Объект.ДокументСсылка, НомерГТД)
		И ЗначениеЗаполнено(ИмяФайла) Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВладелецФайла",      Объект.ДокументСсылка);
		ДополнительныеПараметры.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
		ДополнительныеПараметры.Вставить("ПолноеИмяФайла",     ИмяФайла);
		ДополнительныеПараметры.Вставить("ИмяСоздаваемогоФайла", НомерГТД);
		
		ПрисоединенныеФайлыСлужебныйКлиент.ДобавитьФайлыРасширениеПредложено(Истина, ДополнительныеПараметры);
		
	КонецЕсли;	
	
	Если ОбновитьДокумент
		И ФормаДокумента <> Неопределено Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПеренестиВДокументЗавершение", ЭтотОбъект);
		Если ФормаДокумента.Объект.СопроводительныеДокументы.Количество() > 0 Тогда
			
			ПоказатьВопрос(ОписаниеОповещения, "Очистить табличную часть?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
			
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
			
		КонецЕсли;
		
	Иначе
		
		Закрыть();
		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокументЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	ФормаДокумента.Объект.СопроводительныеДокументы.Очистить();
	ФормаДокумента.Модифицированность = Истина;
	
	Для каждого СтрокаТЗ из PresentedDocument Цикл
		
		НоваяСтрока = ФормаДокумента.Объект.СопроводительныеДокументы.Добавить();
		НоваяСтрока.КодТС        = TransportModeCode;
		НоваяСтрока.ВидДокумента = СтрокаТЗ.ВидДокумента;
		НоваяСтрока.НомерТСД     = СтрокаТЗ.PrDocumentNumber;
		НоваяСтрока.ДатаТСД      = вДату(СтрокаТЗ.PrDocumentDate);
		
	КонецЦикла;	
	
	Закрыть();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция вДату(Парам)
	
	Массив = СтрРазделить(Парам, "-");
	
	Возврат Дата(Число(Массив[0]), Число(Массив[1]), Число(Массив[2]));
	
КонецФункции	