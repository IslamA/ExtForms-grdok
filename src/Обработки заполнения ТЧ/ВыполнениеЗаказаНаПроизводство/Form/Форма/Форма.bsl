
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Режим = "Ввод новых данных";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
	ЗаполнитьТаблицуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ЗаказНаПроизводство", Заказ);
	
	СтатусыМЛ = Новый Массив;
	СтатусыМЛ.Добавить(Перечисления.СтатусыМаршрутныхЛистовПроизводства.Создан);
	СтатусыМЛ.Добавить(Перечисления.СтатусыМаршрутныхЛистовПроизводства.КВыполнению);
	СтатусыМЛ.Добавить(Перечисления.СтатусыМаршрутныхЛистовПроизводства.Выполняется);
	Запрос.Параметры.Вставить("СтатусыМЛ_Новый", СтатусыМЛ);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка.Распоряжение КАК ЗаказНаПроизводство,
	|	Док.Ссылка.КодСтроки,
	|	СУММА(Док.КоличествоФакт) КАК КоличествоФакт
	|ПОМЕСТИТЬ МаршрутныеЛистыВыполненные
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК Док
	|ГДЕ
	|	Док.Ссылка.Распоряжение В(&ЗаказНаПроизводство)
	|	И Док.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыМаршрутныхЛистовПроизводства.Выполнен)
	|	И Док.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Ссылка.Распоряжение,
	|	Док.Ссылка.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(МаршрутныйЛистПроизводства.Ссылка) КАК Ссылка,
	|	МаршрутныйЛистПроизводства.Распоряжение КАК ЗаказНаПроизводство,
	|	МаршрутныйЛистПроизводства.КодСтроки,
	|	МаршрутныйЛистПроизводства.Подразделение
	|ПОМЕСТИТЬ МаршрутныеЛисты
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛистПроизводства
	|ГДЕ
	|	МаршрутныйЛистПроизводства.Распоряжение В(&ЗаказНаПроизводство)
	|	И МаршрутныйЛистПроизводства.Статус В(&СтатусыМЛ_Новый)
	|	И МаршрутныйЛистПроизводства.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутныйЛистПроизводства.Распоряжение,
	|	МаршрутныйЛистПроизводства.КодСтроки,
	|	МаршрутныйЛистПроизводства.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокПродукция.Ссылка КАК ЗаказНаПроизводство,
	|	ДокПродукция.Номенклатура,
	|	ДокПродукция.Характеристика,
	|	ДокПродукция.Назначение,
	|	ДокПродукция.КодСтроки,
	|	ДокПродукция.Количество КАК КоличествоПлан,
	|	ЕСТЬNULL(МаршрутныеЛистыВыполненные.КоличествоФакт, 0) КАК КоличествоФакт,
	|	ДокПродукция.Количество - ЕСТЬNULL(МаршрутныеЛистыВыполненные.КоличествоФакт, 0) КАК КоличествоДефицит,
	|	МаршрутныеЛисты.Ссылка КАК МаршрутныйЛист,
	|	РесурсныеСпецификацииВыходныеИзделия.Количество КАК КоличествоВПартии,
	|	МаршрутныеЛисты.Подразделение
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ДокПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаршрутныеЛисты КАК МаршрутныеЛисты
	|		ПО ДокПродукция.Ссылка = МаршрутныеЛисты.ЗаказНаПроизводство
	|			И ДокПродукция.КодСтроки = МаршрутныеЛисты.КодСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК РесурсныеСпецификацииВыходныеИзделия
	|		ПО ДокПродукция.Спецификация = РесурсныеСпецификацииВыходныеИзделия.Ссылка
	|			И (РесурсныеСпецификацииВыходныеИзделия.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаршрутныеЛистыВыполненные КАК МаршрутныеЛистыВыполненные
	|		ПО ДокПродукция.Ссылка = МаршрутныеЛистыВыполненные.ЗаказНаПроизводство
	|			И ДокПродукция.КодСтроки = МаршрутныеЛистыВыполненные.КодСтроки
	|ГДЕ
	|	ДокПродукция.Ссылка В(&ЗаказНаПроизводство)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводство,
	|	ДокПродукция.НомерСтроки";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ЕстьНазначение = Ложь;
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЗ.Назначение) Тогда
			ЕстьНазначение = Истина;
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Строки = ТаблицаДанных.ПолучитьЭлементы();
	Строки.Очистить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		НоваяСтрока = Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		НоваяСтрока.МаршрутныйЛистПредставление = Строка(НоваяСтрока.МаршрутныйЛист);
		
		НоваяСтрока.ПолучитьЭлементы().Добавить();
		
	КонецЦикла;	
	
	Таблица.Свернуть("Подразделение", "");
	Объект.Бригады.Очистить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЗ.Подразделение) Тогда
			НоваяСтрока = Объект.Бригады.Добавить();
			НоваяСтрока.Подразделение = СтрокаТЗ.Подразделение;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Элементы.ТаблицаДанныхНазначение.Видимость = ЕстьНазначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхКоличествоМестПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаДанных.ТекущиеДанные;
	ОбъемПачки = ПолучитьОбъемПачки(ТекущиеДанные.Характеристика);
	Если ОбъемПачки <> 0 Тогда
		
		ТекущиеДанные.Количество = Окр(ТекущиеДанные.КоличествоМест * ОбъемПачки, 3);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОбъемПачки(Характеристика)
	
	Возврат _ХарактеристикиНоменклатуры.ПолучитьОбъемПачки(Характеристика);
	
КонецФункции	

&НаКлиенте
Процедура ОтметитьВыполнение(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтметитьВыполнениеЗавершение", ЭтаФорма);
	ПоказатьВопрос(ОписаниеОповещения, "Отметить выплонение маршрутных листов?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВыполнениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОтметитьВыполнениеНаСервере();
		Состояние("Маршрутные листы обработаны");
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ОтметитьВыполнениеНаСервере()
	
	СоответствиеБригад = Новый Соответствие;
	Для каждого СтрокаТЗ из Объект.Бригады Цикл
		СоответствиеБригад.Вставить(СтрокаТЗ.Подразделение, СтрокаТЗ.Бригада);
	КонецЦикла;	
	
	Для каждого СтрокаТЗ из ТаблицаДанных.ПолучитьЭлементы() Цикл
		
		Если СтрокаТЗ.Количество <> 0 Тогда
			
			ВыполнитьМаршрутныйЛист(СтрокаТЗ.МаршрутныйЛист, СоответствиеБригад[СтрокаТЗ.Подразделение], СтрокаТЗ.Количество, СтрокаТЗ.КоличествоВПартии);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьМаршрутныйЛист(МаршрутныйЛист, Бригада, Количество, КоличествоВПартии)
	
	НачатьТранзакцию();
	
	ДокументОбъект = МаршрутныйЛист.ПолучитьОбъект();
	Если Ложь Тогда
		ДокументОбъект = Документы.МаршрутныйЛистПроизводства.СоздатьДокумент();
	КонецЕсли;	
	
	ДокументОбъект.Статус = Перечисления.СтатусыМаршрутныхЛистовПроизводства.Выполнен;
	
	ПроизведеноПартий = Количество / КоличествоВПартии;
	ДокументОбъект.Произведено = Окр(ПроизведеноПартий + 0.499);
	Если ДокументОбъект.Произведено > ДокументОбъект.Запланировано Тогда
		ДокументОбъект.Произведено = ДокументОбъект.Запланировано;
	КонецЕсли;	
	
	Коэффициент = ПроизведеноПартий / ДокументОбъект.Запланировано;
	
	// Факт
	ОперативныйУчетПроизводстваКлиентСервер.ПересчитатьКоличествоТабличнойЧасти(ДокументОбъект.ВыходныеИзделия,  Коэффициент, Истина, "Факт", "");
	ОперативныйУчетПроизводстваКлиентСервер.ПересчитатьКоличествоТабличнойЧасти(ДокументОбъект.ВозвратныеОтходы, Коэффициент, Истина, "Факт", "");
	
	ОперативныйУчетПроизводстваКлиентСервер.ПересчитатьКоличествоТабличнойЧасти(ДокументОбъект.МатериалыИУслуги, Коэффициент, Истина, "Факт", "");
	ОперативныйУчетПроизводстваКлиентСервер.ПересчитатьКоличествоТабличнойЧасти(ДокументОбъект.Трудозатраты,     Коэффициент, Ложь,   "Факт", "");
	
	// Нормативы
	КоэффициентПересчетаНормативов = ДокументОбъект.Произведено / ДокументОбъект.Запланировано;
	ДокументОбъект.ПересчитатьНормативы(КоэффициентПересчетаНормативов, Ложь);
	
	// Отклонения
	ДокументОбъект.ПересчитатьОтклонениеОтНормативов();
	
	Для каждого СтрокаТЧ из ДокументОбъект.Трудозатраты Цикл
		СтрокаТЧ.Бригада = Бригада;
	КонецЦикла;	
	
	ДокументОбъект.ПриИзмененииСтатуса(Неопределено,, Ложь);
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	КоличествоПартийДопроизвоство = ДокументОбъект.Запланировано - ДокументОбъект.Произведено;
	Если КоличествоПартийДопроизвоство > 0 Тогда
		СледМаршрутныйЛист = ЗапланироватьДопроизводство(МаршрутныйЛист, КоличествоПартийДопроизвоство);
	КонецЕсли;	
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапланироватьДопроизводство(Объект, ОсталосьДопроизвести)
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Распоряжение", Объект.Распоряжение);
	ДанныеЗаполнения.Вставить("Подразделение", Объект.Подразделение);
	ДанныеЗаполнения.Вставить("УправлениеМаршрутнымиЛистами", Объект.УправлениеМаршрутнымиЛистами);
	ДанныеЗаполнения.Вставить("КодСтроки", Объект.КодСтроки);
	ДанныеЗаполнения.Вставить("КодСтрокиЭтапыГрафик", Объект.КодСтрокиЭтапыГрафик);
	ДанныеЗаполнения.Вставить("Этап", Объект.Этап);
	ДанныеЗаполнения.Вставить("Начало", Объект.Начало);
	ДанныеЗаполнения.Вставить("Окончание", Объект.Окончание);
	ДанныеЗаполнения.Вставить("НачалоРаботыКлючевогоРабочегоЦентра", Объект.НачалоРаботыКлючевогоРабочегоЦентраПоГрафику);
	ДанныеЗаполнения.Вставить("ОкончаниеРаботыКлючевогоРабочегоЦентра", Объект.ОкончаниеРаботыКлючевогоРабочегоЦентраПоГрафику);
	ДанныеЗаполнения.Вставить("Запланировано", ОсталосьДопроизвести);
	ДанныеЗаполнения.Вставить("ДопроизводствоМаршрутногоЛиста", Объект.Ссылка);
	
	ДокументОбъект = Документы.МаршрутныйЛистПроизводства.СоздатьДокумент();
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	Если ДокументОбъект.ПроверитьЗаполнение() Тогда
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;	
	
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции	

&НаКлиенте
Процедура БригадаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.Бригады.Количество() = 0 Тогда
		
		
		
	ИначеЕсли Объект.Бригады.Количество() = 1 Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Новый Структура("Подразделение", Объект.Бригады[0].Подразделение));
		
		ОткрытьФорму("Справочник.Бригады.ФормаВыбора", ПараметрыФормы, Элемент);
		
	Иначе
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Бригады", Объект.Бригады);
		
		ОткрытьФорму("ВнешняяОбработка.ВыполнениеЗаказаНаПроизводство.Форма.ФормаБригады", ПараметрыФормы, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура БригадаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Бригады") Тогда
		Объект.Бригады[0].Бригада = ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДанныеФормыКоллекция") Тогда
		
		Объект.Бригады.Очистить();
		БригадаПредставление = "";
		Для каждого СтрокаТЗ из ВыбранноеЗначение Цикл
			
			НоваяСтрока = Объект.Бригады.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
			
			БригадаПредставление = БригадаПредставление + Строка(СтрокаТЗ.Бригада) + ", ";
			
		КонецЦикла;	
		БригадаПредставление = Сред(БригадаПредставление, 1, СтрДлина(БригадаПредставление) - 2);
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхПередРазворачиванием(Элемент, Строка, Отказ)
	
	ТаблицаДанныхПередРазворачиваниемСервер(Строка, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаДанныхПередРазворачиваниемСервер(Строка, Отказ)
	
	ТекущаяСтрока = ТаблицаДанных.НайтиПоИдентификатору(Строка);
	Если НЕ ТекущаяСтрока.СтрокиПолучены Тогда
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("Распоряжение", ТекущаяСтрока.ЗаказНаПроизводство);
		Запрос.Параметры.Вставить("КодСтроки",    ТекущаяСтрока.КодСтроки);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокВыходныеИзделия.Ссылка,
		|	ДокВыходныеИзделия.Ссылка.Статус КАК Статус,
		|	ДокВыходныеИзделия.Ссылка.ФактическоеОкончание КАК ФактическоеОкончание,
		|	СУММА(ДокВыходныеИзделия.КоличествоФакт) КАК КоличествоФакт
		|ИЗ
		|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК ДокВыходныеИзделия
		|ГДЕ
		|	ДокВыходныеИзделия.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыМаршрутныхЛистовПроизводства.Выполнен)
		|	И ДокВыходныеИзделия.Ссылка.Проведен
		|	И ДокВыходныеИзделия.Ссылка.Распоряжение = &Распоряжение
		|	И ДокВыходныеИзделия.Ссылка.КодСтроки = &КодСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокВыходныеИзделия.Ссылка,
		|	ДокВыходныеИзделия.Ссылка.ФактическоеОкончание
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФактическоеОкончание УБЫВ";
		
		Таблица = Запрос.Выполнить().Выгрузить();
		Если Таблица.Количество() > 0 Тогда
			
			Строки = ТекущаяСтрока.ПолучитьЭлементы();
			Строки.Очистить();
			
			Для каждого СтрокаТЗ Из Таблица Цикл
				
				НоваяСтрока = Строки.Добавить();
				НоваяСтрока.МаршрутныйЛист = СтрокаТЗ.Ссылка;
				НоваяСтрока.МаршрутныйЛистПредставление = ПредставлениеМЛ(СтрокаТЗ.Статус, СтрокаТЗ.ФактическоеОкончание);
				НоваяСтрока.КоличествоФакт = СтрокаТЗ.КоличествоФакт;
				
			КонецЦикла;
			
			ТекущаяСтрока.СтрокиПолучены = Истина;
			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредставлениеМЛ(Статус, Дата)
	
	Результат = Строка(Статус);
	Если Статус = Перечисления.СтатусыМаршрутныхЛистовПроизводства.Выполнен Тогда
		Результат = Результат + " " + Формат(Дата, "ДФ='dd.MM.yyyy HH:mm:ss'");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции	

&НаКлиенте
Процедура ТаблицаДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаДанныхМаршрутныйЛистПредставление" Тогда
		ТекущаяСтрока = ТаблицаДанных.НайтиПоИдентификатору(ВыбраннаяСтрока);
		ПоказатьЗначение(, ТекущаяСтрока.МаршрутныйЛист);
		
	ИначеЕсли Поле.Имя = "ТаблицаДанныхСтатусСерии" Тогда
		
		Если НоменклатураКлиент.ДляУказанияСерийНуженСерверныйВызов(ЭтаФорма, ПараметрыУказанияСерий[ИмяТЧ], Текст, ТекущиеДанные) Тогда
		КонецЕсли;	
		
		
	КонецЕсли;	
	
КонецПроцедуры

