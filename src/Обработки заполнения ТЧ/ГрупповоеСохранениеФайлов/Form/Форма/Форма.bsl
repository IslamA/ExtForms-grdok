
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ОбъектыНазначения <> Неопределено Тогда
		ЗаполнитьДерево(Параметры.ОбъектыНазначения);
	КонецЕсли;	

	ЗапрещенныеРасширения = ФайловыеФункцииСлужебный.СписокЗапрещенныхРасширений();
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Показать(Новый ОписаниеОповещения("КаталогНачалоВыбораЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		Каталог = ВыбранныеФайлы[0];
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура КаталогОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(Каталог);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ОбъектыНазначения)
	
	Строки = Дерево.ПолучитьЭлементы();
	Строки.Очистить();
	
	Для каждого Ссылка из ОбъектыНазначения Цикл
		
		НоваяСтрока = Строки.Добавить();
		НоваяСтрока.Объект         = Ссылка;
		НоваяСтрока.Представление  = Строка(Ссылка);
		НоваяСтрока.ИндексКартинки = 10;
		НоваяСтрока.Пометка        = Истина;
		
		Строки2 = НоваяСтрока.ПолучитьЭлементы();
		
		МассивФайлов = ПолучитьПрисоедененныеФайлы(Ссылка);
		Для каждого ФайлСсылка из МассивФайлов Цикл
			
			НоваяСтрока2 = Строки2.Добавить();
			НоваяСтрока2.Объект = НоваяСтрока.Объект;
			НоваяСтрока2.Файл   = ФайлСсылка;
			НоваяСтрока2.Представление  = Строка(ФайлСсылка);
			НоваяСтрока2.Расширение     = ФайлСсылка.Расширение;
			НоваяСтрока2.ИндексКартинки = ФайлСсылка.ИндексКартинки;
			НоваяСтрока2.Пометка        = Истина;
			
		КонецЦикла;	
		
	КонецЦикла;	

КонецПроцедуры

&НаСервере
Функция ПолучитьПрисоедененныеФайлы(Ссылка)
	
	МассивФайлов = Новый Массив;
	
	ПрисоединенныеФайлы.ПолучитьПрикрепленныеФайлыКОбъекту(Ссылка, МассивФайлов);
	Возврат МассивФайлов;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометкуГруппы(Строка)
	
	ИтогоПометка = 0;
	Колво        = 0;
	
	Строки = Строка.ПолучитьЭлементы();
	Для каждого Строка1 из Строки Цикл
		
		Если Строка1.Пометка = 1 Тогда
			ИтогоПометка = ИтогоПометка + 1; 
		КонецЕсли;	
		
		Колво = Колво + 1;
		
	КонецЦикла;	
	
	Если ИтогоПометка = 0 Тогда
		Строка.Пометка = 0;
	ИначеЕсли ИтогоПометка = Колво Тогда
		Строка.Пометка = 1;
	Иначе
		Строка.Пометка = 2;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометкуПодчиненных(Строка, Пометка)
	
	Строки = Строка.ПолучитьЭлементы();
	Для каждого Строка1 из Строки Цикл
		
		Строка1.Пометка = Пометка;
		УстановитьПометкуПодчиненных(Строка1, Пометка);
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ДеревоПометкаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Дерево.ТекущиеДанные;
	Если ТекСтрока.Пометка = 2 Тогда
		ТекСтрока.Пометка = 0;
	КонецЕсли;
	
	УстановитьПометкуПодчиненных(ТекСтрока, ТекСтрока.Пометка);
	
	Родитель = ТекСтрока.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда
		УстановитьПометкуГруппы(Родитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВклВсе(Команда)
	
	Для каждого Строка1 из Дерево.ПолучитьЭлементы() Цикл
		Строка1.Пометка = 1;
		УстановитьПометкуПодчиненных(Строка1, Строка1.Пометка)
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыклВсе(Команда)
	
	Для каждого Строка1 из Дерево.ПолучитьЭлементы() Цикл
		Строка1.Пометка = 0;
		УстановитьПометкуПодчиненных(Строка1, Строка1.Пометка)
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	МассивФайлов = Новый Массив;
	ПолучитьДанныеФайловПоСтрокам(Дерево.ПолучитьЭлементы(), МассивФайлов);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьЗавершение", ЭтотОбъект);
	НачатьПолучениеФайлов(Оповещение, МассивФайлов,, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеФайловПоСтрокам(Строки, МассивФайлов)
	
	Для каждого Строка1 из Строки Цикл
		
		Если Строка1.Пометка = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Строка1.Файл) Тогда
			
			Результат = ПрисоединенныеФайлыКлиент.ПолучитьДанныеФайла(Строка1.Файл, УникальныйИдентификатор, Истина, Ложь);
			
			ПолноеИмяФайла = Каталог + "\" + Строка1.Представление + "." + Строка1.Расширение;
			МассивФайлов.Добавить(Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, Результат.СсылкаНаДвоичныеДанныеФайла));
			
		КонецЕсли;	
		
		ПолучитьДанныеФайловПоСтрокам(Строка1.ПолучитьЭлементы(), МассивФайлов);
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура СохранитьЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПолученныеФайлы <> Неопределено Тогда
		Состояние("Сохранено файлов: " + ПолученныеФайлы.Количество());
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Файл) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ЗапрещенныеРасширения.НайтиПоЗначению(ТекущиеДанные.Расширение) <> Неопределено Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
		Оповещение = Новый ОписаниеОповещения("ОткрытьФайлПослеПодтверждения", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыФормы = Новый Структура("Ключ", "ПередОткрытиемФайла");
		ПараметрыФормы.Вставить("ИмяФайла",
			ОбщегоНазначенияКлиентСервер.ПолучитьИмяСРасширением(ТекущиеДанные.Наименование, ТекущиеДанные.Расширение));
		ОткрытьФорму("ОбщаяФорма.ПредупреждениеБезопасности", ПараметрыФормы, , , , , Оповещение);
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = ДанныеФайла(ТекущиеДанные.Файл, УникальныйИдентификатор);
	
	ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлПослеПодтверждения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат = "Продолжить" Тогда
		
		ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
		ФайлРедактируется = ТекущиеДанные.ФайлРедактируется И ТекущиеДанные.ФайлРедактируетТекущийПользователь;
		
		ДанныеФайла = ДанныеФайла(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
		
		Если ДанныеФайла.Зашифрован Тогда
			// Файл может быть изменен в другом сеансе.
			ОповеститьОбИзменении(ТекущиеДанные.Ссылка);
			Возврат;
		КонецЕсли;
		
		ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла, ФайлРедактируется);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеФайла(Знач ПрисоединенныйФайл, Знач ИдентификаторФормы = Неопределено, 
	Знач ПолучатьСсылкуНаДвоичныеДанные = Истина)
	
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ПрисоединенныйФайл, ИдентификаторФормы, ПолучатьСсылкуНаДвоичныеДанные);
	
КонецФункции
