
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Справочник.БанковскиеСчетаОрганизаций"); //Указываем документ к которому делаем внешнюю печ. форму
	
	ПараметрыРегистрации.Вставить("Вид",             "ПечатнаяФорма"); //может быть – ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов…
	ПараметрыРегистрации.Вставить("Назначение",      МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование",    "Реквизиты счета"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
	ПараметрыРегистрации.Вставить("Версия",          "1.0");
	ПараметрыРегистрации.Вставить("Информация",      "Реквизиты счета");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Реквизиты счета", "РеквизитыСчета", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
		
	Возврат ПараметрыРегистрации;	
		
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Проверяем, нужно ли для макета СчетЗаказ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеквизитыСчета") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"РеквизитыСчета", "Реквизиты счета", СформироватьПечатнуюФорму_РеквизитыСчета(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;

КонецПроцедуры

Функция СформироватьПечатнуюФорму_РеквизитыСчета(МассивОбъектов, ОбъектыПечати)
	
	Макет = ПолучитьМакет("Макет");
	Область = Макет.ПолучитьОбласть("Шапка");
	
	Свойства = ПолучитьСтруктуруСвойств();
	СтруктураДанныхШапки = Новый Структура;
	
	// Создаем табличный документ и устанавливаем имя параметров печати.
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_РеквизитыСчета";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СчетОрганизации Из МассивОбъектов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если Ложь Тогда
			СчетОрганизации = Справочники.БанковскиеСчетаОрганизаций.СоздатьЭлемент();
		КонецЕсли;	
		
		СтруктураДанныхШапки.Вставить("ОрганизацияENG",                 ПолучитьДопРеквизит(СчетОрганизации.Владелец, Свойства.ОрганизацияENG));
		СтруктураДанныхШапки.Вставить("СчетSWIFT",                      СокрЛП(СчетОрганизации.СВИФТБанка));
		СтруктураДанныхШапки.Вставить("AccountWithCorrespondentBank",   СчетОрганизации.СчетВБанкеДляРасчетов);
		СтруктураДанныхШапки.Вставить("СчетБанкENG",                    СчетОрганизации.НаименованиеБанка);
		СтруктураДанныхШапки.Вставить("СчетБанкAddress",                СчетОрганизации.АдресБанка);
		СтруктураДанныхШапки.Вставить("СчетКорБанкSWIFT",               СокрЛП(СчетОрганизации.СВИФТБанкаДляРасчетов));
		СтруктураДанныхШапки.Вставить("СчетКорБанк",                    СчетОрганизации.НаименованиеБанкаДляРасчетов);
		СтруктураДанныхШапки.Вставить("СчетКорБанкАдрес",               СчетОрганизации.АдресБанкаДляРасчетов);
		СтруктураДанныхШапки.Вставить("СчетBeneficiarysAccount",        ПолучитьДопРеквизит(СчетОрганизации, Свойства.BeneficiarysAccount));
		СтруктураДанныхШапки.Вставить("СчетНомер",                      СчетОрганизации.НомерСчета);
		
		Область.Параметры.Заполнить(СтруктураДанныхШапки);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Функция ПолучитьДопРеквизит(Объект, Знач Свойство)

	Если НЕ (ЗначениеЗаполнено(Объект)
			И ЗначениеЗаполнено(Свойство)) Тогда
		Возврат "";
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДопРеквизит.Значение
	|ИЗ
	|	Справочник.Партнеры.ДополнительныеРеквизиты КАК ДопРеквизит
	|ГДЕ
	|	ДопРеквизит.Ссылка = &Объект
	|	И ДопРеквизит.Свойство В(&Свойство)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Партнеры", Объект.Метаданные().ПолноеИмя());
	
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.УстановитьПараметр("Объект",   Объект);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Если Таблица.Количество() = 0 Тогда
		Возврат "";
	Иначе
		Возврат Таблица[0].Значение;
	КонецЕсли; 
	
КонецФункции // ПолучитьДанныеКонтактнойИнформации()

Функция ПолучитьДопСведение(Объект, Знач Свойство)

	Если НЕ (ЗначениеЗаполнено(Объект)
			И ЗначениеЗаполнено(Свойство)) Тогда
		Возврат "";
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДопРеквизит.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДопРеквизит
	|ГДЕ
	|	ДопРеквизит.Объект = &Объект
	|	И ДопРеквизит.Свойство В(&Свойство)";
	
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.УстановитьПараметр("Объект",   Объект);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Если Таблица.Количество() = 0 Тогда
		Возврат "";
	Иначе
		Возврат Таблица[0].Значение;
	КонецЕсли; 
	
КонецФункции // ПолучитьДанныеКонтактнойИнформации()

Функция ПолучитьСтруктуруСвойств()
	
	Структура = Новый Структура;
	
	Структура.Вставить("Идентификатор",    ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Идентификатор счета (Банковские счета)",         Истина));
	Структура.Вставить("ОрганизацияENG",   ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Наименование ENG (Организации)",                 Истина));
	Структура.Вставить("BeneficiarysAccount", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Beneficiary’s account (Банковские счета)",    Истина));
	
	Возврат Структура;
	
КонецФункции
