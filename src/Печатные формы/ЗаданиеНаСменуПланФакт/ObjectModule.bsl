
// Сервисная экспортная функция. Вызывается в основной программе при регистрации обработки в информационной базе
// Возвращает структуру с параметрами регистрации
//
// Возвращаемое значение:
//		Структура с полями:
//			Вид - строка, вид обработки, один из возможных: "ДополнительнаяОбработка", "ДополнительныйОтчет", 
//					"ЗаполнениеОбъекта", "Отчет", "ПечатнаяФорма", "СозданиеСвязанныхОбъектов"
//			Назначение - Массив строк имен объектов метаданных в формате: 
//					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
//					Например, "Документ.СчетЗаказ" или "Справочник.*". Параметр имеет смысл только для назначаемых обработок, для глобальных может не задаваться.
//			Наименование - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
//			Информация  - строка - Краткая информация или описание по обработке.
//			Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
//			БезопасныйРежим - булево - Принимает значение Истина или Ложь, в зависимости от того, требуется ли устанавливать или отключать безопасный режим 
//							исполнения обработок. Если истина, обработка будет запущена в безопасном режиме. 
//
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ._ЗаданиеНаСмену");
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	ПараметрыРегистрации.Вид          = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Наименование = Метаданные().Представление();
	ПараметрыРегистрации.Версия       = Метаданные().Комментарий;
	ПараметрыРегистрации.Назначение   = МассивНазначений;
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	
	ДобавитьКоманду(ПараметрыРегистрации.Команды, ПараметрыРегистрации.Наименование, Метаданные().Имя, ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода(), Истина, "ПечатьMXL");
		
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Вспомогательная процедура.
//
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ВызовСерверногоМетода", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

// Экспортная процедура печати, вызываемая из основной программы
//
// Параметры:
// ВХОДЯЩИЕ:
//  МассивОбъектовНазначения - Массив - список объектов ссылочного типа для печати документа
//                 Как правило, содержит один элемент с ссылкой на вызвавший форму объект (документ, справочник)
//
// ИСХОДЯЩИЕ:
//  КоллекцияПечатныхФорм - ТаблицаЗначений - таблица сформированных табличных документов.
//                 Как правило, содержит одну строку с именем текущей печатной формы
//  ОбъектыПечати - СписокЗначений - список объектов печати. 
//  ПараметрыВывода - Структура - Параметры сформированных табличных документов. Содержит поля:
//  						ДоступнаПечатьПоКомплектно - булево - по умолчанию Ложь
//							ПолучательЭлектронногоПисьма
//							ОтправительЭлектронногоПисьма
//
Процедура Печать(МассивОбъектовНазначения, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданиеНаСменуПланФакт") Тогда
		
		ТабличныйДокумент = СформироватьПечатнуюФорму(МассивОбъектовНазначения, ОбъектыПечати, "ПФ_MXL_ЗаданиеНаСмену");
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаданиеНаСменуПланФакт",
			"Задание на смену план/факт",
			ТабличныйДокумент
			);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаСмену_ЗаданиеНаСменуПланФакт";
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	Док.Дата КАК ДатаФормирования,
	|	Док.ДатаСмены КАК Дата,
	|	Док.Номер КАК Номер,
	|	"""" КАК Префикс,
	|	Док.Подразделение,
	|	Док.Смена,
	|	Док.Бригада.Родитель КАК БригадаРодитель,
	|	Док.Бригада КАК Бригада,
	|	Док.Комментарий,
	|	Док.Ссылка
	|ИЗ
	|	Документ._ЗаданиеНаСмену КАК Док
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";
	
	ЗапросПродукция = Новый Запрос;
	ЗапросПродукция.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	ЗапросПродукция.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(Выборка.НомерСтроки) КАК НомерСтроки,
	|	Выборка.Номенклатура,
	|	Выборка.Характеристика,
	|	Выборка.Назначение,
	|	СУММА(Выборка.КоличествоПлан) КАК КоличествоПлан,
	|	СУММА(Выборка.КоличествоФакт) КАК КоличествоФакт
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокПродукция.НомерСтроки КАК НомерСтроки,
	|		ДокПродукция.Номенклатура КАК Номенклатура,
	|		ДокПродукция.Характеристика КАК Характеристика,
	|		ДокПродукция.Назначение КАК Назначение,
	|		ДокПродукция.Количество КАК КоличествоПлан,
	|		NULL КАК КоличествоФакт
	|	ИЗ
	|		Документ._ЗаданиеНаСмену.Продукция КАК ДокПродукция
	|	ГДЕ
	|		ДокПродукция.Ссылка В(&МассивОбъектов)
	|		И ДокПродукция.Количество <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL,
	|		ДокВыходныеИзделия.Номенклатура,
	|		ДокВыходныеИзделия.Характеристика,
	|		ДокВыходныеИзделия.Назначение,
	|		NULL,
	|		ДокВыходныеИзделия.КоличествоФакт
	|	ИЗ
	|		Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК ДокВыходныеИзделия
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства.Трудозатраты КАК ДокТрудозатраты
	|			ПО ДокВыходныеИзделия.Ссылка = ДокТрудозатраты.Ссылка
	|				И (ДокТрудозатраты.НомерСтроки = 1)
	|	ГДЕ
	|		ДокВыходныеИзделия.Ссылка.Проведен
	|		И ДокВыходныеИзделия.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыМаршрутныхЛистовПроизводства.Выполнен)
	|		И ДокВыходныеИзделия.Ссылка.Распоряжение В(&МассивЗаказов)
	|		И ДокВыходныеИзделия.Ссылка.ФактическоеОкончание МЕЖДУ &Дата1 И &Дата2
	|		И ДокТрудозатраты.Бригада = &Бригада) КАК Выборка
	|
	|СГРУППИРОВАТЬ ПО
	|	Выборка.Номенклатура,
	|	Выборка.Характеристика,
	|	Выборка.Назначение
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, ВыборкаДокументы.Ссылка.Метаданные().Представление());
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументы);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ИтогоКоличествоФакт = 0;
		ИтогоКоличествоПлан = 0;
		
		ЗапросПродукция.Параметры.Вставить("Дата1",   ВыборкаДокументы.Дата);
		ЗапросПродукция.Параметры.Вставить("Дата2",   КонецДня(ВыборкаДокументы.Дата + 86400));
		ЗапросПродукция.Параметры.Вставить("Бригада", ВыборкаДокументы.Бригада);
		ЗапросПродукция.Параметры.Вставить("МассивЗаказов", ВыборкаДокументы.Ссылка.Заказы.Выгрузить().ВыгрузитьКолонку("ЗаказНаПроизводство"));
		
		ВыборкаПоСтрокам = ЗапросПродукция.Выполнить().Выбрать();
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			
			ИтогоКоличествоФакт = ИтогоКоличествоФакт + _ОбщегоНазначенияДоп.ЕстьNULL(ВыборкаПоСтрокам.КоличествоФакт, 0);
			ИтогоКоличествоПлан = ИтогоКоличествоПлан + _ОбщегоНазначенияДоп.ЕстьNULL(ВыборкаПоСтрокам.КоличествоПлан, 0);
			
			Продукция = Строка(ВыборкаПоСтрокам.Номенклатура) + " " + Строка(ВыборкаПоСтрокам.Характеристика);
			Если ЗначениеЗаполнено(ВыборкаПоСтрокам.Назначение) Тогда
				Продукция = Продукция + Символы.ПС + Строка(ВыборкаПоСтрокам.Назначение);
			КонецЕсли;	
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
			ОбластьМакета.Параметры.Продукция = Продукция;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.КоличествоПлан = ИтогоКоличествоПлан;
		ОбластьМакета.Параметры.КоличествоФакт = ИтогоКоличествоФакт;
		
		ТабДокумент.Вывести(ОбластьМакета);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
			
	КонецЦикла;	
		
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции	
