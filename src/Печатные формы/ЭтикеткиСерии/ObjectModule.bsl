
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ПриходныйОрдерНаТовары"); //Указываем документ к которому делаем внешнюю печ. форму
	
	ПараметрыРегистрации.Вставить("Вид",             "ПечатнаяФорма"); //может быть – ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов…
	ПараметрыРегистрации.Вставить("Назначение",      МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование",    Метаданные().Представление()); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Версия",          Метаданные().Комментарий);
	ПараметрыРегистрации.Вставить("Информация",      ПараметрыРегистрации.Наименование);
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Этикетки серии", "ЭтикеткиСерии", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;	
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета СчетЗаказ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЭтикеткиСерии") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ТабличныйДокумент = СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ЭтикеткиСерии", "Этикетки серии", ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати)
	
	Макет = ПолучитьМакет("Макет");
	Область = Макет.ПолучитьОбласть("Шапка");
	
	Свойства = ПолучитьСтруктуруСвойств();
	СтруктураДанныхШапки = Новый Структура;
	
	// Создаем табличный документ и устанавливаем имя параметров печати.
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ЭтикеткаСерии";
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Док.Ссылка,
	|	Док.Номер,
	|	Док.Дата
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК Док
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокТовары.Ссылка КАК Ссылка,
	|	ДокТовары.Номенклатура,
	|	ДокТовары.Характеристика,
	|	ДокТовары.Назначение,
	|	ДокТовары.Количество,
	|	ДокТовары.Серия.Наименование КАК Серия
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.Товары КАК ДокТовары
	|ГДЕ
	|	ДокТовары.Ссылка В(&МассивОбъектов)
	|ИТОГИ ПО
	|	Ссылка";
	
	Результат = Запрос.ВыполнитьПакет();
	Шапка         = Результат[0].Выбрать();
	ВыборкаТовары = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Эталон = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("Эталон");
	КоличествоМиллиметровВПикселе = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	
	ТипыШтрихкодов = Новый Соответствие;
	ТипыШтрихкодов.Вставить("Code128", 4);
	
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЭтикеткаСерии";
		
		Если ВыборкаТовары.НайтиСледующий(Новый Структура("Ссылка", Шапка.Ссылка)) Тогда
			
			ВыборкаДетали = ВыборкаТовары.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДетали.Следующий() Цикл
				
				Область.Параметры.Наименование = Строка(ВыборкаДетали.Номенклатура) + " " + Строка(ВыборкаДетали.Характеристика);
				Область.Параметры.Заказ        = СтрЗаменить(ВыборкаДетали.Назначение, "(Заказ клиента)", "");
				Область.Параметры.Объем        = ВыборкаДетали.Количество;
				Область.Параметры.Сорт         = _ОбщегоНазначенияДоп.ПолучитьДопРеквизит(ВыборкаДетали.Характеристика, "6 Сорт");
				Область.Параметры.Радиус       = _ОбщегоНазначенияДоп.ПолучитьДопРеквизит(ВыборкаДетали.Характеристика, "4 Радиус числом");
				
				Длина   = _ОбщегоНазначенияДоп.ПолучитьДопРеквизит(ВыборкаДетали.Характеристика, "1 Длина числом");
				Ширина  = _ОбщегоНазначенияДоп.ПолучитьДопРеквизит(ВыборкаДетали.Характеристика, "2 Ширина числом");
				Толщина = _ОбщегоНазначенияДоп.ПолучитьДопРеквизит(ВыборкаДетали.Характеристика, "3 Толщина числом");
				Область.Параметры.Размер       = Формат(Длина, "") + "х" + Формат(Ширина, "") + "х" + Формат(Толщина, "");
				
				Область.Параметры.Дата         = Формат(Шапка.Дата, "ДФ=dd.MM.yyyy");
			
				Рисунок = Область.Рисунки.Штрихкод;
				
				ПараметрыШтрихкода = Новый Структура;
				ПараметрыШтрихкода.Вставить("Ширина",          Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселе));
				ПараметрыШтрихкода.Вставить("Высота",          Окр(Рисунок.Высота / КоличествоМиллиметровВПикселе));
				ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(ВыборкаДетали.Серия));
				ПараметрыШтрихкода.Вставить("ТипКода",         ТипыШтрихкодов["Code128"]); 
				ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
				ПараметрыШтрихкода.Вставить("РазмерШрифта",    10);
				
				Рисунок.Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
				
				ТабличныйДокумент.Вывести(Область);			
				
			КонецЦикла;	
			
		КонецЕсли;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

Функция ПолучитьСтруктуруСвойств()
	
	Структура = Новый Структура;
	
	Структура.Вставить("Идентификатор",    ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Идентификатор счета (Банковские счета)",         Истина));
	Структура.Вставить("ОрганизацияENG",   ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Наименование ENG (Организации)",                 Истина));
	Структура.Вставить("BeneficiarysAccount", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Beneficiary’s account (Банковские счета)",    Истина));
	
	Возврат Структура;
	
КонецФункции
