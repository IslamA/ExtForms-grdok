
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ТабельУчетаРабочегоВремени"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Вид",             "ПечатнаяФорма"); //может быть – ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов…
	ПараметрыРегистрации.Вставить("Назначение",      МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование",    "Экспортные печатные формы"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия",          "1.0");
	ПараметрыРегистрации.Вставить("Информация",      "Проверка табеля");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Проверка табеля", "ПроверкаТабеля", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
		
	Возврат ПараметрыРегистрации;	
		
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПроверкаТабеля") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПроверкаТабеля", "Проверка табеля", СформироватьПечатнуюФорму_ПроверкаТабеля(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;

КонецПроцедуры

Функция СформироватьПечатнуюФорму_ПроверкаТабеля(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТекстЗапроса = "";
	
	Для Счетчик = 1 По 31 Цикл
		
		Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			|
			|";
			
		КонецЕсли;	
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(Док.Ссылка.ПериодРегистрации, ДЕНЬ, " + (Счетчик - 1) + ") КАК Дата,
		|	Док.Сотрудник,
		|	Док.Часов" + Счетчик + " КАК Часов,
		|	Док.ВидВремени" + Счетчик + " КАК ВидВремени
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремени.ДанныеОВремени КАК Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка"
		
	КонецЦикла;	
		
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Дата,
	|	ВидВремени
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов[0]);
	
	Запрос.Текст = ТекстЗапроса;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("Макет");
	ТабДок = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Область.Параметры.Сотрудник = СтрокаТЗ.Сотрудник;
		Область.Параметры.Дата      = СтрокаТЗ.Дата;
		ТабДок.Вывести(Область);
		
	КонецЦикла;	
	
	Возврат ТабДок;
	
КонецФункции
