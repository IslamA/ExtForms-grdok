
&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КаталогВыборЗавершение", ЭтотОбъект);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВыборЗавершение(ВыбранныеФайлы, ДопПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Объект.Каталог = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Родитель", ПредопределенноеЗначение("Справочник.ДополнительныеОтчетыИОбработки.ПустаяСсылка"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьЗавершение", ЭтотОбъект, ДопПараметры);
	
	ПоказатьВопрос(ОписаниеОповещения, "Загрузить внешние обработки из каталога?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет); 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Таблица = ПолучитьСписокПапок(ДопПараметры.Родитель);
	Для каждого СтрокаТЗ из Таблица Цикл
		
		ДопПараметры2 = Новый Структура(Новый ФиксированнаяСтруктура(ДопПараметры));
		ДопПараметры2.Вставить("Родитель", СтрокаТЗ.Ссылка);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПоискФайловЗавершение", ЭтотОбъект, ДопПараметры2);
		НачатьПоискФайлов(ОписаниеОповещения, Объект.Каталог + "\" + СтрокаТЗ.Наименование, "*.*", Ложь);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокПапок(Родитель)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Родитель", Родитель);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка КАК Ссылка,
	|	Спр.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК Спр
	|ГДЕ
	|	Спр.ЭтоГруппа
	|	И Спр.Родитель = &Родитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Массив = Новый Массив;
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТз из Таблица Цикл
		
		Массив.Добавить(Новый Структура("Ссылка, Наименование", СтрокаТЗ.Ссылка, СтрокаТЗ.Наименование));
		
	КонецЦикла;	
	
	Возврат Массив;
	
КонецФункции	

&НаКлиенте
Процедура ПоискФайловЗавершение(НайденныеФайлы, ДопПараметры) Экспорт
	
	Для каждого Файл из НайденныеФайлы Цикл
		
		Если Ложь Тогда
			Файл = Новый Файл;
		КонецЕсли;	
		
		ДопПараметры2 = Новый Структура(Новый ФиксированнаяСтруктура(ДопПараметры));
		ДопПараметры2.Вставить("Файл", Файл);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаЭтоКаталогЗавершение", ЭтотОбъект, ДопПараметры2);
		Файл.НачатьПроверкуЭтоКаталог(ОписаниеОповещения);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЭтоКаталогЗавершение(ЭтоКаталог, ДопПараметры) Экспорт
	
	Если ЭтоКаталог Тогда
		
		Родитель = ПолучитьРодителя(ДопПараметры.Файл.Имя, ДопПараметры.Родитель);
		Если Родитель <> Неопределено Тогда
			
			ДопПараметры2 = Новый Структура(Новый ФиксированнаяСтруктура(ДопПараметры));
			ДопПараметры2.Вставить("Родитель", Родитель);
			ЗагрузитьЗавершение(КодВозвратаДиалога.Да, ДопПараметры2);
			
		КонецЕсли;	
		
	Иначе
		
		Если Найти(".epf, .erf", НРег(ДопПараметры.Файл.Расширение)) = 0 Тогда
			Возврат;
		КонецЕсли;	
		
		ПомещаемыеФайлы = Новый Массив;
		ПомещаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ДопПараметры.Файл.ПолноеИмя));
		
		ДопПараметры2 = Новый Структура(Новый ФиксированнаяСтруктура(ДопПараметры));
		ПомещениеФайловЗавершение = Новый ОписаниеОповещения("ПомещениеФайловЗавершение", ЭтотОбъект, ДопПараметры2);
		НачатьПомещениеФайлов(ПомещениеФайловЗавершение, ПомещаемыеФайлы,, Ложь, ЭтаФорма.УникальныйИдентификатор);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайловЗавершение(ПомещенныеФайлы, ДопПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено ИЛИ ПомещенныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеФайла = ПомещенныеФайлы.Получить(0);
	АдресДанных   = ОписаниеФайла.Хранение;
	
	Если АдресДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Состояние(ДопПараметры.Файл.Имя,, ДопПараметры.Файл.Путь);
	Ссылка = ОбновитьОбработкуНаСервере(АдресДанных, ДопПараметры.Родитель, ДопПараметры.Файл.Имя, ДопПараметры.Файл.Расширение);
	
	Если Ссылка <> Неопределено Тогда
		ОповеститьОбИзменении(Ссылка);
	КонецЕсли;	
	
КонецПроцедуры	
	
&НаСервереБезКонтекста
Функция ОбновитьОбработкуНаСервере(Знач АдресДанных, Знач Родитель, Знач ФайлИмя, Знач ФайлРасширение)
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Успех",                  Ложь);
	ПараметрыРегистрации.Вставить("АдресДанныхОбработки",   АдресДанных);
	ПараметрыРегистрации.Вставить("ИмяФайла",               ФайлИмя);
	ПараметрыРегистрации.Вставить("ОтключатьКонфликтующие", Ложь);
	ПараметрыРегистрации.Вставить("Конфликтующие",          Новый Массив);
	ПараметрыРегистрации.Вставить("ОтключатьПубликацию",    Ложь);
	
	Если ФайлРасширение = ".epf" Тогда
		ИмяОбъекта = ВнешниеОбработки.Подключить(АдресДанных,, Истина);
		ПараметрыРегистрации.Вставить("ЭтоОтчет", Ложь);
	ИначеЕсли ФайлРасширение = ".erf" Тогда	
		ИмяОбъекта = ВнешниеОтчеты.Подключить(АдресДанных,, Истина);
		ПараметрыРегистрации.Вставить("ЭтоОтчет", Истина);
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Родитель",   Родитель);
	Запрос.Параметры.Вставить("ИмяОбъекта", ИмяОбъекта);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК Спр
	|ГДЕ
	|	НЕ Спр.ЭтоГруппа
	|	И Спр.Родитель = &Родитель
	|	И Спр.ИмяОбъекта = &ИмяОбъекта
	|	И НЕ Спр.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		ОбъектСправочника = Результат.Выгрузить()[0][0].ПолучитьОбъект();
		ЭтоНовый = Ложь;
		
	Иначе
		
		ОбъектСправочника = Справочники.ДополнительныеОтчетыИОбработки.СоздатьЭлемент();
		ОбъектСправочника.Родитель   = Родитель;
		ОбъектСправочника.Публикация = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется;
		ЭтоНовый = Истина;
		
	КонецЕсли;	
	
	РезультатРегистрации = ДополнительныеОтчетыИОбработки.ЗарегистрироватьОбработку(ОбъектСправочника, ПараметрыРегистрации);
	Если РезультатРегистрации.Успех Тогда
		
		Если ОбъектСправочника.Версия <> ОбъектСправочника.Ссылка.Версия Тогда
			ОбъектСправочника.Записать();
			Возврат ОбъектСправочника.Ссылка;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРодителя(Знач Наименование, Знач Родитель)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Родитель",     Родитель);
	Запрос.Параметры.Вставить("Наименование", Наименование);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК Спр
	|ГДЕ
	|	Спр.ЭтоГруппа
	|	И Спр.Родитель = &Родитель
	|	И Спр.Наименование = &Наименование
	|	И НЕ Спр.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Выгрузить()[0][0];
	КонецЕсли;	
	
КонецФункции
