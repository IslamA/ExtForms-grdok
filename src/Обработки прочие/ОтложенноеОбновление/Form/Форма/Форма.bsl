
&НаКлиенте
Процедура Запустить(Команда)
	ЗапуститьНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗапуститьНаСервере()
	
	СведенияОбОбновленииИБ = Константы.СведенияОбОбновленииИБ.Получить().Получить();
	СведенияОбОбновленииИБ.ВремяОкончаниеОтложенногоОбновления = Неопределено;
	
	Константы.СведенияОбОбновленииИБ.Установить(Новый ХранилищеЗначения(СведенияОбОбновленииИБ));
	
	ОбновлениеИнформационнойБазыСлужебный.ВыполнитьОтложенноеОбновление();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДенежныеСредстваКВыплатеНаСервере(Очередь)
	
	Параметры = Новый Структура;
	Параметры.Вставить("Очередь", Число(Строка(Очередь)));
	Параметры.Вставить("ОбработкаЗавершена", Ложь);
	
	//РегистрыНакопления.ДенежныеСредстваКВыплате.ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры);
	ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбработкаЗавершена = Ложь;
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	Регистраторы.Добавить("Документ.РаспоряжениеНаПеремещениеДенежныхСредств");
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		"РегистрНакопления.ДенежныеСредстваКВыплате",
		Параметры.Очередь);
		
	ВыборкаЗаявок = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(
		Параметры.Очередь,
		"Документ.ЗаявкаНаРасходованиеДенежныхСредств",
		"РегистрНакопления.ДенежныеСредстваКВыплате");
		
	ВыборкаРаспоряжений = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(
		Параметры.Очередь,
		//"Документ.ЗаявкаНаРасходованиеДенежныхСредств",
		"Документ.РаспоряжениеНаПеремещениеДенежныхСредств",
		"РегистрНакопления.ДенежныеСредстваКВыплате");
		
	Если Не ВыборкаЗаявок.Следующий() И Не ВыборкаРаспоряжений.Следующий() Тогда
		
		Регистраторы = Новый Массив;
		Регистраторы.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
		Регистраторы.Добавить("Документ.РасходныйКассовыйОрдер");
		Регистраторы.Добавить("Документ.ОперацияПоПлатежнойКарте");
		Регистраторы.Добавить("Документ.ПриходныйКассовыйОрдер");
		Регистраторы.Добавить("Документ.ПоступлениеБезналичныхДенежныхСредств");
		
		ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
			Регистраторы,
			"РегистрНакопления.ДенежныеСредстваКВыплате",
			Параметры.Очередь);
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеСредстваКВыплате(Команда)
	
	ДенежныеСредстваКВыплатеНаСервере(Объект.Очередь);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПараметрыОтложенногоОбработчикаОбновления(ОбработчикОбновления, Отложенно = Ложь, Параллельно = Ложь)
	
	Если ОбработчикОбновления = Неопределено Тогда
		ПараметрыСеанса.ПараметрыОбработчикаОбновления = Новый ФиксированнаяСтруктура(ОбновлениеИнформационнойБазыСлужебный.НовыеПараметрыОбработчикаОбновления());
		Возврат;
	КонецЕсли;
	
	Если Отложенно Тогда
		РежимВыполнения = "Отложенно";
	Иначе
		РежимВыполнения = "Монопольно";
	КонецЕсли;
	
	Если Параллельно Тогда
		РежимВыполненияОтложенныхОбработчиков = "Параллельно";
	Иначе
		РежимВыполненияОтложенныхОбработчиков = "Последовательно";
	КонецЕсли;
	
	ПараметрыОбработчикаОбновления = ОбновлениеИнформационнойБазыСлужебный.НовыеПараметрыОбработчикаОбновления();
	ПараметрыОбработчикаОбновления.ЗапускатьТолькоВГлавномУзле = ОбработчикОбновления.ЗапускатьТолькоВГлавномУзле;
	ПараметрыОбработчикаОбновления.ЗапускатьИВПодчиненномУзлеРИБСФильтрами = ОбработчикОбновления.ЗапускатьИВПодчиненномУзлеРИБСФильтрами;
	ПараметрыОбработчикаОбновления.ОчередьОтложеннойОбработки = ОбработчикОбновления.ОчередьОтложеннойОбработки;
	ПараметрыОбработчикаОбновления.РежимВыполнения = РежимВыполнения;
	ПараметрыОбработчикаОбновления.РежимВыполненияОтложенныхОбработчиков = РежимВыполненияОтложенныхОбработчиков;
	ПараметрыОбработчикаОбновления.ЕстьОбработанныеОбъекты = Ложь;
	
	ПараметрыСеанса.ПараметрыОбработчикаОбновления = Новый ФиксированнаяСтруктура(ПараметрыОбработчикаОбновления);
	
КонецПроцедуры