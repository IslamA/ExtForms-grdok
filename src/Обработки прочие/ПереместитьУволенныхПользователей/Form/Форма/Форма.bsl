
&НаКлиенте
Процедура Прочитать(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПомещениеФайлаЗавершение", ЭтотОбъект);
	
	НачатьПомещениеФайла(ОписаниеОповещения,, ИмяФайла, Ложь, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлаЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДопПараметры) Экспорт
	
	ПрочитатьНаСервере(Адрес);
	
КонецПроцедуры


&НаСервере
Процедура ПрочитатьНаСервере(Знач Адрес)
	
	ЗаполнитьНаСервере();
	
	//Для получения пользователей 
	// Get-aduser -filter "samaccountname -ne 'f'" | ft samaccountname,enabled |out-file c:\tmp\users.csv
	
	//ИмяВременногоФайла = ПолучитьИмяВременногоФайла("scv");
	//ДвоичныеДанные.Записать(ИмяВременногоФайла);
	//
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	
	ТаблицаАД = Новый ТаблицаЗначений;
	ТаблицаАД.Колонки.Добавить("Имя");
	ТаблицаАД.Колонки.Добавить("Статус");
	
	ЧтениеДанных = Новый ЧтениеДанных(ДвоичныеДанные, КодировкаТекста.UTF16);
	Счетчик = 0;
	Стр = ЧтениеДанных.ПрочитатьСтроку();
	Пока ЗначениеЗаполнено(Стр) Цикл
		
		Счетчик = Счетчик + 1;
		Если Счетчик < 4 Тогда
			Стр = ЧтениеДанных.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;	
		
		Массив = СтрРазделить(Стр, "    ", Ложь);
		Если Массив.Количество() < 2 Тогда
			Стр = ЧтениеДанных.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрока = ТаблицаАД.Добавить();
		НоваяСтрока.Имя    = Массив[0];
		НоваяСтрока.Статус = Массив[1];
		
		Стр = ЧтениеДанных.ПрочитатьСтроку();
		
	КонецЦикла;	
	
	ЧтениеДанных.Закрыть();
	
	ТаблицаАД.Индексы.Добавить("Имя");
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЗ.Имя) Тогда
			Продолжить;
		КонецЕсли;	
		
		НайденнаяСтрока = ТаблицаАД.Найти(СтрокаТЗ.Имя, "Имя");
		Если НайденнаяСтрока = Неопределено Тогда
			СтрокаТЗ.Статус = "Не найден";
		Иначе	
			СтрокаТЗ.Статус = НайденнаяСтрока.Статус;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПользователя(Имя)
	
	ИД = Неопределено;
	Для каждого ПользовательИБ из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		
		Если СокрЛП(НРег(ПользовательИБ.ПользовательОС)) = "\\uniservice\" + НРег(имя) Тогда
			ИД = ПользовательИБ.УникальныйИдентификатор;
		КонецЕсли	
		
	КонецЦикла;	
	
	Если ИД <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("ИД", ИД);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ИдентификаторПользователяИБ = &ИД";
		
		Возврат Запрос.Выполнить().Выгрузить()[0][0];
		
	КонецЕсли;	
	
	Возврат Неопределено;
	
КонецФункции	

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИмяФайлаЗавершение", ЭтотОбъект);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаЗавершение(ВыбранныеФайлы, ДопПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		ИмяФайла = ВыбранныеФайлы[0];
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка,
	|	Пользователи.ИдентификаторПользователяИБ
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	НЕ Пользователи.Недействителен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пользователи.Наименование";
	
	ТаблицаДанных.Очистить();
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		НоваяСтрока = ТаблицаДанных.Добавить();
		НоваяСтрока.Пользователь = СтрокаТЗ.Ссылка;
		НоваяСтрока.Имя = ПолучитьИмя(СтрокаТЗ.ИдентификаторПользователяИБ);
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьИмя(ПользовательИД) 
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ПользовательИД);
	Если ПользовательИБ <> Неопределено Тогда
		Возврат СтрЗаменить(НРег(ПользовательИБ.ПользовательОС), "\\uniservice\", "");
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
