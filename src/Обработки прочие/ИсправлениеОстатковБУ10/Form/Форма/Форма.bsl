&НаСервере
Процедура НайтиДокументыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	
	Счет10 = Новый Массив;
	Счет10.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.01"));
	Запрос.Параметры.Вставить("Счет10",      Счет10);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстатки.Субконто2 КАК Склад,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаБУ,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КолвоБУ
	|ПОМЕСТИТЬ ДанныеБУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В ИЕРАРХИИ (&Счет10), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выборка.Номенклатура КАК Номенклатура,
	|	Выборка.Склад КАК Склад,
	|	СУММА(Выборка.СуммаБУ) КАК СуммаБУ,
	|	СУММА(Выборка.КолвоБУ) КАК КолвоБУ,
	|	СУММА(Выборка.СуммаРегСебестоимость) КАК СуммаРегСебестоимость,
	|	СУММА(Выборка.КолвоРегСебестоимость) КАК КолвоРегСебестоимость,
	|	СУММА(Выборка.СуммаРегПартии) КАК СуммаРегПартии,
	|	СУММА(Выборка.КолвоРегПартии) КАК КолвоРегПартии
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеБУ.Номенклатура КАК Номенклатура,
	|		ДанныеБУ.Склад КАК Склад,
	|		ДанныеБУ.СуммаБУ КАК СуммаБУ,
	|		ДанныеБУ.КолвоБУ КАК КолвоБУ,
	|		NULL КАК СуммаРегСебестоимость,
	|		NULL КАК КолвоРегСебестоимость,
	|		NULL КАК СуммаРегПартии,
	|		NULL КАК КолвоРегПартии
	|	ИЗ
	|		ДанныеБУ КАК ДанныеБУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|		СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Склад,
	|		NULL,
	|		NULL,
	|		СебестоимостьТоваровОстатки.СтоимостьРеглОстаток,
	|		СебестоимостьТоваровОстатки.КоличествоОстаток,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				&Период,
	|				(АналитикаУчетаНоменклатуры.Склад, АналитикаУчетаНоменклатуры.Номенклатура) В
	|					(ВЫБРАТЬ
	|						ДанныеБУ.Склад,
	|						ДанныеБУ.Номенклатура
	|					ИЗ
	|						ДанныеБУ)) КАК СебестоимостьТоваровОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|		ПартииТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Склад,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ПартииТоваровОрганизацийОстатки.СтоимостьРеглОстаток,
	|		ПартииТоваровОрганизацийОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровОрганизаций.Остатки(
	|				&Период,
	|				Организация = &Организация
	|					И (АналитикаУчетаНоменклатуры.Склад, АналитикаУчетаНоменклатуры.Номенклатура) В
	|						(ВЫБРАТЬ
	|							ДанныеБУ.Склад,
	|							ДанныеБУ.Номенклатура
	|						ИЗ
	|							ДанныеБУ)) КАК ПартииТоваровОрганизацийОстатки) КАК Выборка
	|
	|СГРУППИРОВАТЬ ПО
	|	Выборка.Номенклатура,
	|	Выборка.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ТаблицаДанных.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбработатьЭлемент(ДанныеЭлемента, ДополнительныеПараметры)
	
	СпрОбъект = ДанныеЭлемента.Ссылка.ПолучитьОбъект();
	
	// Обработка
	
	СпрОбъект.ОбменДанными.Загрузка = Истина;
	СпрОбъект.Записать();
	
КонецФункции	

&НаКлиенте
Функция ИнициализироватьДопПараметры()
	
	Возврат Неопределено;
	
КонецФункции	

/////////////////////////////////////////////////////////////////////

&НаСервере
Функция ИнициализацияОбработкиСервер()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ТаблицаДанных", ТаблицаДанных.Выгрузить(Новый Структура("Пометка", Истина)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таб.Ссылка
	|ПОМЕСТИТЬ ТаблицаДанных
	|ИЗ
	|	&ТаблицаДанных КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанных.Ссылка
	|ИЗ
	|	ТаблицаДанных КАК ТаблицаДанных";
	
	Данные      = Запрос.Выполнить().Выгрузить();
	АдресДанных = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
	
	Если ТипЗнч(Данные) = Тип("ДеревоЗначений") Тогда
		Возврат Данные.Строки.Количество();
	Иначе	
		Возврат Данные.Количество();
	КонецЕсли;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбработатьПорциюНаСервере(Начало, Конец, АдресДанных, ДополнительныеПараметры)
	
	Данные = ПолучитьИзВременногоХранилища(АдресДанных);
	Если ТипЗнч(Данные) = Тип("ДеревоЗначений") Тогда
		Данные = Данные.Строки;
	КонецЕсли;	
	
	КоличествоОшибок = 0;
	Для Счетчик = Начало - 1 По Конец - 1 Цикл
		
		Попытка
			НачатьТранзакцию();
			ОбработатьЭлемент(Данные[Счетчик], ДополнительныеПараметры);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			КоличествоОшибок = КоличествоОшибок + 1;
			Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;	
		
	КонецЦикла;
	
	Возврат КоличествоОшибок;
	
КонецФункции	
	
&НаКлиенте
Процедура ВыполнитьОбработкуИндикатор(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияВопроса", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Выполнить обработку?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуСостояние(Команда)
	
	ВыполнитьОбработку(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияВопроса(Ответ, Параметр) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	ДокументСсылка = СформироватьДокументКорректировки();
	ПоказатьОповещениеПользователя("Создан документ", ПолучитьНавигационнуюСсылку(ДокументСсылка), Строка(ДокументСсылка));
	
КонецПроцедуры

&НаСервере
Функция СформироватьДокументКорректировки()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	
	Счет10 = Новый Массив;
	Счет10.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.01"));
	Запрос.Параметры.Вставить("Счет10",      Счет10);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстатки.Субконто2 КАК Склад,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаБУ,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КолвоБУ
	|ПОМЕСТИТЬ ДанныеБУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В ИЕРАРХИИ (&Счет10), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеБУ.Номенклатура,
	|	ДанныеБУ.Склад,
	|	ДанныеБУ.СуммаБУ,
	|	ДанныеБУ.КолвоБУ
	|ИЗ
	|	ДанныеБУ КАК ДанныеБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваровОстатки.РазделУчета,
	|	СебестоимостьТоваровОстатки.ВидЗапасов,
	|	СебестоимостьТоваровОстатки.Организация,
	|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК Количество,
	|	СебестоимостьТоваровОстатки.СтоимостьОстаток КАК Стоимость,
	|	СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	СебестоимостьТоваровОстатки.СуммаДопРасходовОстаток КАК СуммаДопРасходов,
	|	СебестоимостьТоваровОстатки.СуммаДопРасходовБезНДСОстаток КАК СуммаДопРасходовБезНДС,
	|	СебестоимостьТоваровОстатки.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	СебестоимостьТоваровОстатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	СебестоимостьТоваровОстатки.ВременнаяРазницаОстаток КАК ВременнаяРазница,
	|	СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Склад КАК Склад
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&Период,
	|			(АналитикаУчетаНоменклатуры.Склад, АналитикаУчетаНоменклатуры.Номенклатура) В
	|				(ВЫБРАТЬ
	|					ДанныеБУ.Склад,
	|					ДанныеБУ.Номенклатура
	|				ИЗ
	|					ДанныеБУ)) КАК СебестоимостьТоваровОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровОрганизацийОстатки.Организация,
	|	ПартииТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры,
	|	ПартииТоваровОрганизацийОстатки.ДокументПоступления,
	|	ПартииТоваровОрганизацийОстатки.ВидЗапасов,
	|	ПартииТоваровОрганизацийОстатки.АналитикаУчетаПартий,
	|	ПартииТоваровОрганизацийОстатки.КоличествоОстаток КАК Количество,
	|	ПартииТоваровОрганизацийОстатки.СтоимостьОстаток КАК Стоимость,
	|	ПартииТоваровОрганизацийОстатки.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	ПартииТоваровОрганизацийОстатки.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	ПартииТоваровОрганизацийОстатки.НДСРеглОстаток КАК НДСРегл,
	|	ПартииТоваровОрганизацийОстатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	ПартииТоваровОрганизацийОстатки.ВременнаяРазницаОстаток КАК ВременнаяРазница,
	|	ПартииТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ПартииТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Склад КАК Склад
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И (АналитикаУчетаНоменклатуры.Склад, АналитикаУчетаНоменклатуры.Номенклатура) В
	|					(ВЫБРАТЬ
	|						ДанныеБУ.Склад,
	|						ДанныеБУ.Номенклатура
	|					ИЗ
	|						ДанныеБУ)) КАК ПартииТоваровОрганизацийОстатки";
	
	ДокументОбъект =  НайтиДокументКорректировку("Корректировка остатков себестоимости 10 счет");
	ДокументОбъект.ПометкаУдаления = Ложь;
	
	ДокументОбъект.ТаблицаРегистров.Очистить();
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "СебестоимостьТоваров";
	
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПартииТоваровОрганизаций";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаБУ     = МассивРезультатов[1].Выгрузить();
	ТаблицаСеб    = МассивРезультатов[2].Выгрузить();
	ТаблицаПартии = МассивРезультатов[3].Выгрузить();
	
	СтруктураОтбора = Новый Структура("Номенклатура, Склад");
	
	Для каждого СтрокаТЗ из ТаблицаБУ Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТЗ);
		СтрокиСеб    = ТаблицаСеб.Скопировать(СтруктураОтбора);
		СтрокиПартии = ТаблицаПартии.Скопировать(СтруктураОтбора);
		
	КонецЦикла;
	
	ДокументОбъект.Записать();
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции	

&НаСервере
Функция НайтиДокументКорректировку(Комментарий, Дата = '2015-12-31')
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРегистров.Ссылка
	|ИЗ
	|	Документ.КорректировкаРегистров КАК КорректировкаРегистров
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(КорректировкаРегистров.Дата, ДЕНЬ) = &Дата
	|	И КорректировкаРегистров.Комментарий ПОДОБНО &Комментарий";
	
	Запрос.Параметры.Вставить("Дата",        НачалоДня(Дата));
	Запрос.Параметры.Вставить("Комментарий", Комментарий);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		ДокументОбъект = Документы.КорректировкаРегистров.СоздатьДокумент();
		ДокументОбъект.Дата        = КонецДня(Дата);
		ДокументОбъект.Комментарий = Комментарий;
		
	Иначе
		
		ДокументОбъект = Результат.Выгрузить()[0][0].ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Ложь;
		
	КонецЕсли;	
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Возврат ДокументОбъект;
	
КонецФункции	

&НаКлиенте
Процедура ВыполнитьОбработку(РазмерШага, ЭлементИндикатор = Неопределено, ЭлементПояснение = Неопределено)
	
	Количество      = ИнициализацияОбработкиСервер();
	КоличествоШагов = Цел(Количество / РазмерШага);
	КоличествоЦел   = КоличествоШагов * РазмерШага;
	
	Если КоличествоЦел < Количество Тогда
		МаксимальноеЗначение = КоличествоШагов + 1;
	Иначе
		МаксимальноеЗначение = КоличествоШагов;
	КонецЕсли;
	
	Если ЭлементИндикатор <> Неопределено Тогда
		ЭлементИндикатор.МаксимальноеЗначение = МаксимальноеЗначение;
	КонецЕсли;	
	
	Пояснение = "Для прерывания нажмите Ctrl+Break";
	ДополнительныеПараметры = ИнициализироватьДопПараметры();
	
	ВремяНачала = ТекущаяДата();
	
	ВсегоОшибок = 0;
	Для Счетчик = 1 По КоличествоШагов Цикл
		
		ОшибокНаШаге = ОбработатьПорциюНаСервере(РазмерШага * (Счетчик - 1) + 1, РазмерШага * Счетчик, АдресДанных, ДополнительныеПараметры);
		ВсегоОшибок = ВсегоОшибок + ОшибокНаШаге;
		
		Текст = "Обработано: " + Формат(РазмерШага * Счетчик) + " из " + Формат(Количество);
		Если ВсегоОшибок > 0 Тогда
			Текст = Текст + " - Ошибок: " + Формат(ВсегоОшибок);
		КонецЕсли;	
		
		ПрошлоВремени   = ТекущаяДата() - ВремяНачала;
		СкоростьШага    = ПрошлоВремени / Счетчик;
		ОсталосьВремени = Окр((КоличествоШагов - Счетчик) * СкоростьШага, 0);
		ОсталосьВремениМин = Цел(ОсталосьВремени / 60);
		ОсталосьВремениСек = ОсталосьВремени - 60*ОсталосьВремениМин;
		
		Текст = Текст + ". Осталось: " + ОсталосьВремениМин + "м " + ОсталосьВремениСек + " с";
		
		Если ЭлементИндикатор = Неопределено Тогда
			Состояние(Текст, Окр(Счетчик / МаксимальноеЗначение * 100, 0), Пояснение);
		Иначе
			ЭтаФорма[ЭлементИндикатор.Имя] = Счетчик;
			ЭтаФорма[ЭлементПояснение.Имя] = Текст;
		КонецЕсли;	
		
		ОбработкаПрерыванияПользователя();
		Если ЭлементИндикатор <> Неопределено Тогда
			ОбновитьОтображениеДанных();
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоЦел < Количество Тогда
		ОбработатьПорциюНаСервере(КоличествоШагов * РазмерШага + 1, Количество, АдресДанных, ДополнительныеПараметры);
	КонецЕсли;
	
	Состояние("Обработка завершениа");
	
КонецПроцедуры	

// Прочие процедуры и функции
&НаСервереБезКонтекста
Функция ОбработатьПроводки(ДанныеЭлемента, ДополнительныеПараметры)
	
	Сообщить(ДанныеЭлемента.Регистратор);
	
	НаборЗаписей = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДанныеЭлемента.Регистратор);
	НаборЗаписей.Прочитать();
		
	Для каждого Строка1 Из ДанныеЭлемента.Строки Цикл
		
		Запись = НаборЗаписей[Строка1.НомерСтроки - 1];
		
		Если Строка1.ДтКт = "Дт" Тогда
		Иначе
		КонецЕсли;	
		
	КонецЦикла;
	
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записать();
	
КонецФункции

&НаКлиенте
Процедура НайтиДокументы(Команда)
	НайтиДокументыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = ТаблицаДанных.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ИмяПоля = СтрЗаменить(Поле.Имя, "ТаблицаДанных", "");
	ИмяПоля = СтрРазделить(ИмяПоля, "_")[0];
	
	Если ИмяПоля = "Пометка" Тогда
	Иначе	
		ПоказатьЗначение(, ДанныеСтроки[ИмяПоля]);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВклВсе(Команда)
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		СтрокаТЗ.Пометка = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыклВсе(Команда)
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		СтрокаТЗ.Пометка = Ложь;
	КонецЦикла;	
	
КонецПроцедуры
