
	|	Выборка.Количество,
	|	Выборка.НомерСтрокиМатериалыИУслуги,
	|	Выборка.Номенклатура,
	|	Выборка.Характеристика,
	|	Выборка.КоличествоЗаказ,
	|	Выборка.КоличествоЗаказМатериал,
	|	Выборка.КоличествоСпецификация,
	|	Выборка.КоличествоСпецификацияМатериал,
	|	Выборка.КоличествоЗаказМатериалДолжно
	|ПОМЕСТИТЬ ДанныеЗаказов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказНаПроизводствоПродукция.Ссылка КАК Ссылка,
	|		ЗаказНаПроизводствоПродукция.КодСтроки КАК КодСтроки,
	|		ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
	|		ЗаказНаПроизводствоПродукция.Количество КАК Количество,
	|		ЗаказНаПроизводствоМатериалыИУслуги.НомерСтроки КАК НомерСтрокиМатериалыИУслуги,
	|		ЗаказНаПроизводствоМатериалыИУслуги.Номенклатура КАК Номенклатура,
	|		ЗаказНаПроизводствоМатериалыИУслуги.Характеристика КАК Характеристика,
	|		ЗаказНаПроизводствоВыходныеИзделия.Количество КАК КоличествоЗаказ,
	|		ЗаказНаПроизводствоМатериалыИУслуги.Количество КАК КоличествоЗаказМатериал,
	|		РесурсныеСпецификацииВыходныеИзделия.Количество КАК КоличествоСпецификация,
	|		РесурсныеСпецификацииМатериалыИУслуги.Количество КАК КоличествоСпецификацияМатериал,
	|		ВЫРАЗИТЬ(ЗаказНаПроизводствоВыходныеИзделия.Количество / РесурсныеСпецификацииВыходныеИзделия.Количество * РесурсныеСпецификацииМатериалыИУслуги.Количество КАК ЧИСЛО(15, 3)) КАК КоличествоЗаказМатериалДолжно
	|	ИЗ
	|		Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.МатериалыИУслуги КАК ЗаказНаПроизводствоМатериалыИУслуги
	|			ПО ЗаказНаПроизводствоПродукция.Ссылка = ЗаказНаПроизводствоМатериалыИУслуги.Ссылка
	|				И ЗаказНаПроизводствоПродукция.КлючСвязи = ЗаказНаПроизводствоМатериалыИУслуги.КлючСвязиПродукция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК РесурсныеСпецификацииВыходныеИзделия
	|			ПО ЗаказНаПроизводствоПродукция.Спецификация = РесурсныеСпецификацииВыходныеИзделия.Ссылка
	|				И (РесурсныеСпецификацииВыходныеИзделия.НомерСтроки = 1)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.ВыходныеИзделия КАК ЗаказНаПроизводствоВыходныеИзделия
	|			ПО ЗаказНаПроизводствоПродукция.Ссылка = ЗаказНаПроизводствоВыходныеИзделия.Ссылка
	|				И ЗаказНаПроизводствоПродукция.КлючСвязи = ЗаказНаПроизводствоВыходныеИзделия.КлючСвязиПродукция
	|				И (ЗаказНаПроизводствоВыходныеИзделия.Номенклатура = РесурсныеСпецификацииВыходныеИзделия.Номенклатура)
	|				И (ЗаказНаПроизводствоВыходныеИзделия.Характеристика = РесурсныеСпецификацииВыходныеИзделия.Характеристика)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
	|			ПО ЗаказНаПроизводствоПродукция.Спецификация = РесурсныеСпецификацииМатериалыИУслуги.Ссылка
	|				И (ЗаказНаПроизводствоМатериалыИУслуги.Номенклатура = РесурсныеСпецификацииМатериалыИУслуги.Номенклатура)
	|				И (ЗаказНаПроизводствоМатериалыИУслуги.Характеристика = РесурсныеСпецификацииМатериалыИУслуги.Характеристика)
	|	ГДЕ
	|		ЗаказНаПроизводствоПродукция.Ссылка.Дата >= &Дата
	|		И ЗаказНаПроизводствоПродукция.ЕстьСоответствиеСтандартнойСпецификации) КАК Выборка
	|ГДЕ
	|	Выборка.КоличествоЗаказМатериал <> Выборка.КоличествоЗаказМатериалДолжно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗаказов.Заказ,
	|	ДанныеЗаказов.КодСтроки,
	|	ДанныеЗаказов.Спецификация,
	|	ДанныеЗаказов.Количество,
	|	ДанныеЗаказов.НомерСтрокиМатериалыИУслуги,
	|	ДанныеЗаказов.Номенклатура,
	|	ДанныеЗаказов.Характеристика,
	|	ДанныеЗаказов.КоличествоЗаказ,
	|	ДанныеЗаказов.КоличествоЗаказМатериал,
	|	ДанныеЗаказов.КоличествоСпецификация,
	|	ДанныеЗаказов.КоличествоСпецификацияМатериал,
	|	ДанныеЗаказов.КоличествоЗаказМатериалДолжно
	|ИЗ
	|	ДанныеЗаказов КАК ДанныеЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выборка.Ссылка,
	|	Выборка.Заказ,
	|	Выборка.КодСтроки,
	|	Выборка.Запланировано,
	|	Выборка.Произведено,
	|	Выборка.НомерСтроки,
	|	Выборка.Количество,
	|	Выборка.КоличествоДолжно
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка КАК Ссылка,
	|		МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.Распоряжение КАК Заказ,
	|		МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.КодСтроки КАК КодСтроки,
	|		МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.Запланировано КАК Запланировано,
	|		МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.Произведено КАК Произведено,
	|		МаршрутныйЛистПроизводстваМатериалыИУслуги.НомерСтроки КАК НомерСтроки,
	|		МаршрутныйЛистПроизводстваМатериалыИУслуги.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.Произведено = 0
	|				ТОГДА МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.Запланировано
	|			ИНАЧЕ МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.Произведено
	|		КОНЕЦ * ДанныеЗаказов.КоличествоСпецификацияМатериал КАК КоличествоДолжно
	|	ИЗ
	|		Документ.МаршрутныйЛистПроизводства.МатериалыИУслуги КАК МаршрутныйЛистПроизводстваМатериалыИУслуги
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеЗаказов КАК ДанныеЗаказов
	|			ПО МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.Распоряжение = ДанныеЗаказов.Заказ
	|				И МаршрутныйЛистПроизводстваМатериалыИУслуги.Ссылка.КодСтроки = ДанныеЗаказов.КодСтроки
	|				И МаршрутныйЛистПроизводстваМатериалыИУслуги.Номенклатура = ДанныеЗаказов.Номенклатура
	|				И МаршрутныйЛистПроизводстваМатериалыИУслуги.Характеристика = ДанныеЗаказов.Характеристика) КАК Выборка
	|ГДЕ
	|	Выборка.Количество <> (ВЫРАЗИТЬ(Выборка.КоличествоДолжно КАК ЧИСЛО(15, 3)))
	|	И Выборка.Количество <> 0";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаДанных.Загрузить(МассивРезультатов[1].Выгрузить());
	ТаблицаДанныхМЛ.Загрузить(МассивРезультатов[2].Выгрузить());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбработатьЭлемент(ДанныеЭлемента, ДополнительныеПараметры)
	
	ДокументОбъект = ДанныеЭлемента.Заказ.ПолучитьОбъект();
	СтрокаТЧ = ДокументОбъект.МатериалыИУслуги[ДанныеЭлемента.НомерСтрокиМатериалыИУслуги - 1];
	СтрокаТЧ.Количество = ДанныеЭлемента.КоличествоЗаказМатериалДолжно;
	СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.Количество;
	
	ЗаписатьДокумент(ДокументОбъект);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Заказ",     ДанныеЭлемента.Заказ);
	СтруктураОтбора.Вставить("КодСтроки", ДанныеЭлемента.КодСтроки);
	
	НайденныеСтроки = ДополнительныеПараметры.ДанныеМЛ.НайтиСтроки(СтруктураОтбора);
	Для каждого СтрокаМЛ из НайденныеСтроки Цикл
		
		ДокументМЛ = СтрокаМЛ.Ссылка.ПолучитьОбъект();
		
		СтрокаТЧ = ДокументМЛ.МатериалыИУслуги[СтрокаМЛ.НомерСтроки - 1];
		СтрокаТЧ.Количество           = СтрокаМЛ.КоличествоДолжно;
		СтрокаТЧ.КоличествоУпаковок   = СтрокаТЧ.Количество;
		СтрокаТЧ.КоличествоОтклонение = СтрокаТЧ.КоличествоФакт - СтрокаТЧ.Количество;
		СтрокаТЧ.КоличествоУпаковокОтклонение = СтрокаТЧ.КоличествоУпаковокФакт - СтрокаТЧ.КоличествоУпаковок;
		
		ЗаписатьДокумент(ДокументМЛ);
		
	КонецЦикла;	
	
КонецФункции	

&НаСервереБезКонтекста
Функция ЗаписатьДокумент(ДокументОбъект)
	
	ДокументОбъект.ОбменДанными.Загрузка = Истина;
	ДокументОбъект.Записать();
	
	Если ДокументОбъект.Проведен Тогда
		ДокументОбъект.ОбменДанными.Загрузка = Ложь;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Функция ИнициализироватьДопПараметры()
	
	Структура = Новый Структура;
	Структура.Вставить("АдресДанныхМЛ", АдресДанныхМЛ);
	
	Возврат Структура;
	
КонецФункции	

/////////////////////////////////////////////////////////////////////

&НаСервере
Функция ИнициализацияОбработкиСервер()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ТаблицаДанных",   ТаблицаДанных.Выгрузить(Новый Структура("Пометка", Истина)));
	Запрос.Параметры.Вставить("ТаблицаДанныхМЛ", ТаблицаДанныхМЛ.Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таб.Заказ,
	|	Таб.НомерСтрокиМатериалыИУслуги,
	|	Таб.КоличествоЗаказМатериалДолжно,
	|	Таб.КодСтроки
	|ПОМЕСТИТЬ ТаблицаДанных
	|ИЗ
	|	&ТаблицаДанных КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Ссылка,
	|	Таб.НомерСтроки,
	|	Таб.КоличествоДолжно,
	|	Таб.Заказ,
	|	Таб.КодСтроки
	|ПОМЕСТИТЬ ТаблицаДанныхМЛ
	|ИЗ
	|	&ТаблицаДанныхМЛ КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Заказ,
	|	Таб.НомерСтрокиМатериалыИУслуги,
	|	Таб.КоличествоЗаказМатериалДолжно,
	|	Таб.КодСтроки
	|ИЗ
	|	ТаблицаДанных КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Ссылка,
	|	Таб.НомерСтроки,
	|	Таб.КоличествоДолжно,
	|	Таб.Заказ,
	|	Таб.КодСтроки
	|ИЗ
	|	ТаблицаДанныхМЛ КАК Таб";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	Данные      = МассивРезультатов[2].Выгрузить();
	ДанныеМЛ    = МассивРезультатов[3].Выгрузить();
	
	АдресДанных   = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
	АдресДанныхМЛ = ПоместитьВоВременноеХранилище(ДанныеМЛ, УникальныйИдентификатор);
	
	Если ТипЗнч(Данные) = Тип("ДеревоЗначений") Тогда
		Возврат Данные.Строки.Количество();
	Иначе	
		Возврат Данные.Количество();
	КонецЕсли;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбработатьПорциюНаСервере(Знач Начало, Знач Конец, Знач АдресДанных, Знач ДополнительныеПараметры)
	
	Данные = ПолучитьИзВременногоХранилища(АдресДанных);
	Если ТипЗнч(Данные) = Тип("ДеревоЗначений") Тогда
		Данные = Данные.Строки;
	КонецЕсли;	
	
	ДанныеМЛ = ПолучитьИзВременногоХранилища(ДополнительныеПараметры.АдресДанныхМЛ);
	ДополнительныеПараметры.Вставить("ДанныеМЛ", ДанныеМЛ);
	
	КоличествоОшибок = 0;
	Для Счетчик = Начало - 1 По Конец - 1 Цикл
		
		Попытка
			НачатьТранзакцию();
			ОбработатьЭлемент(Данные[Счетчик], ДополнительныеПараметры);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			КоличествоОшибок = КоличествоОшибок + 1;
			Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;	
		
	КонецЦикла;
	
	Возврат КоличествоОшибок;
	
КонецФункции	
	
&НаКлиенте
Процедура ВыполнитьОбработкуИндикатор(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияВопроса", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Выполнить обработку?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуСостояние(Команда)
	
	ВыполнитьОбработку(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияВопроса(Ответ, Параметр) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	ВыполнитьОбработку(1, Элементы.Индикатор, Элементы.Обработано);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(РазмерШага, ЭлементИндикатор = Неопределено, ЭлементПояснение = Неопределено)
	
	Количество      = ИнициализацияОбработкиСервер();
	КоличествоШагов = Цел(Количество / РазмерШага);
	КоличествоЦел   = КоличествоШагов * РазмерШага;
	
	Если КоличествоЦел < Количество Тогда
		МаксимальноеЗначение = КоличествоШагов + 1;
	Иначе
		МаксимальноеЗначение = КоличествоШагов;
	КонецЕсли;
	
	Если ЭлементИндикатор <> Неопределено Тогда
		ЭлементИндикатор.МаксимальноеЗначение = МаксимальноеЗначение;
	КонецЕсли;	
	
	Пояснение = "Для прерывания нажмите Ctrl+Break";
	ДополнительныеПараметры = ИнициализироватьДопПараметры();
	
	ВремяНачала = ТекущаяДата();
	
	ВсегоОшибок = 0;
	Для Счетчик = 1 По КоличествоШагов Цикл
		
		ОшибокНаШаге = ОбработатьПорциюНаСервере(РазмерШага * (Счетчик - 1) + 1, РазмерШага * Счетчик, АдресДанных, ДополнительныеПараметры);
		ВсегоОшибок = ВсегоОшибок + ОшибокНаШаге;
		
		Текст = "Обработано: " + Формат(РазмерШага * Счетчик) + " из " + Формат(Количество);
		Если ВсегоОшибок > 0 Тогда
			Текст = Текст + " - Ошибок: " + Формат(ВсегоОшибок);
		КонецЕсли;	
		
		ПрошлоВремени   = ТекущаяДата() - ВремяНачала;
		СкоростьШага    = ПрошлоВремени / Счетчик;
		ОсталосьВремени = Окр((КоличествоШагов - Счетчик) * СкоростьШага, 0);
		ОсталосьВремениМин = Цел(ОсталосьВремени / 60);
		ОсталосьВремениСек = ОсталосьВремени - 60*ОсталосьВремениМин;
		
		Текст = Текст + ". Осталось: " + ОсталосьВремениМин + "м " + ОсталосьВремениСек + " с";
		
		Если ЭлементИндикатор = Неопределено Тогда
			Состояние(Текст, Окр(Счетчик / МаксимальноеЗначение * 100, 0), Пояснение);
		Иначе
			ЭтаФорма[ЭлементИндикатор.Имя] = Счетчик;
			ЭтаФорма[ЭлементПояснение.Имя] = Текст;
		КонецЕсли;	
		
		ОбработкаПрерыванияПользователя();
		Если ЭлементИндикатор <> Неопределено Тогда
			ОбновитьОтображениеДанных();
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоЦел < Количество Тогда
		ОбработатьПорциюНаСервере(КоличествоШагов * РазмерШага + 1, Количество, АдресДанных, ДополнительныеПараметры);
	КонецЕсли;
	
	Состояние("Обработка завершениа");
	
КонецПроцедуры	

// Прочие процедуры и функции
&НаСервереБезКонтекста
Функция ОбработатьПроводки(ДанныеЭлемента, ДополнительныеПараметры)
	
	Сообщить(ДанныеЭлемента.Регистратор);
	
	НаборЗаписей = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДанныеЭлемента.Регистратор);
	НаборЗаписей.Прочитать();
		
	Для каждого Строка1 Из ДанныеЭлемента.Строки Цикл
		
		Запись = НаборЗаписей[Строка1.НомерСтроки - 1];
		
		Если Строка1.ДтКт = "Дт" Тогда
		Иначе
		КонецЕсли;	
		
	КонецЦикла;
	
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записать();
	
КонецФункции

&НаКлиенте
Процедура НайтиДокументы(Команда)
	НайтиДокументыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = ТаблицаДанных.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ИмяПоля = СтрЗаменить(Поле.Имя, "ТаблицаДанных", "");
	ИмяПоля = СтрРазделить(ИмяПоля, "_")[0];
	
	Если ИмяПоля = "Пометка" Тогда
	Иначе	
		ПоказатьЗначение(, ДанныеСтроки[ИмяПоля]);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВклВсе(Команда)
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		СтрокаТЗ.Пометка = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыклВсе(Команда)
	
	Для каждого СтрокаТЗ из ТаблицаДанных Цикл
		СтрокаТЗ.Пометка = Ложь;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхМЛВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = ТаблицаДанныхМЛ.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ИмяПоля = СтрЗаменить(Поле.Имя, "ТаблицаДанныхМЛ", "");
	ИмяПоля = СтрРазделить(ИмяПоля, "_")[0];
	
	Если ИмяПоля = "Пометка" Тогда
	Иначе	
		ПоказатьЗначение(, ДанныеСтроки[ИмяПоля]);
	КонецЕсли;	
	
КонецПроцедуры
