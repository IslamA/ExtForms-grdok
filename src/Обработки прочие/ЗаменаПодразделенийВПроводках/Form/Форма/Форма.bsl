
&НаСервере
Процедура НайтиОстаткиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	Запрос.Параметры.Вставить("Счет",        Объект.Счет);
	Запрос.Параметры.Вставить("Дата",        Объект.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Выборка.Субконто1,
	|	Выборка.Субконто2
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		Рег.Подразделение КАК Подразделение,
	|		Рег.Субконто1 КАК Субконто1,
	|		Рег.Субконто2 КАК Субконто2,
	|		Рег.СуммаОстаток КАК СуммаОстаток
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет В (&Счет), , Организация = &Организация) КАК Рег) КАК Выборка
	|
	|СГРУППИРОВАТЬ ПО
	|	Выборка.Субконто1,
	|	Выборка.Субконто2
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Выборка.Подразделение) > 1 И
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Выборка.СуммаОстаток > 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ NULL
	|		КОНЕЦ) = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.Субконто1 КАК Контрагент,
	|	Рег.Субконто2 КАК Договор,
	|	ВЫРАЗИТЬ(Рег.Субконто2 КАК Справочник.ДоговорыКонтрагентов).Подразделение КАК ДоговорПодразделение,
	|	Рег.Подразделение КАК Подразделение,
	|	Рег.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			Счет В (&Счет),
	|			,
	|			Организация = &Организация
	|				И (Субконто1, Субконто2) В
	|					(ВЫБРАТЬ
	|						Рег.Субконто1,
	|						Рег.Субконто2
	|					ИЗ
	|						Остатки КАК Рег)) КАК Рег
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Договор,
	|	Подразделение
	|ИТОГИ
	|	МАКСИМУМ(Контрагент)
	|ПО
	|	Договор
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Остатки.ПолучитьЭлементы().Очистить();
	Для каждого Строка1 из Дерево.Строки Цикл
		
		НоваяСтрока1 = Остатки.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока1, Строка1);
		
		Для каждого Строка2 из Строка1.Строки Цикл
			
			НоваяСтрока2 = НоваяСтрока1.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока2, Строка2);
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиОстатки(Команда)
	
	НайтиОстаткиНаСервере();
	
	Для каждого Строка1 из Остатки.ПолучитьЭлементы() Цикл 
		Элементы.Остатки.Развернуть(Строка1.ПолучитьИдентификатор());
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьДокументыНаСервере(Субконто1, Субконто2, Подразделение)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация",   Объект.Организация);
	Запрос.Параметры.Вставить("Счет",          Объект.Счет);
	Запрос.Параметры.Вставить("Дата",          Объект.Дата-1);
	Запрос.Параметры.Вставить("Субконто1",     Субконто1);
	Запрос.Параметры.Вставить("Субконто2",     Субконто2);
	Запрос.Параметры.Вставить("Подразделение", Подразделение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&Дата,
	|			Регистратор,
	|			Счет В (&Счет),
	|			,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто1 = &Субконто1
	|				И Субконто2 = &Субконто2,
	|			,
	|			) КАК Рег
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ТаблицаДокументов.Загрузить(Таблица);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДокументы(Команда)
	
	ТекущиеДанные = Элементы.Остатки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПоказатьДокументыНаСервере(ТекущиеДанные.Контрагент, ТекущиеДанные.Договор, ТекущиеДанные.Подразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПодразделение(Команда)
	
	ТекущиеДанные = Элементы.Остатки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Подразделение = ТекущиеДанные.Подразделение;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДеревоСумма" Тогда
		ПоказатьДокументы(Неопределено);
	ИначеЕсли Поле.Имя = "ДеревоПодразделение" Тогда	
		ВыбратьПодразделение(Неопределено)
	ИначеЕсли Поле.Имя = "ОстаткиДоговорПодразделение" Тогда	
		
		ТекущиеДанные = Остатки.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Подразделение = ТекущиеДанные.ДоговорПодразделение;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ТаблицаДокументов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ПоказатьЗначение(, ТекущиеДанные.Регистратор);
	
КонецПроцедуры

&НаСервере
Процедура ИсправитьПодразделениеНаСервере(Субконто1, Субконто2)
	
	ВидСубконто1 = Объект.Счет.ВидыСубконто[0].ВидСубконто;
	ВидСубконто2 = Объект.Счет.ВидыСубконто[1].ВидСубконто;
	
	Для каждого СтрокаТЗ из ТаблицаДокументов Цикл
		
		НаборЗаписей = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(СтрокаТЗ.Регистратор);
		НаборЗаписей.Прочитать();
		
		Для каждого Запись из НаборЗаписей Цикл
			
			Если Запись.СчетДт = Объект.Счет
				И Запись.СубконтоДт[ВидСубконто1] = Субконто1
				И Запись.СубконтоДт[ВидСубконто2] = Субконто2 Тогда
				Запись.ПодразделениеДт = Подразделение;
			КонецЕсли;	
			
			Если Запись.СчетКт = Объект.Счет
				И Запись.СубконтоКт[ВидСубконто1] = Субконто1
				И Запись.СубконтоКт[ВидСубконто2] = Субконто2 Тогда
				Запись.ПодразделениеКт = Подразделение;
			КонецЕсли;	
			
		КонецЦикла;	
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьПодразделение(Команда)
	
	ТекущиеДанные = Элементы.Остатки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Контрагент", ТекущиеДанные.Контрагент);
	ДопПараметры.Вставить("Договор",    ТекущиеДанные.Договор);
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИсправитьПодразделениеЗавершение", ЭтотОбъект, ДопПараметры), "Исправить подразделение?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет); 
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьПодразделениеЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	ИсправитьПодразделениеНаСервере(ДопПараметры.Контрагент, ДопПараметры.Договор);
	
	Состояние("Исправлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ЖурналПроводок(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Регистратор", ТекущиеДанные.Регистратор));
	ОткрытьФорму("Обработка.ОтражениеДокументовВРеглУчете.Форма.ПроводкиРегламентированногоУчета", ПараметрыФормы);
	
КонецПроцедуры
