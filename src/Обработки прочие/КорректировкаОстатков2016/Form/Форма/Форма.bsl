
&НаСервере
Функция НайтиДокументКорректировку(Комментарий, Дата = '2015-12-31')
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРегистров.Ссылка
	|ИЗ
	|	Документ.КорректировкаРегистров КАК КорректировкаРегистров
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(КорректировкаРегистров.Дата, ДЕНЬ) = &Дата
	|	И КорректировкаРегистров.Комментарий ПОДОБНО &Комментарий";
	
	Запрос.Параметры.Вставить("Дата",        НачалоДня(Дата));
	Запрос.Параметры.Вставить("Комментарий", Комментарий);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		ДокументОбъект = Документы.КорректировкаРегистров.СоздатьДокумент();
		ДокументОбъект.Дата        = КонецДня(Дата);
		ДокументОбъект.Комментарий = Комментарий;
		
	Иначе
		
		ДокументОбъект = Результат.Выгрузить()[0][0].ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Ложь;
		
	КонецЕсли;	
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Возврат ДокументОбъект;
	
КонецФункции	

&НаСервере
Функция НайтиДокументОперацияБух(Содержание, Дата = '2015-12-31')
	
	ЗапросД = Новый Запрос; 
	ЗапросД.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.ОперацияБух КАК Док
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(Док.Дата, ДЕНЬ) = &Дата
	|	И Док.Содержание ПОДОБНО &Содержание
	|	И Док.Организация = &Организация";
	
	ЗапросД.Параметры.Вставить("Дата",        НачалоДня(Дата));
	ЗапросД.Параметры.Вставить("Содержание",  Содержание);
	ЗапросД.Параметры.Вставить("Организация", Объект.Организация);
	
	Результат = ЗапросД.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		ДокументОбъект = Результат.Выгрузить()[0][0].ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Ложь;
		
	Иначе
		
		ДокументОбъект = Документы.ОперацияБух.СоздатьДокумент();
		ДокументОбъект.Дата        = КонецДня(Дата);
		ДокументОбъект.Содержание  = Содержание;
		ДокументОбъект.Организация = Объект.Организация;
		
	КонецЕсли;	
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Возврат ДокументОбъект;
	
КонецФункции	

&НаКлиенте
Процедура КорректировкаСебестоимостьБезКоличества(Команда)
	ДокументСсылка = КорректировкаСебестоимостьБезКоличестваНаСервере();
	ПоказатьОповещениеПользователя("Создан документ", ПолучитьНавигационнуюСсылку(ДокументСсылка), Строка(ДокументСсылка));
КонецПроцедуры

&НаСервере
Функция КорректировкаСебестоимостьБезКоличестваНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Рег.РазделУчета КАК РазделУчета,
	|	Рег.ВидЗапасов КАК ВидЗапасов,
	|	Рег.Организация КАК Организация,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СуммаДопРасходовОстаток КАК СуммаДопРасходов,
	|	Рег.СуммаДопРасходовБезНДСОстаток КАК СуммаДопРасходовБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&Период, Организация = &Организация) КАК Рег
	|ГДЕ
	|	Рег.КоличествоОстаток = 0";
	
	Запрос.Параметры.Вставить("Дата",        '2015-12-31 23:59:59');
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	
	ТаблицаСебестоимость = Запрос.Выполнить().Выгрузить();
	Если ТаблицаСебестоимость.Количество() > 0 Тогда
		
		ДокументОбъект = НайтиДокументКорректировку("Сторно себестоимости без количества");
		Если Ложь Тогда
			ДокументОбъект = Документы.КорректировкаРегистров.СоздатьДокумент();
		КонецЕсли;	
		
		ДокументОбъект.ТаблицаРегистров.Очистить();
		
		НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "СебестоимостьТоваров";
		
		ДокументОбъект.Движения.СебестоимостьТоваров.Загрузить(ТаблицаСебестоимость);
		ДокументОбъект.Записать();
	
		Возврат ДокументОбъект.Ссылка;
	
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура СписокКорректировок(Команда)
	
	ОткрытьФорму("Документ.КорректировкаРегистров.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаСуммыСебестоимости(Команда)
	ДокументСсылка = КорректировкаСуммыСебестоимостиНаСервере();
	ПоказатьОповещениеПользователя("Создан документ", ПолучитьНавигационнуюСсылку(ДокументСсылка), Строка(ДокументСсылка));
КонецПроцедуры

&НаСервере
Функция КорректировкаСуммыСебестоимостиНаСервере()
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура КАК Номенклатура,
	|	Док.Характеристика КАК Характеристика,
	|	СУММА(Док.Количество) КАК Количество,
	|	СУММА(Док.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|{ГДЕ
	|	Док.Характеристика.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	Док.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.Номенклатура КАК Номенклатура,
	|	Док.Характеристика КАК Характеристика,
	|	Док.Количество,
	|	Док.Сумма,
	|	Рег.КоличествоОстаток,
	|	Рег.СтоимостьОстаток,
	|	Рег.СтоимостьБезНДСОстаток,
	|	Рег.СуммаДопРасходовОстаток,
	|	Рег.СуммаДопРасходовБезНДСОстаток,
	|	Рег.СтоимостьРеглОстаток,
	|	Рег.ПостояннаяРазницаОстаток,
	|	Рег.ВременнаяРазницаОстаток,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.РазделУчета,
	|	Рег.ВидЗапасов
	|ИЗ
	|	ДанныеДокумента КАК Док
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				&Период,
	|				Организация = &Организация
	|					И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК Рег
	|		ПО Док.Номенклатура = Рег.АналитикаУчетаНоменклатуры.Номенклатура
	|			И Док.Характеристика = Рег.АналитикаУчетаНоменклатуры.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	Запрос.Параметры.Вставить("Ссылка",      Объект.Оприходование);
	Запрос.Параметры.Вставить("Склад",       Объект.Склад);
	
	Если ЗначениеЗаполнено(Объект.Характеристика)
		И Объект.ОтборПоХарактеристике Тогда
		
		ЭлементОтбора = Запрос.Отбор.Добавить("Характеристика");
		ЭлементОтбора.Установить(Объект.Характеристика, Истина);
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	ТаблицаДокумента = Запрос.Результат.Выгрузить();
	
	Для каждого СтрокаТЗ из ТаблицаДокумента Цикл
		
		ДокументОбъект =  НайтиДокументКорректировку("Корректировка остатков себестоимости: " + Строка(СтрокаТЗ.Номенклатура) + " " + Строка(СтрокаТЗ.Характеристика));
		ДокументОбъект.ПометкаУдаления = Ложь;
		
		ДокументОбъект.ТаблицаРегистров.Очистить();
		НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "СебестоимостьТоваров";
		
		НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "ПартииРасходовНаСебестоимостьТоваров";
		
		НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "ПартииЗатратНаВыпуск";
		
		ДокументОбъект.Движения.СебестоимостьТоваров.Записывать = Истина;
		ДокументОбъект.Движения.ПартииРасходовНаСебестоимостьТоваров.Записывать = Истина;
		ДокументОбъект.Движения.ПартииЗатратНаВыпуск.Записывать = Истина;
	
	
		Запись = ДокументОбъект.Движения.СебестоимостьТоваров.Добавить();
		Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
		Запись.Период      = '2015-12-31 23:59:59';
		Запись.Организация = Объект.Организация;
		Запись.АналитикаУчетаНоменклатуры = СтрокаТЗ.АналитикаУчетаНоменклатуры;
		Запись.РазделУчета = СтрокаТЗ.РазделУчета;
		Запись.ВидЗапасов  = СтрокаТЗ.ВидЗапасов;
		
		Запись.Стоимость       = -СтрокаТЗ.СтоимостьОстаток;
		Запись.СтоимостьРегл   = -СтрокаТЗ.СтоимостьРеглОстаток;
		Запись.СтоимостьБезНДС = -СтрокаТЗ.СтоимостьБезНДСОстаток;
		
		// Доп суммы просто сторнируем
		// также нужно отсторнировать регистр ПартииРасходовНаСебестоимостьТоваров
		Запись.СуммаДопРасходовБезНДС = -СтрокаТЗ.СуммаДопРасходовБезНДСОстаток;
		Запись.СуммаДопРасходов       = -СтрокаТЗ.СуммаДопРасходовОстаток;
		Запись.ПостояннаяРазница      = -СтрокаТЗ.ПостояннаяРазницаОстаток;
		Запись.ВременнаяРазница       = -СтрокаТЗ.ВременнаяРазницаОстаток;
		
		
		Запись = ДокументОбъект.Движения.СебестоимостьТоваров.Добавить();
		Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
		Запись.Период      = '2015-12-31 23:59:59';
		Запись.Организация = Объект.Организация;
		Запись.АналитикаУчетаНоменклатуры = СтрокаТЗ.АналитикаУчетаНоменклатуры;
		Запись.РазделУчета = СтрокаТЗ.РазделУчета;
		Запись.ВидЗапасов  = СтрокаТЗ.ВидЗапасов;
		
		// Все суммы равны новой сумме
		Структура = ТаблицаПартийЗатрат(СтрокаТЗ.АналитикаУчетаНоменклатуры);
		СуммаДолжнаБыть = СтрокаТЗ.Сумма;
		
		Запись.Стоимость       = СуммаДолжнаБыть + Структура.ОстаткиСНДС.Итог("НДСРегл");
		Запись.СтоимостьРегл   = СуммаДолжнаБыть;
		Запись.СтоимостьБезНДС = СуммаДолжнаБыть;
		
		// Сторнируем доп расходы
		ТаблицаПартийДопРасходов = ТаблицаПартийДопРасходов(СтрокаТЗ.АналитикаУчетаНоменклатуры);
		Для каждого Строка1 из ТаблицаПартийДопРасходов Цикл
			
			ЗаписьДР = ДокументОбъект.Движения.ПартииРасходовНаСебестоимостьТоваров.Добавить();
			ЗаписьДР.ВидДвижения = ВидДвиженияНакопления.Расход;
			ЗаписьДР.Период      = '2015-12-31 23:59:59';
			ЗаполнитьЗначенияСвойств(ЗаписьДР, Строка1);
			
		КонецЦикла;	
		
		// Сторнируем затрыты на выпкуск без НДС
		Для каждого Строка2 из Структура.ОстаткиБезНДС Цикл
			
			ЗаписьЗатраты = ДокументОбъект.Движения.ПартииЗатратНаВыпуск.Добавить();
			ЗаписьЗатраты.ВидДвижения = ВидДвиженияНакопления.Расход;
			ЗаписьЗатраты.Период      = '2015-12-31 23:59:59';
			ЗаполнитьЗначенияСвойств(ЗаписьЗатраты, Строка2);
			
		КонецЦикла;	
		
		// Скорректируем суммы
		СуммаЕсть = Структура.ОстаткиСНДС.Итог("СтоимостьРегл");
		
		ОстатокСуммыДолжнаБыть = СуммаДолжнаБыть;
		ОстатокСуммыЕсть       = СуммаЕсть;
		
		Для каждого Строка3 из Структура.ОстаткиСНДС Цикл
			
			СуммаДолжнаБытьПоСтроке = Окр(ОстатокСуммыДолжнаБыть * Строка3.СтоимостьРегл / ОстатокСуммыЕсть, 2);
				
			ОстатокСуммыДолжнаБыть = ОстатокСуммыДолжнаБыть - СуммаДолжнаБытьПоСтроке;
			ОстатокСуммыЕсть       = ОстатокСуммыЕсть - Строка3.СтоимостьРегл;
			
			// Минус
			ЗаписьЗатраты = ДокументОбъект.Движения.ПартииЗатратНаВыпуск.Добавить();
			ЗаписьЗатраты.ВидДвижения = ВидДвиженияНакопления.Приход;
			ЗаписьЗатраты.Период      = '2015-12-31 23:59:59';
			ЗаполнитьЗначенияСвойств(ЗаписьЗатраты, Строка3);
			
			ЗаписьЗатраты.Количество = -Строка3.Количество;
			ЗаписьЗатраты.НДСРегл    = -Строка3.НДСРегл;
			
			ЗаписьЗатраты.СтоимостьРегл   = -Строка3.СтоимостьРегл;
			ЗаписьЗатраты.СтоимостьБезНДС = -Строка3.СтоимостьБезНДС;
			ЗаписьЗатраты.Стоимость       = -Строка3.Стоимость;
			
			ЗаписьЗатраты.ПостояннаяРазница = -Строка3.ПостояннаяРазница;
			ЗаписьЗатраты.ВременнаяРазница  = -Строка3.ВременнаяРазница;
			
			// Плюс
			ЗаписьЗатраты = ДокументОбъект.Движения.ПартииЗатратНаВыпуск.Добавить();
			ЗаписьЗатраты.ВидДвижения = ВидДвиженияНакопления.Приход;
			ЗаписьЗатраты.Период      = '2015-12-31 23:59:59';
			ЗаполнитьЗначенияСвойств(ЗаписьЗатраты, Строка3);
			
			ЗаписьЗатраты.Количество = Строка3.Количество;
			ЗаписьЗатраты.НДСРегл    = Строка3.НДСРегл;
			
			ЗаписьЗатраты.СтоимостьРегл   = СуммаДолжнаБытьПоСтроке;
			ЗаписьЗатраты.СтоимостьБезНДС = СуммаДолжнаБытьПоСтроке;
			ЗаписьЗатраты.Стоимость       = СуммаДолжнаБытьПоСтроке + ЗаписьЗатраты.НДСРегл;
			
			ЗаписьЗатраты.ПостояннаяРазница = 0;
			ЗаписьЗатраты.ВременнаяРазница  = 0;
			
		КонецЦикла;	
		
		//Структура = ТаблицаПартийЗатрат(Запись.АналитикаУчетаНоменклатуры);
		//Структура.ОстаткиСНДС.Итог("СтоимостьРегл");
		//Структура.ОстаткиБезНДС.Итог("СтоимостьРегл");
		//
		//Возврат ДокументОбъект.Ссылка;
		
		ДокументОбъект.Записать();

	КонецЦикла;	
	
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

&НаСервере
Функция ТаблицаПартийЗатрат(АналитикаУчетаПродукции)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Организация,
	|	Рег.АналитикаУчетаПродукции,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.ВидЗапасов,
	|	Рег.ДокументВыпуска,
	|	Рег.ДокументПоступления,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И АналитикаУчетаПродукции = &АналитикаУчетаПродукции) КАК Рег
	|ГДЕ
	|	Рег.НДСРеглОстаток <= 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтоимостьРегл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.Организация,
	|	Рег.АналитикаУчетаПродукции,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.ВидЗапасов,
	|	Рег.ДокументВыпуска,
	|	Рег.ДокументПоступления,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И АналитикаУчетаПродукции = &АналитикаУчетаПродукции) КАК Рег
	|ГДЕ
	|	Рег.НДСРеглОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтоимостьРегл";
	
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	Запрос.Параметры.Вставить("АналитикаУчетаПродукции", АналитикаУчетаПродукции);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Структура = Новый Структура;
	Структура.Вставить("ОстаткиБезНДС",   Результат[0].Выгрузить()); 
	Структура.Вставить("ОстаткиСНДС", Результат[1].Выгрузить()); 
	
	Возврат Структура;
	
КонецФункции

&НаСервере
Функция ТаблицаПартийДопРасходов(АналитикаУчетаНоменклатуры)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Организация,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.ДокументПоступления,
	|	Рег.ВидЗапасов,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.ДокументПоступленияРасходов,
	|	Рег.СтатьяРасходов,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры) КАК Рег";
	
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	Запрос.Параметры.Вставить("АналитикаУчетаНоменклатуры", АналитикаУчетаНоменклатуры);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

&НаКлиенте
Процедура ПроверкаОстатков(Команда)
	ПроверкаОстатковНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверкаОстатковНаСервере()
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура КАК Номенклатура,
	|	Док.Характеристика КАК Характеристика,
	|	СУММА(Док.Количество) КАК Количество,
	|	СУММА(Док.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|{ГДЕ
	|	Док.Характеристика.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Номенклатура,
	|	Док.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.Номенклатура КАК Номенклатура,
	|	Док.Характеристика КАК Характеристика,
	|	Док.Количество,
	|	Док.Сумма,
	|	РегСебестоимость.КоличествоОстаток КАК РегСебестоимостьКоличество,
	|	РегСебестоимость.СтоимостьРеглОстаток КАК РегСебестоимостьСумма,
	|	РегЗатраты.Сумма КАК РегЗатратыСумма
	|ИЗ
	|	ДанныеДокумента КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				&Период,
	|				Организация = &Организация
	|					И (АналитикаУчетаНоменклатуры.Номенклатура, АналитикаУчетаНоменклатуры.Характеристика) В
	|						(ВЫБРАТЬ
	|							Док.Номенклатура,
	|							Док.Характеристика
	|						ИЗ
	|							ДанныеДокумента КАК Док)
	|					И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК РегСебестоимость
	|		ПО Док.Номенклатура = РегСебестоимость.АналитикаУчетаНоменклатуры.Номенклатура
	|			И Док.Характеристика = РегСебестоимость.АналитикаУчетаНоменклатуры.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Рег.АналитикаУчетаПродукции.Номенклатура КАК Номенклатура,
	|			Рег.АналитикаУчетаПродукции.Характеристика КАК Характеристика,
	|			СУММА(Рег.СтоимостьРеглОстаток) КАК Сумма
	|		ИЗ
	|			РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(
	|					&Период,
	|					Организация = &Организация
	|						И (АналитикаУчетаПродукции.Номенклатура, АналитикаУчетаПродукции.Характеристика) В
	|							(ВЫБРАТЬ
	|								Док.Номенклатура,
	|								Док.Характеристика
	|							ИЗ
	|								ДанныеДокумента КАК Док)
	|						И АналитикаУчетаПродукции.Склад = &Склад) КАК Рег
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Рег.АналитикаУчетаПродукции.Номенклатура,
	|			Рег.АналитикаУчетаПродукции.Характеристика) КАК РегЗатраты
	|		ПО Док.Номенклатура = РегЗатраты.Номенклатура
	|			И Док.Характеристика = РегЗатраты.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	Запрос.Параметры.Вставить("Склад",       Объект.Склад);
	Запрос.Параметры.Вставить("Ссылка",      Объект.Оприходование);
	
	Если ЗначениеЗаполнено(Объект.Характеристика)
		И Объект.ОтборПоХарактеристике Тогда
		
		ЭлементОтбора = Запрос.Отбор.Добавить("Характеристика");
		ЭлементОтбора.Установить(Объект.Характеристика, Истина);
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	ТаблицаОстатков.Загрузить(Запрос.Результат.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДокументы(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьДокументыОтвет", ЭтотОбъект), "Удалить документы?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДокументыОтвет(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Состояние("Удаление документов");
		УдалитьДокументыСервер();
		Состояние("Документы удалены");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДокументыСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.КорректировкаРегистров КАК Док
	|ГДЕ
	|	(Док.Комментарий ПОДОБНО &Комментарий1
	|			ИЛИ Док.Комментарий ПОДОБНО &Комментарий2)";
	
	Запрос.Параметры.Вставить("Комментарий1", "Корректировка остатков себестоимости:%");
	Запрос.Параметры.Вставить("Комментарий2", "Сторно отрицательных остатков");
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из ТаблицаДокументов Цикл
		
		ДокументОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
		
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.ОперацияБух КАК Док
	|ГДЕ
	|	(Док.Содержание ПОДОБНО &Комментарий1
	|			ИЛИ Док.Комментарий ПОДОБНО &Комментарий2)";
	
	Запрос.Параметры.Вставить("Комментарий1", "Сторно счета 20");
	Запрос.Параметры.Вставить("Комментарий2", "Корректировка остатков 43");
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из ТаблицаДокументов Цикл
		
		ДокументОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КорректироватьПроводки43(Команда)
	ДокументСсылка = КорректироватьПроводки43НаСервере();
	ПоказатьОповещениеПользователя("Создан документ", ПолучитьНавигационнуюСсылку(ДокументСсылка), Строка(ДокументСсылка));
КонецПроцедуры

&НаСервере
Функция КорректироватьПроводки43НаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Выборка.Номенклатура,
	|	Рег.Субконто2 КАК Склад,
	|	Выборка.Сумма,
	|	Рег.СуммаОстаток,
	|	Рег.СуммаНУОстаток,
	|	Рег.СуммаПРОстаток,
	|	Рег.СуммаВРОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Док.Номенклатура КАК Номенклатура,
	|		СУММА(Док.Сумма) КАК Сумма
	|	ИЗ
	|		Документ.ОприходованиеИзлишковТоваров.Товары КАК Док
	|	ГДЕ
	|		Док.Ссылка = &Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Док.Номенклатура) КАК Выборка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет = &Счет, , Организация = &Организация) КАК Рег
	|		ПО Выборка.Номенклатура = Рег.Субконто1";
	
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	Запрос.Параметры.Вставить("Счет",        ПланыСчетов.Хозрасчетный.НайтиПоКоду("43"));
	Запрос.Параметры.Вставить("Ссылка",      Объект.Оприходование);
	
	ТаблицаБух = Запрос.Выполнить().Выгрузить();
	
	Содержание = "Корректировка остатков 43";
	ДокументОбъект = НайтиДокументОперацияБух(Содержание);
	Если Ложь Тогда
		ДокументОбъект = Документы.ОперацияБух.СоздатьДокумент();
	КонецЕсли;	
	
	ДокументОбъект.Движения.Хозрасчетный.Записывать = Истина;
	
	Для каждого СтрокаТЗ из ТаблицаБух Цикл
		
		Запись = ДокументОбъект.Движения.Хозрасчетный.Добавить();
		Запись.Период      = КонецДня('2015-12-31');
		Запись.Организация = Объект.Организация;
		
		Запись.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02.1");
		БухгалтерскийУчет.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, "ПрочиеДоходыИРасходы", ПланыВидовХарактеристик.СтатьиРасходов.НайтиПоКоду("00-000197"));
		
		Запись.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("43");
		БухгалтерскийУчет.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, "Номенклатура", СтрокаТЗ.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, "Склады",       СтрокаТЗ.Склад);
		
		Запись.Сумма     = СтрокаТЗ.СуммаОстаток;
		Запись.СуммаНУКт = СтрокаТЗ.СуммаНУОстаток;
		Запись.СуммаПРКт = СтрокаТЗ.СуммаПРОстаток;
		Запись.СуммаВРКт = СтрокаТЗ.СуммаВрОстаток;
		
		
		Запись = ДокументОбъект.Движения.Хозрасчетный.Добавить();
		Запись.Период      = КонецДня('2015-12-31');
		Запись.Организация = Объект.Организация;
		
		Запись.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("43");
		БухгалтерскийУчет.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, "Номенклатура", СтрокаТЗ.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, "Склады",       СтрокаТЗ.Склад);
		
		Запись.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.01");
		БухгалтерскийУчет.УстановитьСубконто(Запись.СчетКт, Запись.СубконтоКт, "ПрочиеДоходыИРасходы", ПланыВидовХарактеристик.СтатьиРасходов.НайтиПоКоду("00-000197"));
		
		Запись.Сумма     = СтрокаТЗ.Сумма;
		Запись.СуммаНУДт = СтрокаТЗ.Сумма;
		Запись.СуммаПРДт = 0;
		Запись.СуммаВРДт = 0;
		
	КонецЦикла;	
	
	ДокументОбъект.Записать();
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ОтрицательныеОстатки011215(Команда)
	ДокументСсылка = ОтрицательныеОстаткиНаСервере('2015-12-01');
	ПоказатьОповещениеПользователя("Создан документ", ПолучитьНавигационнуюСсылку(ДокументСсылка), Строка(ДокументСсылка));
КонецПроцедуры

&НаКлиенте
Процедура ОтрицательныеОстатки010116(Команда)
	ДокументСсылка = ОтрицательныеОстаткиНаСервере('2016-01-01');
	ПоказатьОповещениеПользователя("Создан документ", ПолучитьНавигационнуюСсылку(ДокументСсылка), Строка(ДокументСсылка));
КонецПроцедуры

&НаСервере
Функция ОтрицательныеОстаткиНаСервере(ПериодОстатков)
	
	//ПериодОстатков = '2016-01-01';
	ДатаДокумента  = ПериодОстатков - 1;
		
	ДокументОбъект =  НайтиДокументКорректировку("Сторно отрицательных остатков", ДатаДокумента);
	ДокументОбъект.ПометкаУдаления = Ложь;
	
	ДокументОбъект.ТаблицаРегистров.Очистить();
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "СебестоимостьТоваров";
	
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПартииНезавершенногоПроизводства";
	
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПартииПроизводственныхЗатрат";
	
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПартииПрочихРасходов";
		
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПрочиеРасходы";
		
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПрочиеРасходыНезавершенногоПроизводства";
		
	НоваяСтрока = ДокументОбъект.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "МатериалыИРаботыВПроизводстве";
		
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Дата",        ДатаДокумента);
	Запрос.Параметры.Вставить("Период",      ПериодОстатков);
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	
	// СебестоимостьТоваров
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.РазделУчета,
	|	Рег.ВидЗапасов,
	|	Рег.Организация,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СуммаДопРасходовОстаток КАК СуммаДопРасходов,
	|	Рег.СуммаДопРасходовБезНДСОстаток КАК СуммаДопРасходовБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)) КАК Рег
	|ГДЕ
	|	Рег.КоличествоОстаток <= 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Дата,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.РазделУчета,
	|	Рег.ВидЗапасов,
	|	Рег.Организация,
	|	Рег.КоличествоОстаток,
	|	Рег.СтоимостьОстаток,
	|	Рег.СтоимостьБезНДСОстаток,
	|	Рег.СуммаДопРасходовОстаток,
	|	Рег.СуммаДопРасходовБезНДСОстаток,
	|	Рег.СтоимостьРеглОстаток,
	|	Рег.ПостояннаяРазницаОстаток,
	|	Рег.ВременнаяРазницаОстаток
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)) КАК Рег";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.Движения.СебестоимостьТоваров.Загрузить(Таблица);
	
	
	// ПартииНезавершенногоПроизводства
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.Организация,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.ВидЗапасов,
	|	Рег.ЗаказНаПроизводство,
	|	Рег.КодСтрокиПродукция,
	|	Рег.ДокументПоступления,
	|	Рег.Этап,
	|	Рег.СтатьяКалькуляции,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииНезавершенногоПроизводства.Остатки(&Период, Организация = &Организация) КАК Рег";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.Движения.ПартииНезавершенногоПроизводства.Загрузить(Таблица);
	
	
	// ПартииПрочихРасходов
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.Организация,
	|	Рег.Подразделение,
	|	Рег.СтатьяРасходов,
	|	Рег.АналитикаРасходов,
	|	Рег.ДокументПоступленияРасходов,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов.Остатки(&Период, Организация = &Организация) КАК Рег";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.Движения.ПартииПрочихРасходов.Загрузить(Таблица);
	
	
	// ПрочиеРасходы
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.Организация,
	|	Рег.Подразделение,
	|	Рег.СтатьяРасходов,
	|	Рег.АналитикаРасходов,
	|	Рег.СуммаОстаток КАК Сумма,
	|	Рег.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	Рег.СуммаРеглОстаток КАК СуммаРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И НЕ СтатьяРасходов.ВариантРаспределенияРасходов В (&ВариантыРаспределения)) КАК Рег";
	
	ВариантыРаспределения = Новый Массив;
	ВариантыРаспределения.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы);
	ВариантыРаспределения.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	Запрос.Параметры.Вставить("ВариантыРаспределения", ВариантыРаспределения);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.Движения.ПрочиеРасходы.Загрузить(Таблица);
	
	
	// ПрочиеРасходыНезавершенногоПроизводства
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.Организация,
	|	Рег.Подразделение,
	|	Рег.ЗаказНаПроизводство,
	|	Рег.КодСтрокиПродукция,
	|	Рег.Этап,
	|	Рег.СтатьяКалькуляции,
	|	Рег.СтатьяРасходов,
	|	Рег.АналитикаРасходов,
	|	Рег.ГруппаПродукции,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница,
	|	Рег.ДоляСтоимостиОстаток КАК ДоляСтоимости
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства.Остатки(&Период, Организация = &Организация) КАК Рег";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.Движения.ПрочиеРасходыНезавершенногоПроизводства.Загрузить(Таблица);
	
	
	// МатериалыИРаботыВПроизводстве
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.Организация,
	|	Рег.Номенклатура,
	|	Рег.Характеристика,
	|	Рег.Подразделение,
	|	Рег.Серия,
	|	Рег.Назначение,
	|	Рег.УдалитьАналитикаУчетаНоменклатуры,
	|	Рег.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве.Остатки(&Период, Организация = &Организация) КАК Рег";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.Движения.МатериалыИРаботыВПроизводстве.Загрузить(Таблица);
	
	// ПартииПроизводственныхЗатрат
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	Рег.Организация,
	|	Рег.АналитикаУчетаНоменклатуры,
	|	Рег.ВидЗапасов,
	|	Рег.ДокументПоступления,
	|	Рег.АналитикаУчетаПартий,
	|	Рег.КоличествоОстаток КАК Количество,
	|	Рег.СтоимостьОстаток КАК Стоимость,
	|	Рег.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Рег.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Рег.НДСРеглОстаток КАК НДСРегл,
	|	Рег.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	Рег.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&Период, Организация = &Организация) КАК Рег";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.Движения.ПартииПроизводственныхЗатрат.Загрузить(Таблица);
	
	
	ДокументОбъект.Записать();
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ЗакрытиеСчета20(Команда)
	ДокументСсылка = ЗакрытиеСчета20НаСервере();
	ПоказатьОповещениеПользователя("Создан документ", ПолучитьНавигационнуюСсылку(ДокументСсылка), Строка(ДокументСсылка));
КонецПроцедуры

&НаСервере
Функция ЗакрытиеСчета20НаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Подразделение,
	|	Рег.СуммаОстаток,
	|	Рег.СуммаНУОстаток,
	|	Рег.СуммаПРОстаток,
	|	Рег.СуммаВРОстаток,
	|	Рег.КоличествоОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет = &Счет, , Организация = &Организация) КАК Рег";
	
	Запрос.Параметры.Вставить("Период",      '2016-01-01');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	Запрос.Параметры.Вставить("Счет",        ПланыСчетов.Хозрасчетный.НайтиПоКоду("20"));
	Запрос.Параметры.Вставить("Ссылка",      Объект.Оприходование);
	
	ТаблицаБух = Запрос.Выполнить().Выгрузить();
	
	Содержание = "Сторно счета 20";
	ДокументОбъект = НайтиДокументОперацияБух(Содержание);
	Если Ложь Тогда
		ДокументОбъект = Документы.ОперацияБух.СоздатьДокумент();
	КонецЕсли;	
	
	ДокументОбъект.Движения.Хозрасчетный.Записывать = Истина;
	
	Для каждого СтрокаТЗ из ТаблицаБух Цикл
		
		Запись = ДокументОбъект.Движения.Хозрасчетный.Добавить();
		Запись.Период      = КонецДня('2015-12-31');
		Запись.Организация = Объект.Организация;
		
		Если СтрокаТЗ.СуммаОстаток < 0 Тогда
			Запись.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.01");
			БухгалтерскийУчет.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, "ПрочиеДоходыИРасходы", ПланыВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости);
		Иначе	
			Запись.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02.1");
			БухгалтерскийУчет.УстановитьСубконто(Запись.СчетДт, Запись.СубконтоДт, "ПрочиеДоходыИРасходы", ПланыВидовХарактеристик.СтатьиРасходов.НайтиПоКоду("00-000114"));
		КонецЕсли;
		
		Запись.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("20");
		БухгалтерскийУчет.УстановитьПодразделениеПроводки(Запись, СтрокаТЗ.Подразделение, "Кт");
		
		Запись.Сумма        = СтрокаТЗ.СуммаОстаток;
		Запись.СуммаНУКт    = СтрокаТЗ.СуммаНУОстаток;
		Запись.СуммаПРКт    = СтрокаТЗ.СуммаПРОстаток;
		Запись.СуммаВРКт    = СтрокаТЗ.СуммаВРОстаток;
		Запись.КоличествоКт = СтрокаТЗ.КоличествоОстаток;
		
	КонецЦикла;	
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции


&НаКлиенте
Процедура ОтменаРаспределениеМатериалов1215(Команда)
	ОтменаРаспределениеМатериалов1215НаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтменаРаспределениеМатериалов1215НаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.РаспределениеПроизводственныхЗатрат КАК Док
	|ГДЕ
	|	Док.Дата МЕЖДУ &Дата1 И &Дата2
	|	И Док.Проведен
	|	И Док.Организация = &Организация";
	
	Запрос.Параметры.Вставить("Дата1",       '2015-12-01');
	Запрос.Параметры.Вставить("Дата2",       '2015-12-31 23:59:59');
	Запрос.Параметры.Вставить("Организация", Объект.Организация);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		ДокументОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Комментарий = "Отмена";
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
	КонецЦикла;	
	
КонецПроцедуры


&НаКлиенте
Процедура СписокОперацийБух(Команда)
	
	ОткрытьФорму("Документ.ОперацияБух.ФормаСписка");
	
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьКорректировки311215(Команда)
	ОтменитьКорректировки311215НаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтменитьКорректировки311215НаСервере()
	
	Док1 = Документы.КорректировкаРегистров.НайтиПоНомеру("00-00000007", '2015-12-31');
	УдалитьДвиженияДокумента(Док1);
	
	Док1 = Документы.КорректировкаРегистров.НайтиПоНомеру("00-00000008", '2015-12-31');
	УдалитьДвиженияДокумента(Док1);
	
	Док1 = Документы.КорректировкаРегистров.НайтиПоНомеру("00-00000009", '2015-12-31');
	УдалитьДвиженияДокумента(Док1);
	
	Док1 = Документы.КорректировкаРегистров.НайтиПоНомеру("00-00000010", '2015-12-31');
	УдалитьДвиженияДокумента(Док1);
	
	Док1 = Документы.ОперацияБух.НайтиПоНомеру("ПЛ00-000042", '2015-12-31');
	УдалитьДвиженияДокумента(Док1);
	
	Док1 = Документы.КорректировкаНазначенияТоваров.НайтиПоНомеру("ПЛ00-000191", '2015-12-31');
	УдалитьДвиженияДокумента(Док1);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьДвиженияДокумента(Ссылка)
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	Если ДокументОбъект.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;	
	
	Для каждого НаборЗаписей из ДокументОбъект.Движения Цикл
		НаборЗаписей.Записать();
	КонецЦикла;
	
	ДокументОбъект.Проведен        = Ложь;
	ДокументОбъект.ПометкаУдаления = Истина;
	ДокументОбъект.Записать();
	
КонецПроцедуры
