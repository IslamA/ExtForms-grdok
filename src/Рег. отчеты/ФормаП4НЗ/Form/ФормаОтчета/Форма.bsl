//При создании и открытии_________________________________ 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	Отчет.ДатаНачала = НачалоКвартала(ТекущаяДата());
	Отчет.ДатаОкончание = КонецКвартала(ТекущаяДата());	
	Отчет.Организация = ОрганизацияПоУмолчанию();
	ПолеТабличногоДокументаФормаОтчета.Очистить();	
	СформироватьСтруктуруРеквизитовФормы();		
	СтрПериодОтчета = ПредставлениеПериода(
		НачалоДня(Отчет.ДатаНачала), КонецДня(Отчет.ДатаОкончание), "ФП = Истина");	
	ЭтаФорма.ПолеВыбораПериодичностиПоказаПериода = СтрПериодОтчета;	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда 
		 Элементы.Сформировать.Доступность = Ложь ;
	КонецЕсли;		
КонецПроцедуры
//_________________________________________________________



//Период для отчета________________________________________
&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	ИзменитьПериод(-1);
КонецПроцедуры
&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	ИзменитьПериод(1);
КонецПроцедуры
&НаКлиенте
Процедура ИзменитьПериод(Шаг)
	
    Отчет.ДатаОкончание = КонецКвартала(ДобавитьМесяц(Отчет.ДатаОкончание, Шаг * 3));
	Отчет.ДатаНачала= НачалоКвартала(Отчет.ДатаОкончание );
	
	СтрПериодОтчета = ПредставлениеПериода(
		НачалоДня(Отчет.ДатаНачала), КонецДня(Отчет.ДатаОкончание), "ФП = Истина");
	
	ЭтаФорма.ПолеВыбораПериодичностиПоказаПериода = СтрПериодОтчета;

КонецПроцедуры
//_________________________________________________________



// Процедуры вывода данных в печатную форму________________
&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры
&НаСервере
Процедура СформироватьНаСервере()
	
	ПолеТабличногоДокументаФормаОтчета.Очистить();
	ТабличныйДокумент = Новый ТабличныйДокумент ;
	
	Макет  = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("ФормаОтчета2015Кв1_ФормаОтчета");
    ШапкаОбособлннныеПодразделения = Макет.ПолучитьОбласть("ШапкаОбособлннныеПодразделения");	
	ТабличныйДокумент.Вывести(ШапкаОбособлннныеПодразделения);
	
	ОсновнаяЧасть1а  = Макет.ПолучитьОбласть("ОсновнаяЧасть1а");
	ТабличныйДокумент.Вывести(ОсновнаяЧасть1а);
	ТабличныйДокумент.Области["ПериодОтчета"].Значение = ПолеВыбораПериодичностиПоказаПериода;		
	
	ПолеНомерКорректировки = Макет.ПолучитьОбласть("ПолеНомерКорректировки");		
	ТабличныйДокумент.Вывести(ПолеНомерКорректировки);
	ТабличныйДокумент.Области["НомерКорректировки"].Значение = "0";	
	
	ОсновнаяЧасть1б  = Макет.ПолучитьОбласть("ОсновнаяЧасть1б");
	ТабличныйДокумент.Вывести(ОсновнаяЧасть1б);
	ТабличныйДокумент.Области["ОргНазв"].Значение = Отчет.Организация.НаименованиеПолное;		
	
	ОсновнаяЧасть2  = Макет.ПолучитьОбласть("ОсновнаяЧасть2");
	ТабличныйДокумент.Вывести(ОсновнаяЧасть2);
		
	ОсновнаяЧасть3  = Макет.ПолучитьОбласть("ОсновнаяЧасть3");
	ТабличныйДокумент.Вывести(ОсновнаяЧасть3);
	
	Для Каждого Контакт из Отчет.Организация.КонтактнаяИнформация Цикл 
		Если Контакт.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации Тогда 
			ТабличныйДокумент.Области["ОргАдрес"].Значение = Контакт.Представление;
		ИначеЕсли Контакт.Вид = Справочники.ВидыКонтактнойИнформации.EmailОрганизации Тогда   	
		//	ТабличныйДокумент.Области["ПочтаОрганизации"].Значение = Контакт.Представление;
		ИначеЕсли Контакт.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации Тогда   	
			ТабличныйДокумент.Области["ТелефонОрганизации"].Значение  = Контакт.Представление;
		КонецЕсли;
	КонецЦикла;
		
	       
	// Получаем данные для отчета
	СтруктураДанныхДляП4НЗ = ПолучитьДанныеДляП4НЗ ();	
	ТабличныйДокумент.Области["П0001000201"].Значение = СтруктураДанныхДляП4НЗ.П0001000201;	
	ТабличныйДокумент.Области["П0001000301"].Значение = СтруктураДанныхДляП4НЗ.П0001000301;	
    ТабличныйДокумент.Области["П0001000501"].Значение = СтруктураДанныхДляП4НЗ.П0001000501;	
	ТабличныйДокумент.Области["П0001000601"].Значение = СтруктураДанныхДляП4НЗ.П0001000601;	
    ТабличныйДокумент.Области["П0001000801"].Значение = СтруктураДанныхДляП4НЗ.П0001000801;
	ТабличныйДокумент.Области["П0001001201"].Значение = СтруктураДанныхДляП4НЗ.П0001000801;
    ТабличныйДокумент.Области["П0001001301"].Значение = СтруктураДанныхДляП4НЗ.П0001001301;
	ТабличныйДокумент.Области["П0001001601"].Значение = СтруктураДанныхДляП4НЗ.П0001001601;
    ТабличныйДокумент.Области["П0001001701"].Значение = СтруктураДанныхДляП4НЗ.П0001001701;
    ТабличныйДокумент.Области["П0001002001"].Значение = СтруктураДанныхДляП4НЗ.П0001002001;

	//Ситников++
	ОветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Отчет.Организация, Отчет.ДатаОкончание);
	ТабличныйДокумент.Области["ОргДолжностьИсп"].Значение = "Главный Бухгалтер";
	ТабличныйДокумент.Области["ОргИсполнитель"].Значение  = ОветственныеЛица.ГлавныйБухгалтер;
	
	//// Получаем подписанта	
	//ЗапросПодписант = Новый Запрос;
	//ЗапросПодписант.Текст = 
	//	"ВЫБРАТЬ
	//	|	СведенияОбОтветственныхЛицахСрезПоследних.ГлавныйБухгалтер
	//	|ИЗ
	//	|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних(&ДатаКонцаПериода, ) КАК СведенияОбОтветственныхЛицахСрезПоследних
	//	|ГДЕ
	//	|	СведенияОбОтветственныхЛицахСрезПоследних.Организация = &Организация";
	//ЗапросПодписант.УстановитьПараметр("ДатаКонцаПериода", Отчет.ДатаОкончание);
	//ЗапросПодписант.УстановитьПараметр("Организация",Отчет.Организация);
	//РезультатЗапросаПодписант = ЗапросПодписант.Выполнить();
	//ВыборкаДетальныеЗаписиПодписант = РезультатЗапросаПодписант.Выбрать();	
	//Пока ВыборкаДетальныеЗаписиПодписант.Следующий() Цикл
	//	 
	//	 Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписиПодписант.ГлавныйБухгалтер) Тогда 
	//	 ТабличныйДокумент.Области["ОргИсполнитель"].Значение = ВыборкаДетальныеЗаписиПодписант.ГлавныйБухгалтер;
	//	 ТабличныйДокумент.Области["ОргДолжностьИсп"].Значение = "Главный Бухгалтер";
	//	 КонецЕсли;
	//	 
	// КонецЦикла;
	//Ситников-- 
	ТабличныйДокумент.Области["ДатаСоставленияОтчета"].Значение = ТекущаяДата();
		
	ПолеТабличногоДокументаФормаОтчета.Вывести(ТабличныйДокумент);
		
КонецПроцедуры
//_________________________________________________________

//Процедуры получения данных для отчета ___________________
&НаСервере
Функция ПолучитьДанныеДляП4НЗ ();
	
    УстановитьПривилегированныйРежим(Истина);	
	
	ДанныеДляОтчета = Новый Структура("П0001000201,П0001000301,П0001000501,П0001000601,П0001000801,П0001001201,П0001001301,П0001001601,П0001001701,П0001002001");
	
	//сначала получим список сотрудников по подразделению
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних КАК КадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение В ИЕРАРХИИ(&Подразделение)
		|	ИЛИ КадроваяИсторияСотрудниковСрезПоследних.ПодразделениеПоОкончании В ИЕРАРХИИ(&Подразделение)";
	
	Запрос.УстановитьПараметр("Подразделение", отчет.Подразделение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	списСотрудников = Новый СписокЗначений;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		списСотрудников.Добавить(ВыборкаДетальныеЗаписи.сотрудник);
	КонецЦикла;
	
	// 02 Численность работников списочного состава, работавших неполное рабочее время по соглашению между работником и работодателем 1)		
	ЗапросП0001000201 = Новый Запрос;
	ЗапросП0001000201.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СостоянияСотрудниковСрезПоследних.Сотрудник
		|ПОМЕСТИТЬ ВТРаботающиеСотрудники
		|ИЗ
		|	РегистрСведений.СостоянияСотрудников.СрезПоследних(&ДатаКонцаПериода, ) КАК СостоянияСотрудниковСрезПоследних
		|ГДЕ
		|	СостоянияСотрудниковСрезПоследних.Состояние <> &Уволнен
		|	И СостоянияСотрудниковСрезПоследних.Сотрудник.ГоловнаяОрганизация = &Организация
		|	И СостоянияСотрудниковСрезПоследних.Сотрудник В(&списСотрудников)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(ГрафикРаботыСотрудниковСрезПоследних.ГрафикРаботы.НеполныйРабочийДень) КАК ГрафикРаботыНеполныйРабочийДень
		|ИЗ
		|	РегистрСведений.ГрафикРаботыСотрудников.СрезПоследних КАК ГрафикРаботыСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРаботающиеСотрудники КАК ВТРаботающиеСотрудники
		|		ПО ГрафикРаботыСотрудниковСрезПоследних.Сотрудник = ВТРаботающиеСотрудники.Сотрудник
		|ГДЕ
		|	ГрафикРаботыСотрудниковСрезПоследних.ГрафикРаботы.НеполныйРабочийДень = &НеполныйРабочийДень";	
	ЗапросП0001000201.УстановитьПараметр("ДатаКонцаПериода", Отчет.ДатаОкончание);
	ЗапросП0001000201.УстановитьПараметр("НеполныйРабочийДень",Истина);
	ЗапросП0001000201.УстановитьПараметр("Уволнен",Перечисления.СостоянияСотрудника.Увольнение);	
	ЗапросП0001000201.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001000201.УстановитьПараметр("списСотрудников",списСотрудников);
	РезультатЗапросаП0001000201 = ЗапросП0001000201.Выполнить();ВыборкаДетальныеЗаписиП0001000201 = РезультатЗапросаП0001000201.Выбрать();	
	Пока ВыборкаДетальныеЗаписиП0001000201.Следующий()Цикл	
		ДанныеДляОтчета.Вставить("П0001000201",ВыборкаДетальныеЗаписиП0001000201.ГрафикРаботыНеполныйРабочийДень);
	КонецЦикла;
	
	
	// 03 Численность работников списочного состава, находившихся в простое по вине работодателя и по причинам, не зависящим от работодателя и работника 	
	ЗапросП0001000301 = Новый Запрос;
	ЗапросП0001000301.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСостоянийСотрудников.Сотрудник) КАК Простой
		|ИЗ
		|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
		|ГДЕ
		|	(ДанныеСостоянийСотрудников.Начало МЕЖДУ &Начало И &Конец
		|			ИЛИ ДанныеСостоянийСотрудников.Окончание МЕЖДУ &Начало И &Конец)
		|	И ДанныеСостоянийСотрудников.Состояние В(&Состояние)
		|	И НЕ ДанныеСостоянийСотрудников.Сторно
		|	И ДанныеСостоянийСотрудников.Сотрудник.ГоловнаяОрганизация = &Организация
		|	И ДанныеСостоянийСотрудников.Сотрудник В(&списСотрудников)";	
	Состояние = Новый СписокЗначений ; 
	Состояние.Добавить(Перечисления.СостоянияСотрудника.ПростойПоВинеРаботодателя) ; 
	Состояние.Добавить(Перечисления.СостоянияСотрудника.ПростойНеЗависящийОтРаботодателяИРаботника);  	
	ЗапросП0001000301.УстановитьПараметр("Конец",Отчет.ДатаОкончание);
	ЗапросП0001000301.УстановитьПараметр("Начало", Отчет.ДатаНачала);
	ЗапросП0001000301.УстановитьПараметр("Состояние", Состояние);	
	ЗапросП0001000301.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001000301.УстановитьПараметр("списСотрудников",списСотрудников);
	
	РезультатЗапросаП0001000301 = ЗапросП0001000301.Выполнить();
	ВыборкаДетальныеЗаписиП0001000301 = РезультатЗапросаП0001000301.Выбрать();	
	Пока ВыборкаДетальныеЗаписиП0001000301.Следующий() Цикл
		 ДанныеДляОтчета.Вставить("П0001000301",ВыборкаДетальныеЗаписиП0001000301.Простой);
	КонецЦикла;
	
	
	// 05 Численность работников списочного состава, которым были предоставлены отпуска без сохранения заработной платы по письменному заявлению работника
	ЗапросП0001000501 = Новый Запрос;
	ЗапросП0001000501.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСостоянийСотрудников.Сотрудник) КАК ОтпускНеоплачиваемы
		|ИЗ
		|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
		|ГДЕ
		|	(ДанныеСостоянийСотрудников.Начало МЕЖДУ &Начало И &Конец
		|			ИЛИ ДанныеСостоянийСотрудников.Окончание МЕЖДУ &Начало И &Конец)
		|	И ДанныеСостоянийСотрудников.Состояние В(&Состояние)
		|	И НЕ ДанныеСостоянийСотрудников.Сторно
		|	И ДанныеСостоянийСотрудников.Сотрудник.ГоловнаяОрганизация = &Организация
		|	И ДанныеСостоянийСотрудников.Сотрудник В(&списСотрудников)";	
	Состояние = Новый СписокЗначений ; 
	Состояние.Добавить(Перечисления.СостоянияСотрудника.ОтпускНеоплачиваемыйПоРазрешениюРаботодателя);  	
	Состояние.Добавить(Перечисления.СостоянияСотрудника.ОтпускНеоплачиваемыйПоЗаконодательству) ;  	
	
	ЗапросП0001000501.УстановитьПараметр("Конец",Отчет.ДатаОкончание);
	ЗапросП0001000501.УстановитьПараметр("Начало", Отчет.ДатаНачала);
	ЗапросП0001000501.УстановитьПараметр("Состояние", Состояние);	
	ЗапросП0001000501.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001000501.УстановитьПараметр("списСотрудников",списСотрудников);
	
	РезультатЗапросаП0001000501 = ЗапросП0001000501.Выполнить();
	ВыборкаДетальныеЗаписиП0001000501 = РезультатЗапросаП0001000501.Выбрать();	
	Пока ВыборкаДетальныеЗаписиП0001000501.Следующий() Цикл
		 ДанныеДляОтчета.Вставить("П0001000501",ВыборкаДетальныеЗаписиП0001000501.ОтпускНеоплачиваемы);
	КонецЦикла;


	// 06 Численность принятых работников списочного состава - всего
	ЗапросП0001000601 = Новый Запрос;
	ЗапросП0001000601.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КадроваяИсторияСотрудников.Сотрудник) КАК ПринятоВсего
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
		|ГДЕ
		|	КадроваяИсторияСотрудников.ВидСобытия = &ВидСобытия
		|	И КадроваяИсторияСотрудников.ГоловнаяОрганизация = &Организация
		|	И КадроваяИсторияСотрудников.Сотрудник В(&списСотрудников)
		|	И КадроваяИсторияСотрудников.Период МЕЖДУ &Начало И &Конец";	
	ЗапросП0001000601.УстановитьПараметр("ВидСобытия", Перечисления.ВидыКадровыхСобытий.Прием);	
	ЗапросП0001000601.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001000601.УстановитьПараметр("Конец",Отчет.ДатаОкончание);
	ЗапросП0001000601.УстановитьПараметр("Начало", Отчет.ДатаНачала);
	ЗапросП0001000601.УстановитьПараметр("списСотрудников",списСотрудников);

	РезультатЗапросаП0001000601 = ЗапросП0001000601.Выполнить();	
	ВыборкаДетальныеЗаписиП0001000601 = РезультатЗапросаП0001000601.Выбрать();	
	Пока ВыборкаДетальныеЗаписиП0001000601.Следующий() Цикл
		ДанныеДляОтчета.Вставить("П0001000601",ВыборкаДетальныеЗаписиП0001000601.ПринятоВсего);
	КонецЦикла;
	
	
    // 08 Численность выбывших работников списочного состава - всего
	ЗапросП0001000801 = Новый Запрос;
	ЗапросП0001000801.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КадроваяИсторияСотрудников.Сотрудник) КАК Увольнение
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
		|ГДЕ
		|	КадроваяИсторияСотрудников.ВидСобытия = &ВидСобытия
		|	И КадроваяИсторияСотрудников.ГоловнаяОрганизация = &Организация
		|	И КадроваяИсторияСотрудников.Сотрудник В(&списСотрудников)
		|	И КадроваяИсторияСотрудников.Период МЕЖДУ &Начало И &Конец";	
	ЗапросП0001000801.УстановитьПараметр("ВидСобытия", Перечисления.ВидыКадровыхСобытий.Увольнение);	
	ЗапросП0001000801.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001000801.УстановитьПараметр("ДатаКонцаПериода", Отчет.ДатаОкончание);
	ЗапросП0001000801.УстановитьПараметр("списСотрудников",списСотрудников);
	ЗапросП0001000801.УстановитьПараметр("Конец",Отчет.ДатаОкончание);
	ЗапросП0001000801.УстановитьПараметр("Начало", Отчет.ДатаНачала);
	
	РезультатЗапросаП0001000801 = ЗапросП0001000801.Выполнить();	
	ВыборкаДетальныеЗаписиП0001000801 = РезультатЗапросаП0001000801.Выбрать();	
	Пока ВыборкаДетальныеЗаписиП0001000801.Следующий() Цикл
		ДанныеДляОтчета.Вставить("П0001000801",ВыборкаДетальныеЗаписиП0001000801.Увольнение);
	КонецЦикла;

	
    // 013 Численность работников списочного состава на конец отчетного квартала		
	ЗапросП0001001301 = Новый Запрос;
	ЗапросП0001001301.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СостоянияСотрудниковСрезПоследних.Сотрудник) КАК ПринятоНаКонецПериода
		|ИЗ
		|	РегистрСведений.СостоянияСотрудников.СрезПоследних(&ДатаКонцаПериода, ) КАК СостоянияСотрудниковСрезПоследних
		|ГДЕ
		|	СостоянияСотрудниковСрезПоследних.Состояние <> &Уволнен
		|	И СостоянияСотрудниковСрезПоследних.Сотрудник.ГоловнаяОрганизация = &Организация
		|	И СостоянияСотрудниковСрезПоследних.Сотрудник В(&списСотрудников)";	
	ЗапросП0001001301.УстановитьПараметр("ДатаКонцаПериода", Отчет.ДатаОкончание);
	ЗапросП0001001301.УстановитьПараметр("Уволнен",Перечисления.СостоянияСотрудника.Увольнение);
	ЗапросП0001001301.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001001301.УстановитьПараметр("списСотрудников",списСотрудников);
	
	РезультатЗапросаП0001001301 = ЗапросП0001001301.Выполнить();ВыборкаДетальныеЗаписиП0001001301 = РезультатЗапросаП0001001301.Выбрать();	
	Пока ВыборкаДетальныеЗаписиП0001001301.Следующий()Цикл	
		ДанныеДляОтчета.Вставить("П0001001301",ВыборкаДетальныеЗаписиП0001001301.ПринятоНаКонецПериода);
	КонецЦикла;

	
	// 016 Численность женщин, находящихся в отпуске по уходу за ребенком до достижения им возраста 1,5 лет, на конец отчетного квартала
	ЗапросП0001001601 = Новый Запрос;
	ЗапросП0001001601.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|    ДанныеСостоянийСотрудников.Сотрудник как сотрудник
	//	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСостоянийСотрудников.Сотрудник) КАК КоличествоЖенщинПолучающийПособиеПоУходуДоПолутораЛет
		|ИЗ
		|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
		|ГДЕ
		|	ДанныеСостоянийСотрудников.Состояние = &Состояние
		|	И НЕ ДанныеСостоянийСотрудников.Сторно
		|	И ДанныеСостоянийСотрудников.ДокументОснование.ВыплачиватьПособиеДоПолутораЛет
		|	И НЕ ДанныеСостоянийСотрудников.Сторно
		|	И (&Начало МЕЖДУ ДанныеСостоянийСотрудников.ДокументОснование.ДатаНачала И ДанныеСостоянийСотрудников.ДокументОснование.ДатаОкончанияПособияДоПолутораЛет
		|			ИЛИ &Конец МЕЖДУ ДанныеСостоянийСотрудников.ДокументОснование.ДатаНачала И ДанныеСостоянийСотрудников.ДокументОснование.ДатаОкончанияПособияДоПолутораЛет)
		|	И ДанныеСостоянийСотрудников.Сотрудник.ГоловнаяОрганизация = &Организация
		|	И ДанныеСостоянийСотрудников.Сотрудник В(&списСотрудников)";	
	ЗапросП0001001601.УстановитьПараметр("Состояние", Перечисления.СостоянияСотрудника.ОтпускПоУходуЗаРебенком); 
	ЗапросП0001001601.УстановитьПараметр("Конец",Отчет.ДатаОкончание);
	ЗапросП0001001601.УстановитьПараметр("Начало", Отчет.ДатаНачала);   	
	ЗапросП0001001601.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001001601.УстановитьПараметр("списСотрудников",списСотрудников);
	
	РезультатЗапросаП0001001601 = ЗапросП0001001601.Выполнить();	
	ВыборкаДетальныеЗаписиП0001001601 = РезультатЗапросаП0001001601.Выбрать();		
	
	СписокПолтора = новый СписокЗначений;
	всего = 0;
	Пока ВыборкаДетальныеЗаписиП0001001601.Следующий() Цикл
		//ДанныеДляОтчета.Вставить("П0001001601",ВыборкаДетальныеЗаписиП0001001601.КоличествоЖенщинПолучающийПособиеПоУходуДоПолутораЛет);
		СписокПолтора.Добавить(ВыборкаДетальныеЗаписиП0001001601.сотрудник);
		всего = всего+1;
	КонецЦикла;
	
	ДанныеДляОтчета.Вставить("П0001001601",всего);
	
	
	// 017 Численность женщин, находящихся в отпуске по уходу за ребенком в возрасте от 1,5 до 3 лет, на конец отчетного квартала
	ЗапросП0001001701 = Новый Запрос;
	ЗапросП0001001701.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСостоянийСотрудников.Сотрудник) КАК КоличествоЖенщинПолучающийПособиеПоУходуДоПолутораЛет
		|ИЗ
		|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
		|ГДЕ
		|	ДанныеСостоянийСотрудников.Состояние = &Состояние
		|	И НЕ ДанныеСостоянийСотрудников.Сторно
		|	И (&Начало МЕЖДУ ДанныеСостоянийСотрудников.ДокументОснование.ДатаОкончанияПособияДоПолутораЛет И ДанныеСостоянийСотрудников.ДокументОснование.ДатаОкончанияПособияДоТрехЛет)
		//|			ИЛИ &Конец МЕЖДУ ДанныеСостоянийСотрудников.ДокументОснование.ДатаОкончанияПособияДоПолутораЛет И ДанныеСостоянийСотрудников.ДокументОснование.ДатаОкончанияПособияДоТрехЛет)
		//|			И &Конец >= ДанныеСостоянийСотрудников.ДокументОснование.ДатаОкончанияПособияДоТрехЛет)
		
		|	И ДанныеСостоянийСотрудников.ДокументОснование.ВыплачиватьПособиеДоТрехЛет
		|	И ДанныеСостоянийСотрудников.Сотрудник.ГоловнаяОрганизация = &Организация
		|   И не ДанныеСостоянийСотрудников.Сотрудник В(&СписокПолтора)
		|	И ДанныеСостоянийСотрудников.Сотрудник В(&списСотрудников)";	
	ЗапросП0001001701.УстановитьПараметр("Состояние", Перечисления.СостоянияСотрудника.ОтпускПоУходуЗаРебенком); 
	ЗапросП0001001701.УстановитьПараметр("Конец",Отчет.ДатаОкончание);
	ЗапросП0001001701.УстановитьПараметр("Начало", Отчет.ДатаНачала);
	ЗапросП0001001701.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001001701.УстановитьПараметр("списСотрудников",списСотрудников);
	ЗапросП0001001701.УстановитьПараметр("СписокПолтора",СписокПолтора);
	
	РезультатЗапросаП0001001701 = ЗапросП0001001701.Выполнить();	
	ВыборкаДетальныеЗаписиП0001001701 = РезультатЗапросаП0001001701.Выбрать();		
	Пока ВыборкаДетальныеЗаписиП0001001701.Следующий() Цикл
		ДанныеДляОтчета.Вставить("П0001001701",ВыборкаДетальныеЗаписиП0001001701.КоличествоЖенщинПолучающийПособиеПоУходуДоПолутораЛет);
	КонецЦикла;

	
	
	// 020 Численность работников, привлекавшихся в отчетном квартале к работе вахтовым методом 1)
	ЗапросП0001002001 = Новый Запрос;
	ЗапросП0001002001.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник) КАК СотрудникиПривлеченныеКоСлужениюВВахте
	|ИЗ
	|	РегистрНакопления.ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ДанныеТабельногоУчетаРабочегоВремениСотрудников
	|ГДЕ
	|	ДанныеТабельногоУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &ВидУчетаВремени
	|	И ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрации МЕЖДУ &Начало И &Конец
	|	И ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник.ГоловнаяОрганизация = &Организация
	|	И ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник В(&списСотрудников)";	 
	ЗапросП0001002001.УстановитьПараметр("Конец",Отчет.ДатаОкончание);
	ЗапросП0001002001.УстановитьПараметр("Начало", Отчет.ДатаНачала);
	ЗапросП0001002001.УстановитьПараметр("Организация",Отчет.Организация);
	ЗапросП0001002001.УстановитьПараметр("списСотрудников",списСотрудников);
	
	Если Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Вахта")<> Справочники.ВидыИспользованияРабочегоВремени.ПустаяСсылка() Тогда 
		ЗапросП0001002001.УстановитьПараметр("ВидУчетаВремени", Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Вахта"));
		РезультатЗапросаП0001002001 = ЗапросП0001002001.Выполнить();	
		ВыборкаДетальныеЗаписиП0001002001 = РезультатЗапросаП0001002001.Выбрать();		
		Пока ВыборкаДетальныеЗаписиП0001002001.Следующий() Цикл
			ДанныеДляОтчета.Вставить("П0001002001",ВыборкаДетальныеЗаписиП0001002001.СотрудникиПривлеченныеКоСлужениюВВахте);
		КонецЦикла;
	КонецЕсли;
	
	
	
	
	
	Возврат ДанныеДляОтчета ;
	
КонецФункции	
//_________________________________________________________

// Прочие процедуры и функции _____________________________
&НаСервере
Функция ОрганизацияПоУмолчанию()
	
	Организация = Справочники.Организации.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|	И НЕ Организации.Предопределенный";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		Организация = Выборка.Организация;
	КонецЕсли;
	
	Возврат Организация;

КонецФункции
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда 
		 Элементы.Сформировать.Доступность = Ложь ;
	 Иначе
		 Элементы.Сформировать.Доступность = Истина ;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказателиОтчетаНаСервере(ПоказателиОтчета)	
	РегламентированнаяОтчетностьКлиентСервер.ЗаполнитьПоказателиОтчета(ЭтаФорма, ПоказателиОтчета);
КонецПроцедуры

&НаСервере
Процедура ВывестиПоказателиОтчетаВТабличныйДокумент(ПоказателиОтчета)
	
	Для Каждого ПоказателиСтраницы Из ПоказателиОтчета Цикл
		
		ИмяТекТабличноеПоле = ПоказателиСтраницы.Ключ;
		ТекТабличноеПоле    = ЭтаФорма[ИмяТекТабличноеПоле];
		ПоказателиТаблПоле  = ПоказателиСтраницы.Значение;

		Для Каждого Показатель Из ПоказателиТаблПоле Цикл
			
			ИмяПоказателя      = Показатель.Ключ;
			ЗначениеПоказателя = Показатель.Значение;

			Попытка
				
				Если Лев(ИмяПоказателя, 2) = "ЧН" Тогда
					
					ОбластьПоказателя = ТекТабличноеПоле.Области[Сред(ИмяПоказателя, 3)];
					ОбластьПоказателя.Формат = РегламентированнаяОтчетностьКлиентСервер.ЗаменитьПредставлениеНуляВСтрокеФормата(ОбластьПоказателя.Формат, ЗначениеПоказателя);
					
					Продолжить;
					
				КонецЕсли;
				
				ТекТабличноеПоле.Области[ИмяПоказателя].Значение = ЗначениеПоказателя;
				
			Исключение
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруРеквизитовФормы()
	
	СтруктураРеквизитовФормы = РегламентированнаяОтчетность.СформироватьСтруктуруОбязательныхРеквизитовСтатистическогоОтчета();
	
КонецПроцедуры