НаСервереБезКонтекста
Функция Цифры(ИсходнаяСтрока)
	ВыходнаяСтрока = "";
	Для Сч = 1 По СтрДлина(ИсходнаяСтрока) Цикл
		Симв = Сред(ИсходнаяСтрока, Сч, 1);
		Если Найти("1234567890", Симв) > 0 Тогда
			ВыходнаяСтрока = ВыходнаяСтрока + Симв;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВыходнаяСтрока;
КонецФункции

&НаСервере
Функция ПроверитьИПодготовитьДанныеШапки(Сообщения)
	Если ПустаяСтрока(КаталогВыгрузки) Тогда
		Сообщения = "Не указан каталог выгрузки";
	КонецЕсли;
	Если ОтчетныйПериод = Дата(1, 1, 1) Тогда
		Сообщения = Сообщения + ?(ПустаяСтрока(Сообщения), "", Символы.ВК + Символы.ПС) +
		"Не указан отчетный период";
	КонецЕсли;
	Если Организация.Пустая() Тогда
		Сообщения = Сообщения + ?(ПустаяСтрока(Сообщения), "", Символы.ВК + Символы.ПС) +
		"Не выбрана организация";
	КонецЕсли;
	
	ДанныеШапки = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияРегистрацийВОрганеПФРСрезПоследних.РегистрационныйНомерПФР
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВОрганеПФР.СрезПоследних(&ОтчетныйПериод, Организация = &Организация) КАК ИсторияРегистрацийВОрганеПФРСрезПоследних";
				   
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрационныйНомерПФР = "0";
	Если Выборка.Следующий() Тогда
		РегистрационныйНомерПФР = СокрЛП(Выборка.РегистрационныйНомерПФР);
	Иначе
		Сообщения = Сообщения + ?(ПустаяСтрока(Сообщения), "", Символы.ВК + Символы.ПС) +
		"Для организации:" + СокрЛП(Организация.Наименование) + " не указан регистрационный номер ПФР";
	КонецЕсли;
	ДанныеШапки.Вставить("РегистрационныйНомерПФР", РегистрационныйНомерПФР);
	
	ОтчетныйГод = Год(ОтчетныйПериод);
	ИмяФайлаХМЛ = "PERECH-Y-" + Цифры(Строка(ОтчетныйГод)) + "-ORG-" + РегистрационныйНомерПФР + ".XML";
	ДанныеШапки.Вставить("ИмяФайлаХМЛ", ИмяФайлаХМЛ);

	КодОтчетногоПериода = "3";
	Если ОтчетныйПериод = Дата(ОтчетныйГод, 4,1) Тогда
		КодОтчетногоПериода = "6";
	ИначеЕсли ОтчетныйПериод = Дата(ОтчетныйГод, 7,1) Тогда
		КодОтчетногоПериода = "9";
	ИначеЕсли ОтчетныйПериод = Дата(ОтчетныйГод, 10,1) Тогда
		КодОтчетногоПериода = "0";
	КонецЕсли;
	ДанныеШапки.Вставить("КодОтчетногоПериода", КодОтчетногоПериода);
	// Наличие записи о льготном стаже
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДокЗаписиОСтаже.Сотрудник
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.ЗаписиОСтаже КАК ДокЗаписиОСтаже
	|ГДЕ
	|	(ДокЗаписиОСтаже.ОсобыеУсловияТруда <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|			ИЛИ ДокЗаписиОСтаже.ОснованиеВыслугиЛет <> ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))
	|	И ДокЗаписиОСтаже.Ссылка.ОтчетныйПериод = &ОтчетныйПериод
	|	И ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|	И ДокЗаписиОСтаже.Ссылка.Организация = &Организация";
				   
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("Организация",    Организация);
	// 
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Сообщения = Сообщения + ?(ПустаяСтрока(Сообщения), "", Символы.ВК + Символы.ПС) +
		"Нет периодов работы с льготным стажем";
	Иначе
		// Физичесие лица без подразделения и должности
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокЗаписиОСтаже.Сотрудник,
		|	ДокЗаписиОСтаже.ДатаНачалаПериода,
		|	ДокЗаписиОСтаже.ДатаОкончанияПериода
		|ПОМЕСТИТЬ втСотрудники
		|ИЗ
		|	Документ.ПачкаРазделов6РасчетаРСВ_1.ЗаписиОСтаже КАК ДокЗаписиОСтаже
		|ГДЕ
		|	(ДокЗаписиОСтаже.ОсобыеУсловияТруда <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
		|			ИЛИ ДокЗаписиОСтаже.ОснованиеВыслугиЛет <> ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))
		|	И ДокЗаписиОСтаже.Ссылка.ОтчетныйПериод = &ОтчетныйПериод
		|	И ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
		|	И ДокЗаписиОСтаже.Ссылка.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСотрудники.Сотрудник,
		|	ВЫБОР
		|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КадроваяИсторияСотрудниковСрезПоследних.ДействуетДо > &Период
		|			ТОГДА КадроваяИсторияСотрудниковСрезПоследних.Должность
		|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.ДолжностьПоОкончании
		|	КОНЕЦ КАК Должность,
		|	(ВЫБОР
		|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ КадроваяИсторияСотрудниковСрезПоследних.ДействуетДо > &Период
		|			ТОГДА КадроваяИсторияСотрудниковСрезПоследних.Подразделение
		|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.ПодразделениеПоОкончании
		|	КОНЕЦ).Родитель КАК Подразделение
		|ПОМЕСТИТЬ втФизЛица
		|ИЗ
		|	втСотрудники КАК втСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Период, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ПО втСотрудники.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втФизЛица.Сотрудник КАК Сотрудник
		|ИЗ
		|	втФизЛица КАК втФизЛица
		|ГДЕ
		|	(ЕСТЬNULL(втФизЛица.Должность, 0) = 0
		|			ИЛИ ЕСТЬNULL(втФизЛица.Подразделение, 0) = 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";
					   
		Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
		Запрос.УстановитьПараметр("Период", КонецКвартала(ОтчетныйПериод));
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Сообщения = Сообщения + ?(ПустаяСтрока(Сообщения), "", Символы.ВК + Символы.ПС) +
			"Нет подразделения или должности:" + СокрЛП(Выборка.Сотрудник.Наименование);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеШапки;
	
КонецФункции

// Запрос с данными для позиций (штатного расписания)
&НаСервере
Функция ЗапросШтатное()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Сотрудник,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОсобыеУсловияТруда,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ДатаНачалаПериода,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ДатаОкончанияПериода,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.КодПозицииСписка,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОснованиеВыслугиЛет,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка.Организация
	               |ПОМЕСТИТЬ втФизЛица
	               |ИЗ
	               |	Документ.ПачкаРазделов6РасчетаРСВ_1.ЗаписиОСтаже КАК ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже
	               |ГДЕ
	               |	(НЕ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОсобыеУсловияТруда = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	               |			ИЛИ НЕ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОснованиеВыслугиЛет = ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))
	               |	И ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка.ОтчетныйПериод = &ОтчетныйПериод
	               |	И (ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	               |			ИЛИ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД)
	               |			ИЛИ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ВАХТА)
	               |			ИЛИ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ)
	               |			ИЛИ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛОТПУСК)
	               |			ИЛИ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.МЕДНЕТРУД)
	               |			ИЛИ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.МЕСЯЦ))
	               |	И ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка.Организация = &Организация
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Сотрудник,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОсобыеУсловияТруда,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ДатаНачалаПериода,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ДатаОкончанияПериода,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.КодПозицииСписка,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОснованиеВыслугиЛет,
	               |	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	(ВЫБОР
	               |		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втФизЛица.ДатаОкончанияПериода
	               |			ТОГДА КадроваяИсторияСотрудников.Подразделение
	               |		ИНАЧЕ КадроваяИсторияСотрудников.ПодразделениеПоОкончании
	               |	КОНЕЦ).Родитель КАК Подразделение,
	               |	ВЫБОР
	               |		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втФизЛица.ДатаОкончанияПериода
	               |			ТОГДА КадроваяИсторияСотрудников.Должность
	               |		ИНАЧЕ КадроваяИсторияСотрудников.ДолжностьПоОкончании
	               |	КОНЕЦ КАК Должность,
	               |	1 КАК Количество,
	               |	втФизЛица.ОсобыеУсловияТруда,
	               |	втФизЛица.КодПозицииСписка,
	               |	втФизЛица.ОснованиеВыслугиЛет,
	               |	(ВЫБОР
	               |		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втФизЛица.ДатаОкончанияПериода
	               |			ТОГДА КадроваяИсторияСотрудников.Подразделение
	               |		ИНАЧЕ КадроваяИсторияСотрудников.ПодразделениеПоОкончании
	               |	КОНЕЦ).Наименование КАК Участок,
	               |	втФизЛица.Сотрудник
	               |ПОМЕСТИТЬ втПодразделения
	               |ИЗ
	               |	втФизЛица КАК втФизЛица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			втФизЛица.Сотрудник КАК Сотрудник,
	               |			втФизЛица.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	               |			МАКСИМУМ(КадроваяИсторияСотрудников.Период) КАК МаксимальныйПериодКадроваяИстория,
	               |			МАКСИМУМ(ФИОФизическихЛиц.Период) КАК МаксимальныйПериодФИО
	               |		ИЗ
	               |			втФизЛица КАК втФизЛица
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	               |				ПО втФизЛица.Сотрудник = КадроваяИсторияСотрудников.Сотрудник.ФизическоеЛицо
	               |					И втФизЛица.ДатаОкончанияПериода >= КадроваяИсторияСотрудников.Период
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	               |				ПО втФизЛица.Сотрудник = ФИОФизическихЛиц.ФизическоеЛицо
	               |					И втФизЛица.ДатаОкончанияПериода >= ФИОФизическихЛиц.Период
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			втФизЛица.Сотрудник,
	               |			втФизЛица.ДатаОкончанияПериода) КАК МаксимальныеПериоды
	               |		ПО втФизЛица.Сотрудник = МаксимальныеПериоды.Сотрудник
	               |			И втФизЛица.ДатаОкончанияПериода = МаксимальныеПериоды.ДатаОкончанияПериода
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	               |		ПО (МаксимальныеПериоды.Сотрудник = КадроваяИсторияСотрудников.Сотрудник.ФизическоеЛицо)
	               |			И (МаксимальныеПериоды.МаксимальныйПериодКадроваяИстория = КадроваяИсторияСотрудников.Период)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	               |		ПО (МаксимальныеПериоды.Сотрудник = ФИОФизическихЛиц.ФизическоеЛицо)
	               |			И (МаксимальныеПериоды.МаксимальныйПериодФИО = ФИОФизическихЛиц.Период)
	               |ГДЕ
	               |	КадроваяИсторияСотрудников.Организация В
	               |			(ВЫБРАТЬ
	               |				таб.Организация
	               |			ИЗ
	               |				втФизЛица КАК таб)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	(ВЫБОР
	               |		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втФизЛица.ДатаОкончанияПериода
	               |			ТОГДА КадроваяИсторияСотрудников.Подразделение
	               |		ИНАЧЕ КадроваяИсторияСотрудников.ПодразделениеПоОкончании
	               |	КОНЕЦ).Родитель,
	               |	ВЫБОР
	               |		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втФизЛица.ДатаОкончанияПериода
	               |			ТОГДА КадроваяИсторияСотрудников.Должность
	               |		ИНАЧЕ КадроваяИсторияСотрудников.ДолжностьПоОкончании
	               |	КОНЕЦ,
	               |	(ВЫБОР
	               |		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втФизЛица.ДатаОкончанияПериода
	               |			ТОГДА КадроваяИсторияСотрудников.Подразделение
	               |		ИНАЧЕ КадроваяИсторияСотрудников.ПодразделениеПоОкончании
	               |	КОНЕЦ).Наименование,
	               |	втФизЛица.КодПозицииСписка,
	               |	втФизЛица.ОснованиеВыслугиЛет,
	               |	втФизЛица.ОсобыеУсловияТруда,
	               |	втФизЛица.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втПодразделения.Подразделение,
	               |	втПодразделения.Должность,
	               |	втПодразделения.ОсобыеУсловияТруда,
	               |	втПодразделения.КодПозицииСписка,
	               |	втПодразделения.ОснованиеВыслугиЛет,
	               |	втПодразделения.Участок,
	               |	СУММА(втПодразделения.Количество) КАК Количество
	               |ПОМЕСТИТЬ втКоличество
	               |ИЗ
	               |	втПодразделения КАК втПодразделения
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втПодразделения.КодПозицииСписка,
	               |	втПодразделения.Должность,
	               |	втПодразделения.ОсобыеУсловияТруда,
	               |	втПодразделения.ОснованиеВыслугиЛет,
	               |	втПодразделения.Участок,
	               |	втПодразделения.Подразделение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ШтатноеРасписание.Должность,
	               |	СУММА(ЗанятыеПозицииШтатногоРасписанияОстаткиИОбороты.КоличествоСтавокПриход) КАК КоличествоСтавокПриход,
	               |	ШтатноеРасписание.Подразделение.Наименование
	               |ПОМЕСТИТЬ втКоличествоШтатка
	               |ИЗ
	               |	РегистрНакопления.ЗанятыеПозицииШтатногоРасписания.ОстаткиИОбороты КАК ЗанятыеПозицииШтатногоРасписанияОстаткиИОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	               |		ПО ЗанятыеПозицииШтатногоРасписанияОстаткиИОбороты.ПозицияШтатногоРасписания = ШтатноеРасписание.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ШтатноеРасписание.Должность,
	               |	ШтатноеРасписание.Подразделение.Наименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втПодразделения.Подразделение КАК Подразделение,
	               |	втПодразделения.Участок КАК Участок,
	               |	втПодразделения.Должность КАК Должность,
	               |	втПодразделения.ОсобыеУсловияТруда,
	               |	втПодразделения.КодПозицииСписка,
	               |	втПодразделения.ОснованиеВыслугиЛет,
	               |	втПодразделения.Должность.Наименование КАК НаименованиеДляПеречня,
	               |	втПодразделения.КодПозицииСписка.НаименованиеПрофессии КАК НаименованиеПоОКПДТР,
	               |	СУММА(втПодразделения.Количество) КАК Количество,
	               |	втКоличествоШтатка.КоличествоСтавокПриход КАК КоличествоСтавок,
	               |	КлассыУсловийТрудаПоДолжностямСрезПоследних.КлассУсловийТруда КАК КлассУТШТ
	               |ИЗ
	               |	втПодразделения КАК втПодразделения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втКоличество КАК втКоличество
	               |		ПО втПодразделения.Подразделение = втКоличество.Подразделение
	               |			И втПодразделения.Должность = втКоличество.Должность
	               |			И втПодразделения.ОсобыеУсловияТруда = втКоличество.ОсобыеУсловияТруда
	               |			И втПодразделения.КодПозицииСписка = втКоличество.КодПозицииСписка
	               |			И втПодразделения.ОснованиеВыслугиЛет = втКоличество.ОснованиеВыслугиЛет
	               |			И втПодразделения.Участок = втКоличество.Участок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втКоличествоШтатка КАК втКоличествоШтатка
	               |		ПО втПодразделения.Должность = втКоличествоШтатка.Должность
	               |			И втПодразделения.Участок = втКоличествоШтатка.ПодразделениеНаименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлассыУсловийТрудаПоДолжностям.СрезПоследних(&ОтчетныйПериод, ) КАК КлассыУсловийТрудаПоДолжностямСрезПоследних
	               |		ПО втПодразделения.Должность = КлассыУсловийТрудаПоДолжностямСрезПоследних.Должность
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втПодразделения.Подразделение,
	               |	втПодразделения.КодПозицииСписка,
	               |	втПодразделения.ОсобыеУсловияТруда,
	               |	втПодразделения.ОснованиеВыслугиЛет,
	               |	втПодразделения.Должность,
	               |	втПодразделения.Участок,
	               |	втПодразделения.Должность.Наименование,
	               |	втПодразделения.КодПозицииСписка.НаименованиеПрофессии,
	               |	втКоличествоШтатка.КоличествоСтавокПриход,
	               |	КлассыУсловийТрудаПоДолжностямСрезПоследних.КлассУсловийТруда
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Подразделение,
	               |	Участок,
	               |	Должность";
				   
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("Период", КонецКвартала(ОтчетныйПериод));
	
	Возврат Запрос;
КонецФункции

// Запрос с данными для поименного списка к позиции
&НаСервере
Функция ЗапросСписок()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокЗаписиОСтаже.Ссылка,
	|	ДокЗаписиОСтаже.Сотрудник,
	|	ДокЗаписиОСтаже.ДатаНачалаПериода,
	|	ДокЗаписиОСтаже.ДатаОкончанияПериода,
	|	ДокЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ДокЗаписиОСтаже.КодПозицииСписка,
	|	ДокЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ВЫБОР
	|		КОГДА ДокЗаписиОСтаже.ТретийПараметрВыслугиЛет = 0
	|			ТОГДА 1
	|		ИНАЧЕ ДокЗаписиОСтаже.ТретийПараметрВыслугиЛет
	|	КОНЕЦ КАК Ставка
	|ПОМЕСТИТЬ втСотрудники
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.ЗаписиОСтаже КАК ДокЗаписиОСтаже
	|ГДЕ
	|	(НЕ ДокЗаписиОСтаже.ОсобыеУсловияТруда = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТрудаПФР.ПустаяСсылка)
	|			ИЛИ НЕ ДокЗаписиОСтаже.ОснованиеВыслугиЛет = ЗНАЧЕНИЕ(Справочник.ОснованияДосрочногоНазначенияПенсии.ПустаяСсылка))
	|	И ДокЗаписиОСтаже.Ссылка.ОтчетныйПериод = &ОтчетныйПериод
	|	И (ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ПустаяСсылка)
	|			ИЛИ ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ВРНЕТРУД)
	|			ИЛИ ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ВАХТА)
	|			ИЛИ ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЕКРЕТ)
	|			ИЛИ ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ДЛОТПУСК)
	|			ИЛИ ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.МЕДНЕТРУД)
	|			ИЛИ ДокЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа = ЗНАЧЕНИЕ(Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.МЕСЯЦ))
	|	И ДокЗаписиОСтаже.Ссылка.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСотрудники.Сотрудник,
	|	втСотрудники.Сотрудник.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ФИОФизическихЛиц.Фамилия,
	|	ФИОФизическихЛиц.Имя,
	|	ФИОФизическихЛиц.Отчество,
	|	втСотрудники.ДатаНачалаПериода,
	|	втСотрудники.ДатаОкончанияПериода,
	|	втСотрудники.ОсобыеУсловияТруда,
	|	втСотрудники.КодПозицииСписка,
	|	втСотрудники.ОснованиеВыслугиЛет,
	|	втСотрудники.Ставка,
	|	ВЫБОР
	|		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втСотрудники.ДатаОкончанияПериода
	|			ТОГДА КадроваяИсторияСотрудников.Должность
	|		ИНАЧЕ КадроваяИсторияСотрудников.ДолжностьПоОкончании
	|	КОНЕЦ КАК Должность,
	|	(ВЫБОР
	|		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втСотрудники.ДатаОкончанияПериода
	|			ТОГДА КадроваяИсторияСотрудников.Подразделение
	|		ИНАЧЕ КадроваяИсторияСотрудников.ПодразделениеПоОкончании
	|	КОНЕЦ).Родитель КАК Подразделение,
	|	(ВЫБОР
	|		КОГДА КадроваяИсторияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КадроваяИсторияСотрудников.ДействуетДо > втСотрудники.ДатаОкончанияПериода
	|			ТОГДА КадроваяИсторияСотрудников.Подразделение
	|		ИНАЧЕ КадроваяИсторияСотрудников.ПодразделениеПоОкончании
	|	КОНЕЦ).Наименование КАК Участок,
	|	ФизическиеЛицаКонтактнаяИнформация.Представление КАК Адрес
	|ПОМЕСТИТЬ втФизЛица
	|ИЗ
	|	втСотрудники КАК втСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			втСотрудники.Сотрудник КАК Сотрудник,
	|			втСотрудники.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|			МАКСИМУМ(КадроваяИсторияСотрудников.Период) КАК МаксимальныйПериодКадроваяИстория,
	|			МАКСИМУМ(ФИОФизическихЛиц.Период) КАК МаксимальныйПериодФИО
	|		ИЗ
	|			втСотрудники КАК втСотрудники
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|				ПО втСотрудники.Сотрудник = КадроваяИсторияСотрудников.Сотрудник.ФизическоеЛицо
	|					И втСотрудники.ДатаОкончанияПериода >= КадроваяИсторияСотрудников.Период
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	|				ПО втСотрудники.Сотрудник = ФИОФизическихЛиц.ФизическоеЛицо
	|					И втСотрудники.ДатаОкончанияПериода >= ФИОФизическихЛиц.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			втСотрудники.Сотрудник,
	|			втСотрудники.ДатаОкончанияПериода) КАК МаксимальныеПериоды
	|		ПО втСотрудники.Сотрудник = МаксимальныеПериоды.Сотрудник
	|			И втСотрудники.ДатаОкончанияПериода = МаксимальныеПериоды.ДатаОкончанияПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|		ПО (МаксимальныеПериоды.Сотрудник = КадроваяИсторияСотрудников.Сотрудник.ФизическоеЛицо)
	|			И (МаксимальныеПериоды.МаксимальныйПериодКадроваяИстория = КадроваяИсторияСотрудников.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	|		ПО (МаксимальныеПериоды.Сотрудник = ФИОФизическихЛиц.ФизическоеЛицо)
	|			И (МаксимальныеПериоды.МаксимальныйПериодФИО = ФИОФизическихЛиц.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|		ПО втСотрудники.Сотрудник = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	|			И (ФизическиеЛицаКонтактнаяИнформация.Вид.Наименование ПОДОБНО ""Адрес по прописке"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втФизЛица.Сотрудник КАК Сотрудник,
	|	втФизЛица.СтраховойНомерПФР,
	|	втФизЛица.Фамилия,
	|	втФизЛица.Имя,
	|	втФизЛица.Отчество,
	|	втФизЛица.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	втФизЛица.ДатаОкончанияПериода,
	|	втФизЛица.Должность.Наименование КАК Должность,
	|	втФизЛица.ОсобыеУсловияТруда,
	|	втФизЛица.КодПозицииСписка,
	|	втФизЛица.ОснованиеВыслугиЛет,
	|	втФизЛица.Ставка,
	|	втФизЛица.Участок,
	|	втФизЛица.Адрес,
	|	втФизЛица.КодПозицииСписка.НаименованиеПрофессии КАК Профессия,
	|	КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда КАК КлассУТ
	|ИЗ
	|	втФизЛица КАК втФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ПО втФизЛица.Должность = КлассыУсловийТрудаПоДолжностям.Должность
	|			И (НАЧАЛОПЕРИОДА(втФизЛица.ДатаНачалаПериода, МЕСЯЦ) = КлассыУсловийТрудаПоДолжностям.ДатаРегистрацииИзменений)
	|ГДЕ
	|	втФизЛица.Подразделение = &Подразделение
	|	И втФизЛица.Участок ПОДОБНО &Участок
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаНачалаПериода";
				   
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("Период", КонецКвартала(ОтчетныйПериод));
	Возврат Запрос;
КонецФункции

// Вернет текст ХМЛ, заполнит ИмяФайлаХМЛ, а если что не так то и Сообщения
&НаСервере
Функция ПолучитьТекстФайлаНаСервере(ИмяФайлаХМЛ, Сообщения)
	ДанныеШапки = ПроверитьИПодготовитьДанныеШапки(Сообщения);
	Если Не ПустаяСтрока(Сообщения) Тогда
		Возврат "";
	КонецЕсли;
	ХМЛ = Новый ЗаписьXML;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Попытка
		ХМЛ.ОткрытьФайл(ИмяВременногоФайла);
	Исключение
		Сообщения = "Не удалось записать временный файл на сервере:" + ИмяВременногоФайла + ", подробно:" +
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат ""; 
	КонецПопытки;
	ИмяФайлаХМЛ = ДанныеШапки.ИмяФайлаХМЛ;
	ХМЛ.ЗаписатьОбъявлениеXML();
	ХМЛ.ЗаписатьНачалоЭлемента("ПеречниЛьготныхПрофессий");
	ХМЛ.ЗаписатьАтрибут("ВерсияФормата", "1.15"); 
	ХМЛ.ЗаписатьАтрибут("ПрограммаПодготовкиДанных","Выгрузка 1С ЗУП 3.0");
	
	ХМЛ.ЗаписатьНачалоЭлемента("Перечень");			
	ХМЛ.ЗаписатьАтрибут("ОтчетныйГод", Формат(ОтчетныйПериод, "ДФ=гггг"));
	ХМЛ.ЗаписатьАтрибут("ОтчетныйПериод", ДанныеШапки.КодОтчетногоПериода);
	ХМЛ.ЗаписатьАтрибут("ДатаСоставления",Формат(ТекущаяДата(),"ДЛФ=Д"));  
	ХМЛ.ЗаписатьАтрибут("Тип", "ИСХОДНЫЙ"); 
	ХМЛ.ЗаписатьАтрибут("СогласованоСПрофсоюзом", "1"); 
	ХМЛ.ЗаписатьАтрибут("СтатусПроверки", "НЕ-ПРОВЕРЯЛСЯ");
	ХМЛ.ЗаписатьНачалоЭлемента("Предприятие"); 
	ХМЛ.ЗаписатьАтрибут("РегНомер", ДанныеШапки.РегистрационныйНомерПФР);
	ХМЛ.ЗаписатьАтрибут("Наименование", СокрЛП(Организация.НаименованиеПолное)); 
	ХМЛ.ЗаписатьАтрибут("Тип", "ПРОИЗВОДСТВО");
	ХМЛ.ЗаписатьНачалоЭлемента("ВидДеятельности");
	ВидДеятельности = СокрЛП(ВидыДеятельности[Элементы.ВидыДеятельности.ТекущаяСтрока].Значение);
	ХМЛ.ЗаписатьТекст(ВидДеятельности);
	ХМЛ.ЗаписатьКонецЭлемента();
	
	ХМЛ.ЗаписатьНачалоЭлемента("Директор");
	ХМЛ.ЗаписатьНачалоЭлемента("ФИО"); 
	//ХМЛ.ЗаписатьТекст(ДанныеШапки.РуководительФИО); 
	ХМЛ.ЗаписатьКонецЭлемента();
	ХМЛ.ЗаписатьНачалоЭлемента("Должность"); 
	//ХМЛ.ЗаписатьТекст(ДанныеШапки.РуководительДолжность); 
	ХМЛ.ЗаписатьКонецЭлемента(); 
	//Если Не ПустаяСтрока(ТелефонРуководителя) Тогда
	//	ХМЛ.ЗаписатьНачалоЭлемента("Телефон"); 
	//	ХМЛ.ЗаписатьТекст(СокрЛП(ТелефонРуководителя)); 
	//	ХМЛ.ЗаписатьКонецЭлемента(); 
	//КонецЕсли;					
	ХМЛ.ЗаписатьКонецЭлемента(); 
	
	//ХМЛ.ЗаписатьНачалоЭлемента("НачальникОтделаКадров");
	//ХМЛ.ЗаписатьНачалоЭлемента("ФИО"); 
	//ХМЛ.ЗаписатьТекст(ДанныеШапки.КадровикФИО); 
	//ХМЛ.ЗаписатьКонецЭлемента();
	//ХМЛ.ЗаписатьНачалоЭлемента("Должность"); 
	//ХМЛ.ЗаписатьТекст(ДанныеШапки.КадровикДолжность); 
	//ХМЛ.ЗаписатьКонецЭлемента(); 
	//Если Не ПустаяСтрока(ТелефонНачальникаОтделаКадров) Тогда
	//	ХМЛ.ЗаписатьНачалоЭлемента("Телефон"); 
	//	ХМЛ.ЗаписатьТекст(СокрЛП(ТелефонНачальникаОтделаКадров)); 
	//	ХМЛ.ЗаписатьКонецЭлемента(); 
	//КонецЕсли;					
	//ХМЛ.ЗаписатьКонецЭлемента(); 
	Если Не ПустаяСтрока(ПредседательПрофкома) Тогда
		ХМЛ.ЗаписатьНачалоЭлемента("ПредседательПрофкома");
		ХМЛ.ЗаписатьНачалоЭлемента("ФИО"); 
		ХМЛ.ЗаписатьТекст(СокрЛП(ПредседательПрофкома)); 
		ХМЛ.ЗаписатьКонецЭлемента();
		ХМЛ.ЗаписатьНачалоЭлемента("Должность"); 
		ХМЛ.ЗаписатьТекст("Председатель профкома"); 
		ХМЛ.ЗаписатьКонецЭлемента(); 
		Если Не ПустаяСтрока(ТелефонПредседателяПрофкома) Тогда
			ХМЛ.ЗаписатьНачалоЭлемента("Телефон"); 
			ХМЛ.ЗаписатьТекст(СокрЛП(ТелефонПредседателяПрофкома)); 
			ХМЛ.ЗаписатьКонецЭлемента(); 
		КонецЕсли;					
		ХМЛ.ЗаписатьКонецЭлемента(); 
	КонецЕсли;					
	
	Запрос = ЗапросШтатное();
	ЗапросПоименныйСписок = ЗапросСписок();
	//
	НомерПодразделения = 1;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Участок") Цикл
		ХМЛ.ЗаписатьНачалоЭлемента("Подразделение");	
		ХМЛ.ЗаписатьАтрибут("Номер",СокрЛП(НомерПодразделения));     
		ХМЛ.ЗаписатьАтрибут("Наименование",СокрЛП(Выборка.Подразделение.Наименование)); 
		Если ЗначениеЗаполнено(ВидДеятельности) Тогда
			ХМЛ.ЗаписатьНачалоЭлемента("ВидДеятельности"); 
			ХМЛ.ЗаписатьТекст(ВидДеятельности); 
			ХМЛ.ЗаписатьКонецЭлемента(); 
		КонецЕсли;
	    	ХМЛ.ЗаписатьНачалоЭлемента("Участок");
			ХМЛ.ЗаписатьАтрибут("Наименование",СокрЛП(Выборка.Участок));
			ХМЛ.ЗаписатьКонецЭлемента(); // Участок
			Пока Выборка.СледующийПоЗначениюПоля("Должность") Цикл
				Если Не ЗначениеЗаполнено(Выборка.Должность.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией) Тогда 
					Продолжить;
				КонецЕсли;
				ХМЛ.ЗаписатьНачалоЭлемента("Позиция");
				ХМЛ.ЗаписатьАтрибут("ДатаНач", "01.12.2014");
				ХМЛ.ЗаписатьАтрибут("Тип", "НЕ-ИЗМЕНЕНА"); 
				ХМЛ.ЗаписатьНачалоЭлемента("Профессия");  
				ХМЛ.ЗаписатьТекст(СокрЛП(Выборка.НаименованиеДляПеречня));
				ХМЛ.ЗаписатьКонецЭлемента();
				ХМЛ.ЗаписатьНачалоЭлемента("ХарактерРаботы");  
				ХМЛ.ЗаписатьТекст("Постоянно, полный рабочий день");
				ХМЛ.ЗаписатьКонецЭлемента();
				ХМЛ.ЗаписатьНачалоЭлемента("НаименованиеПоОКПДТР");  
				ХМЛ.ЗаписатьТекст(СокрЛП(Выборка.НаименованиеПоОКПДТР));
				ХМЛ.ЗаписатьКонецЭлемента();
			
				ОснованиеЛьготы = СокрЛП(Выборка.ОсобыеУсловияТруда.Код);
				Если Не ПустаяСтрока(ОснованиеЛьготы) Тогда
					ХМЛ.ЗаписатьНачалоЭлемента("ОснованиеЛьготы"); 
					ХМЛ.ЗаписатьТекст(ОснованиеЛьготы); 							
					ХМЛ.ЗаписатьКонецЭлемента();
				КонецЕсли;
			
				ОснованиеЛьготы = СокрЛП(Выборка.ОснованиеВыслугиЛет.Код);
				Если Не ПустаяСтрока(ОснованиеЛьготы) Тогда
					ХМЛ.ЗаписатьНачалоЭлемента("ОснованиеЛьготы"); 
					ХМЛ.ЗаписатьТекст(ОснованиеЛьготы); 							
					ХМЛ.ЗаписатьКонецЭлемента();
				КонецЕсли;
			
				ПозицияСписка = СокрЛП(Выборка.КодПозицииСписка.Код);
				Если ЗначениеЗаполнено(ПозицияСписка) Тогда
					ХМЛ.ЗаписатьНачалоЭлемента("ПозицияСписка");
					ХМЛ.ЗаписатьТекст(ПозицияСписка); 							
					ХМЛ.ЗаписатьКонецЭлемента();
					
					ХМЛ.ЗаписатьНачалоЭлемента("ДополнительныйТариф");
					ХМЛ.ЗаписатьТекст("ДТ"); 							
					ХМЛ.ЗаписатьКонецЭлемента();
				КонецЕсли;
				Если СтрДлина(Строка(Выборка.КлассУТШТ)) > 0 Тогда
					Если Найти(СокрЛП(Строка(Выборка.КлассУТШТ)), "3.1") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");
						ХМЛ.ЗаписатьТекст("В3.1");
						ХМЛ.ЗаписатьКонецЭлемента();
					ИначеЕсли Найти(СокрЛП(Строка(Выборка.КлассУТШТ)), "3.2") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("В3.2");
						ХМЛ.ЗаписатьКонецЭлемента();
					ИначеЕсли Найти(СокрЛП(Строка(Выборка.КлассУТШТ)), "3.3") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("В3.3");
						ХМЛ.ЗаписатьКонецЭлемента();
					ИначеЕсли Найти(СокрЛП(Строка(Выборка.КлассУТШТ)), "3.4") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("В3.4");
						ХМЛ.ЗаписатьКонецЭлемента();
					ИначеЕсли Найти(СокрЛП(Строка(Выборка.КлассУТШТ)), "Опасный") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("О4");
						ХМЛ.ЗаписатьКонецЭлемента();
					КонецЕсли;
				КонецЕсли; 
				ХМЛ.ЗаписатьНачалоЭлемента("ПодтверждающиеДокументы");
				Если Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Выгрузчик на отвалах") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-4, 1986 г., стр. 9");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Бригадир по перемещению сырья,полуфабрикатов и готовой продукции") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-7");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Машинист бульдозера") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-4, 1986 г., стр. 33");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Электрогазосварщик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-2, 1987 г., стр. 121");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Машинист крана металлургического производства") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-7, 1985 г., стр. 17-19");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "ашинист экскаватора") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-4, 1986 г., стр. 53");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Начальник участка") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Электрик цеха") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1986 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Механик цеха") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Мастер производственного уастка отгрузки") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Мастер по ремонту механического оборудования") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г., стр. 51-53");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Мастер по ремонту электрического оборудования") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г., стр. 51-53");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Мастер по ремонту оборудования") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г., стр. 51-53");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Начальник смены") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г., стр. 94");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Водитель погрузчика") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-4, 1986 г., стр. 33");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Бункеровщик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-1, 1987 г., стр. 37");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Грохотовщик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-4, 1986 г., стр. 88");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Транспортерщик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-1, 1986 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Дробильщик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-4, 1986 г., стр. 90");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "лесарь-ремонтник") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-2, 1988 г., стр. 562");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Электромонтер по ремонту и обслуживанию электрооборудования") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-1, 1990 г., стр. 198");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Газорезчик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-2, 1986 г., стр. 98, п. 3");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Электрогазосварщик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-2, 1986 г., стр. 127, п. 50");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Шихтовщик") > 0 Тогда
					ХМЛ.ЗаписатьТекст("ЕТКС-7, 1985 г., стр. 63-64");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Начальник цеха") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Начальник производственного участка") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Заместитель начальника цеха") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г.");
				ИначеЕсли Найти(СокрЛП(Выборка.НаименованиеДляПеречня), "Мастер по ремонту электрооборудования") > 0 Тогда
					ХМЛ.ЗаписатьТекст("КСД руководителей, специалистов и служащих. Вып. 1, 1987 г.");
				Иначе
					ХМЛ.ЗаписатьТекст("Лицевой счет, штатное расписание, должностная инструкция, личная карточка");
				КонецЕсли;
				ХМЛ.ЗаписатьКонецЭлемента();
			
				ХМЛ.ЗаписатьНачалоЭлемента("КоличествоШтат");
				ХМЛ.ЗаписатьТекст(СокрЛП(Выборка.КоличествоСтавок));
				ХМЛ.ЗаписатьКонецЭлемента();
				ХМЛ.ЗаписатьНачалоЭлемента("КоличествоФакт");
				ХМЛ.ЗаписатьТекст(СокрЛП(Выборка.Количество));
				ХМЛ.ЗаписатьКонецЭлемента();
				ХМЛ.ЗаписатьКонецЭлемента();	// Позиция
			КонецЦикла;
		//
		ХМЛ.ЗаписатьНачалоЭлемента("ПоименныйСписок");
		ЗапросПоименныйСписок.УстановитьПараметр("Подразделение", Выборка.Подразделение);
		ЗапросПоименныйСписок.УстановитьПараметр("Участок", Выборка.Участок);
		ВыборкаПоименныйСписок = ЗапросПоименныйСписок.Выполнить().Выбрать();
		Пока ВыборкаПоименныйСписок.СледующийПоЗначениюПоля("Сотрудник") Цикл
			ХМЛ.ЗаписатьНачалоЭлемента("Работник"); 						
			ХМЛ.ЗаписатьАтрибут("Адрес",СокрЛП(ВыборкаПоименныйСписок.Адрес));
			ХМЛ.ЗаписатьАтрибут("СтраховойНомер",СокрЛП(ВыборкаПоименныйСписок.СтраховойНомерПФР));
			ХМЛ.ЗаписатьАтрибут("Фамилия",СокрЛП(ВыборкаПоименныйСписок.Фамилия));
			ХМЛ.ЗаписатьАтрибут("Имя",СокрЛП(ВыборкаПоименныйСписок.Имя));
			ХМЛ.ЗаписатьАтрибут("Отчество",СокрЛП(ВыборкаПоименныйСписок.Отчество));
			
			ДатаУходаНаПенсию=ДобавитьМесяц(ВыборкаПоименныйСписок.Сотрудник.ДатаРождения,12
			*?(ВыборкаПоименныйСписок.Сотрудник.Пол=Перечисления.ПолФизическогоЛица.Женский,55,60)); 
			Если ЗначениеЗаполнено(ДатаУходаНаПенсию) Тогда ХМЛ.ЗаписатьАтрибут("ДатаПенс",Формат(ДатаУходаНаПенсию,"ДЛФ=Д")); КонецЕсли;

			Пока ВыборкаПоименныйСписок.СледующийПоЗначениюПоля("ДатаНачалаПериода") Цикл
				ХМЛ.ЗаписатьНачалоЭлемента("ПериодРаботы"); 
				ХМЛ.ЗаписатьАтрибут("ДатаНач",Формат(ВыборкаПоименныйСписок.ДатаНачалаПериода,"ДЛФ=Д")); 
				ХМЛ.ЗаписатьАтрибут("ДатаКон",Формат(ВыборкаПоименныйСписок.ДатаОкончанияПериода,"ДЛФ=Д")); 
				ХМЛ.ЗаписатьНачалоЭлемента("Должность");  
				ХМЛ.ЗаписатьТекст(СокрЛП(ВыборкаПоименныйСписок.Должность)); 							
				ХМЛ.ЗаписатьКонецЭлемента(); 
				ХМЛ.ЗаписатьНачалоЭлемента("Профессия");  
				ХМЛ.ЗаписатьТекст(СокрЛП(ВыборкаПоименныйСписок.Должность)); 							
				ХМЛ.ЗаписатьКонецЭлемента(); 
				
				ОснованиеЛьготы = СокрЛП(ВыборкаПоименныйСписок.ОсобыеУсловияТруда.Код);
				Если Не ПустаяСтрока(ОснованиеЛьготы) Тогда
					ХМЛ.ЗаписатьНачалоЭлемента("ОснованиеЛьготы"); 
					ХМЛ.ЗаписатьТекст(ОснованиеЛьготы); 							
					ХМЛ.ЗаписатьКонецЭлемента();
				КонецЕсли;
				
				ОснованиеЛьготы = СокрЛП(ВыборкаПоименныйСписок.ОснованиеВыслугиЛет.Код);
				Если Не ПустаяСтрока(ОснованиеЛьготы) Тогда
					ХМЛ.ЗаписатьНачалоЭлемента("ОснованиеЛьготы"); 
					ХМЛ.ЗаписатьТекст(ОснованиеЛьготы); 							
					ХМЛ.ЗаписатьКонецЭлемента();
				КонецЕсли;
				
				ПозицияСписка = СокрЛП(ВыборкаПоименныйСписок.КодПозицииСписка.Код);
				Если ЗначениеЗаполнено(ПозицияСписка) Тогда
					ХМЛ.ЗаписатьНачалоЭлемента("ПозицияСписка");
					ХМЛ.ЗаписатьТекст(ПозицияСписка); 							
					ХМЛ.ЗаписатьКонецЭлемента();
					
					ХМЛ.ЗаписатьНачалоЭлемента("ДополнительныйТариф");
					ХМЛ.ЗаписатьТекст("ДТ"); 							
					ХМЛ.ЗаписатьКонецЭлемента();
				КонецЕсли;
				Если СтрДлина(Строка(ВыборкаПоименныйСписок.КлассУТ)) > 0 Тогда
					Если Найти(СокрЛП(Строка(ВыборкаПоименныйСписок.КлассУТ)), "3.1") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("В3.1");
						ХМЛ.ЗаписатьКонецЭлемента(); 
					ИначеЕсли Найти(СокрЛП(Строка(ВыборкаПоименныйСписок.КлассУТ)), "3.2") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("В3.2");
						ХМЛ.ЗаписатьКонецЭлемента(); 
					ИначеЕсли Найти(СокрЛП(Строка(ВыборкаПоименныйСписок.КлассУТ)), "3.3") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("В3.3");
						ХМЛ.ЗаписатьКонецЭлемента(); 
					ИначеЕсли Найти(СокрЛП(Строка(ВыборкаПоименныйСписок.КлассУТ)), "3.4") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("В3.4");
						ХМЛ.ЗаписатьКонецЭлемента(); 
					ИначеЕсли Найти(СокрЛП(Строка(ВыборкаПоименныйСписок.КлассУТ)), "Опасный") > 0 Тогда
						ХМЛ.ЗаписатьНачалоЭлемента("КлассУТ");  
						ХМЛ.ЗаписатьТекст("О4");
						ХМЛ.ЗаписатьКонецЭлемента(); 
					КонецЕсли;
				КонецЕсли; 

				ХМЛ.ЗаписатьКонецЭлемента();
			КонецЦикла;
			ХМЛ.ЗаписатьКонецЭлемента();
		КонецЦикла;
		ХМЛ.ЗаписатьКонецЭлемента();		// Поименный список
    	ХМЛ.ЗаписатьКонецЭлемента();		// Подразделение
		НомерПодразделения = НомерПодразделения + 1;
	КонецЦикла;
	ХМЛ.ЗаписатьКонецЭлемента(); // Предприятие
	ХМЛ.ЗаписатьКонецЭлемента(); // Перечень
	ХМЛ.ЗаписатьКонецЭлемента(); // Перечни	
	ХМЛ.Закрыть();
	// Создать Текстовый документ, прочитать ХМЛ как текст
	ТекстовыйДок = Новый ТекстовыйДокумент;
	ТекстовыйДок.Прочитать(ИмяВременногоФайла);
	ТекстХМЛ = ТекстовыйДок.ПолучитьТекст();
	// Удалить временный файл
	ИмяВремКаталога = "";
	ТекущееИмя = ИмяВременногоФайла;
	Пока Найти(ТекущееИмя, "\") > 0 Цикл
		Поз = Найти(ТекущееИмя, "\");
		ИмяВремКаталога = ИмяВремКаталога + Лев(ТекущееИмя, Поз);
		ТекущееИмя = Сред(ТекущееИмя, Поз + 1);
	КонецЦикла;
	ИмяВремФайла = ТекущееИмя;
	Попытка
		УдалитьФайлы(ИмяВремКаталога, ИмяВремФайла);
	Исключение
		Сообщения = "Не удалось удалить временный файл на сервере:" + ИмяВремФайла + " в каталоге:" + ИмяВремКаталога +
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат ""; 
	КонецПопытки;
	// Вернуть ХМЛ как текст клиенту
	Возврат ТекстХМЛ;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ВыгрузитьПеречень(Команда)
	Если ПустаяСтрока(КаталогВыгрузки) Тогда
		Сообщить("Не указан каталог выгрузки");
		Возврат;
	КонецЕсли;
	// 
	ИмяФайлаХМЛ = "";
	Сообщения = "";
	ТекстХМЛ = ПолучитьТекстФайлаНаСервере(ИмяФайлаХМЛ, Сообщения);
	Если Сообщения = "" Тогда
		ТекстовыйДок = Новый ТекстовыйДокумент;
		ТекстовыйДок.УстановитьТекст(ТекстХМЛ);
		ПолноеИмяФайла = СокрЛП(КаталогВыгрузки) + "\" + ИмяФайлаХМЛ;
		ТекстовыйДок.Записать(ПолноеИмяФайла);
		Сообщить("Выгрузка закончена");
	Иначе
		Сообщить(Сообщения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВидыДеятельности.Добавить("СПИСОК-1-2",,Истина);
	ВидыДеятельности.Добавить("ПЕРЕВОЗКА-ЖД");
	ВидыДеятельности.Добавить("ПОЛЕВЫЕ-РАБОТЫ");
	ВидыДеятельности.Добавить("ПЛАВСОСТАВ");
	ВидыДеятельности.Добавить("ГОРНЫЕ-РАБОТЫ");
	ВидыДеятельности.Добавить("СПАСАТЕЛИ");
	ВидыДеятельности.Добавить("ПОЖАРНАЯ-ОХРАНА");
	ВидыДеятельности.Добавить("ЛЕЧЕБНАЯ-ДЕЯТЕЛЬНОСТЬ");
	ВидыДеятельности.Добавить("ИНАЯ-ДЕЯТЕЛЬНОСТЬ");
	ВидыДеятельности.Добавить("ЛЕСОЗАГОТОВКА");
	ВидыДеятельности.Добавить("ВОДИТЕЛИ-ПАСС-МАРШРУТОВ");
	ВидыДеятельности.Добавить("АВИАЦИЯ");
	ВидыДеятельности.Добавить("УИН");
	ВидыДеятельности.Добавить("ПЕДАГОГИЧЕСКАЯ-ДЕЯТЕЛЬНОСТЬ");
	ВидыДеятельности.Добавить("ТВОРЧЕСКАЯ-ДЕЯТЕЛЬНОСТЬ");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Организации.Ссылка
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |ГДЕ
	               |	Организации.ПометкаУдаления = ЛОЖЬ";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Ссылка;
	КонецЕсли;
	
	ОтчетныйПериод = НачалоКвартала(ТекущаяДата());
	ПериодСтрока = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ОтчетныйПериод);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок = "Выберите каталог выгрузки";
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.ПолноеИмяФайла = СокрЛП(КаталогВыгрузки);
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		КаталогВыгрузки = ДиалогВыбораФайла.Каталог;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтчетныйПериодПриИзменении(Элемент)
	ОтчетныйПериод = НачалоКвартала(ОтчетныйПериод);
КонецПроцедуры

// Для запуска в качестве зарегистрированной дополнительной обработки
&НаКлиенте
Процедура ВыполнитьКоманду(ВыполняемаяКомандаИдентификатор) Экспорт
	ЭтаФорма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурнал(Команда)
	
	ОткрытьФорму("Обработка.ПодготовкаКвартальнойОтчетностиВПФР.Форма.КвартальнаяОтчетностьВПФР");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетныйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ПерсонифицированныйУчетКлиент.ОтчетныйПериодРегулирование(ОтчетныйПериод, ПериодСтрока, Направление, '20140101');		
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ПериодСтрока = ПерсонифицированныйУчетКлиентСервер.ПредставлениеОтчетногоПериода(ОтчетныйПериод);
КонецПроцедуры
