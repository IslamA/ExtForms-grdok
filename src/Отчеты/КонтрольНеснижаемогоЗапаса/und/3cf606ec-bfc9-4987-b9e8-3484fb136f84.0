{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,0},0,0,1,1,1,0,0,19,5,
{"#",11cfd3e0-86f8-4480-aaa5-dc6a6ccac689,
{1,
{3},""}
},6,
{"#",11cfd3e0-86f8-4480-aaa5-dc6a6ccac689,
{1,
{4},""}
},7,
{"#",acbc2eeb-2efb-48e4-b78a-661fd09fcf80,0},8,
{"S","urn:form:md:14:c1a1eb57-0a35-4f6b-b13f-422359027a1a"},9,
{"S","urn:form:md:13:c1a1eb57-0a35-4f6b-b13f-422359027a1a"},10,
{"S","urn:form:md:16:c1a1eb57-0a35-4f6b-b13f-422359027a1a"},11,
{"S","urn:form:md:15:c1a1eb57-0a35-4f6b-b13f-422359027a1a"},12,
{"S",""},13,
{"S","Основной"},14,
{"B",0},15,
{"U"},16,
{"B",0},17,
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3,
{6,1e512aab-1b41-4ef6-9375-f0137be9dd91,0,0,
{1,
{1e512aab-1b41-4ef6-9375-f0137be9dd91,
{"Основной",0,
{"S","Основной"},
{4,0,
{0},"",-1,-1,0,0,""},0,0,""}
}
},
{"Pattern"},0,0}
},18,
{"S","Основной"},19,
{"S",""},20,
{"#",11cfd3e0-86f8-4480-aaa5-dc6a6ccac689,
{1,
{2},""}
},21,
{"#",f26c3706-a6ca-45cb-869a-e6ad38cd5f78,0},22,
{"S","00000000-0000-0000-0000-000000000000"},23,
{"N",0},
{13,1d632984-de3c-4b4b-ad9f-d69682a10182,"ОбработкаВыбора",1dd89674-8b50-4240-9899-e3426b79cb02,"ПередЗагрузкойВариантаНаСервере",3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",40925042-2517-455b-a600-d68282829334,"ПередЗагрузкойПользовательскихНастроекНаСервере",499bb7af-6262-4de4-819f-ef264d1a20ec,"ПриСохраненииВариантаНаСервере",7b15b3db-1cd0-4e1d-a74b-2c972c9e2226,"ПриЗагрузкеПользовательскихНастроекНаСервере",87ce636e-9de6-4e42-9395-f0f189d08397,"ПриЗагрузкеВариантаНаСервере",961ee7c6-0327-422b-adcb-97a90c46753d,"ПриСохраненииПользовательскихНастроекНаСервере",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",ca21cd18-35b2-4281-b5c8-016ecc8da8ac,"ПриЗакрытии",d817bccf-504e-4133-a79a-dd16e3a4df73,"ПриОбновленииСоставаПользовательскихНастроекНаСервере",e73d6384-49d2-4885-a752-a674d6ff7742,"ОбработкаПроверкиЗаполненияНаСервере",1,0,1d632984-de3c-4b4b-ad9f-d69682a10182,0,1,1dd89674-8b50-4240-9899-e3426b79cb02,0,1,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,0,1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,40925042-2517-455b-a600-d68282829334,0,1,499bb7af-6262-4de4-819f-ef264d1a20ec,0,1,7b15b3db-1cd0-4e1d-a74b-2c972c9e2226,0,1,87ce636e-9de6-4e42-9395-f0f189d08397,0,1,961ee7c6-0327-422b-adcb-97a90c46753d,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1,ca21cd18-35b2-4281-b5c8-016ecc8da8ac,0,1,d817bccf-504e-4133-a79a-dd16e3a4df73,0,1,e73d6384-49d2-4885-a752-a674d6ff7742,0,1},
{1,0fb774df-ec1c-4e23-9ed1-e089974f74bf},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},5,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{416,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"БыстрыеНастройки",
{1,1,
{"ru","Быстрые настройки"}
},
{1,1,
{"ru","Быстрые настройки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},0,1,0,1,
{10,
{417,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БыстрыеНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОсновнаяКоманднаяПанель",
{1,1,
{"ru","Основная командная панель"}
},
{1,1,
{"ru","Основная командная панель"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},9,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{101,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СформироватьОтчет",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{135,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СформироватьОтчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{468,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормироватьСразу",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{469,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормироватьСразуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{104,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаНастройкиОтчета",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},5,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{458,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ВсеНастройки",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},0,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{459,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВсеНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{630,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ИзменитьУсловияОтборов",
{1,0},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{631,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИзменитьУсловияОтборовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{382,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СброситьНастройки",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{383,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СброситьНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{358,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ГруппаВариантыОтчета",
{1,1,
{"ru","Варианты отчета"}
},
{1,1,
{"ru","Выбрать настройки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,1,
{0,4c3a39e3-40ee-423b-91f0-14b60e045b40},"",-1,-1,1,0,""},
{0},2,2,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{506,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СохранитьВариант",
{1,1,
{"ru","Сохранить вариант отчета..."}
},1,
{0,9bffcf73-7b1d-4a8d-bf23-5e051af3ee29},
{0},2,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,ab5b0155-a4b1-47a1-ad87-12365dde20c1},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{507,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранитьВариантРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{360,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ВариантыОтчета",
{1,1,
{"ru","Варианты отчета"}
},
{1,1,
{"ru","Варианты отчета"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},0,1,0,1,
{10,
{361,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВариантыОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{508,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДругиеОтчеты",
{1,0},1,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{509,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДругиеОтчетыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{359,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВариантыОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{502,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ГруппаПрочиеНастройкиОтчета",
{1,1,
{"ru","Прочее"}
},
{1,1,
{"ru","Группа прочие настройки отчета"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,0,
{0},"",-1,-1,1,0,""},
{0},2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{450,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"КомандыВариантовОтчета",
{1,1,
{"ru","Команды вариантов отчета"}
},
{1,1,
{"ru","Команды вариантов отчета"}
},1,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{452,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ИзменитьВариант",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{453,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИзменитьВариантРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{639,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ВыбратьВариант",
{1,1,
{"ru","Выбрать вариант отчета..."}
},1,
{0,b08b7a35-583a-4756-b814-0436ff9139c0},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{640,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыбратьВариантРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{451,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандыВариантовОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{504,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаПользовательскиеНастройки",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{462,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ВыбратьНастройки",
{1,0},1,
{0,b0c9afb6-320c-4e36-be21-8f6d48116415},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{463,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыбратьНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{460,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СохранитьНастройки",
{1,0},1,
{0,7910bb04-ddcc-4e5d-89f0-104c6ad0f187},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{461,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранитьНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{505,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПользовательскиеНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{503,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПрочиеНастройкиОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{144,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНастройкиОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{518,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаРаботаВТаблице",
{1,1,
{"ru","Группа работа в таблице"}
},
{1,1,
{"ru","Группа работа в таблице"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},5,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Найти",
{1,0},1,
{7,0cf34151-92d3-42fd-954f-5938433908a4},
{0},0,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{120,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НайтиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"РазвернутьВсеГруппы",
{1,0},1,
{7,12acffde-8389-4e5e-bd86-ff248262d84a},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{122,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РазвернутьВсеГруппыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СвернутьВсеГруппы",
{1,0},1,
{7,ff5c34f8-b172-4ef2-91d3-48283a66a725},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{121,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвернутьВсеГруппыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{637,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"АвтоСуммаКнопка",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},1,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{638,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"АвтоСуммаКнопкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{526,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"КомандыТабличногоДокумента",
{1,1,
{"ru","Таблица"}
},
{1,1,
{"ru","Команды табличного документа"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,0,
{0},"",-1,-1,1,0,""},
{0},2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{528,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗафиксироватьТаблицу",
{1,0},1,
{7,b34f83ab-1cd7-41b1-89bd-dd0804a47b26},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{529,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗафиксироватьТаблицуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{530,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ОтображатьГруппировки",
{1,0},1,
{7,b55ad06a-ee91-4435-a747-6f51884772d9},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{531,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОтображатьГруппировкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{532,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Редактирование",
{1,0},1,
{7,5c52ec51-6000-4190-b8c8-bd6201a271f5},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{533,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РедактированиеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{527,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандыТабличногоДокументаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{519,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаРаботаВТаблицеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{641,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаПрограммныйИнтерфейс",
{1,1,
{"ru","Группа кнопок"}
},
{1,1,
{"ru","Динамически добавляемые кнопки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},0,1,0,1,
{10,
{642,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПрограммныйИнтерфейсРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{534,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаВывод",
{1,1,
{"ru","Группа вывод"}
},
{1,1,
{"ru","Группа вывод"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},5,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Печать",
{1,0},1,
{0,a11fe36e-0b45-4c07-80b3-2346b660a51e},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{138,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПечатьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{90,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПредварительныйПросмотр",
{1,0},1,
{7,5aa38159-2001-42ae-8451-f8cabe0762c3},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{139,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПредварительныйПросмотрРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{94,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПараметрыСтраницы",
{1,0},1,
{7,41c1bb40-1027-4fd1-a19e-17976100e64b},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{140,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПараметрыСтраницыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Сохранить",
{1,1,
{"ru","Сохранить..."}
},1,
{0,a6d73055-3730-42e7-8934-3145ee987141},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{141,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ГруппаОтправить",
{1,1,
{"ru","Отправить"}
},
{1,1,
{"ru","Отправить отчет по электронной почте"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,1,
{0,f64de21f-5a7c-4a1a-a929-07fc53049f6c},"",-1,-1,0,0,""},
{0},2,1,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{97,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ОтправитьПоЭлектроннойПочте",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{128,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОтправитьПоЭлектроннойПочтеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{127,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОтправитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{535,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыводРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"НовоеОкно",
{1,0},1,
{0,03df6ee5-883c-4cc6-b319-d886d1a9b2c8},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{159,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НовоеОкноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ИзменитьФорму",
{1,0},1,
{0,198ea630-fda2-4cda-8a23-f999f4c67ee6},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{160,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИзменитьФормуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Справка",
{1,0},1,
{0,39bb0fe9-771d-4dd5-8a6e-2d16984523af},
{0},3,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{161,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СправкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{133,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОсновнаяКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{516,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"НеОтсортированное",
{1,1,
{"ru","Не отсортированное"}
},
{1,1,
{"ru","Не отсортированное"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},0,1,0,1,
{10,
{517,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НеОтсортированноеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{643,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияНастройкаПоддержанияЗапасов",
{1,1,
{"ru","Настройка поддержания запасов"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,1,0,3,0,
{1,11707a99-4eb9-4373-bc8c-84891483a034,"ДекорацияНастройкаПоддержанияЗапасовНажатие",1,0,11707a99-4eb9-4373-bc8c-84891483a034,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{644,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияНастройкаПоддержанияЗапасовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Настройка поддержания запасов"}
},0},0,1,
{10,
{645,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияНастройкаПоддержанияЗапасовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ОтчетТабличныйДокумент",0,0,
{1,0},
{1,0},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{9,60,15,1,1,0,0,1,1,0,0,1,0,0,1,
{3,4,
{0}
},1,1,
{2,0b8dc702-d001-4637-a215-9f35613e096c,"ОтчетТабличныйДокументОбработкаДополнительнойРасшифровки",2988b2a5-c887-4928-94ae-5d0c9c31e999,"ОтчетТабличныйДокументОбработкаРасшифровки",1,0,0b8dc702-d001-4637-a215-9f35613e096c,0,1,2988b2a5-c887-4928-94ae-5d0c9c31e999,0,1},0,1,0,0,1,0},
{0,1,0},1,
{21,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ОтчетТабличныйДокументКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{168,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ОтчетТабличныйДокументКонтекстноеМенюОтчетСкомпоноватьРезультат",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{169,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОтчетТабличныйДокументКонтекстноеМенюОтчетСкомпоноватьРезультатРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{520,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаСвернутьРазвернутьКонтекст",
{1,1,
{"ru","Свернуть / Развернуть"}
},
{1,1,
{"ru","Группа свернуть развернуть"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{522,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СвернутьВсеГруппы_Контекст",
{1,0},1,
{7,ff5c34f8-b172-4ef2-91d3-48283a66a725},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{523,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвернутьВсеГруппы_КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{524,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"РазвернутьВсеГруппы_Контекст",
{1,0},1,
{7,12acffde-8389-4e5e-bd86-ff248262d84a},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{525,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РазвернутьВсеГруппы_КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{521,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСвернутьРазвернутьКонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{163,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОтчетТабличныйДокументExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},0,"",2,0,0,0,0,0,3,3,0,0,2},"#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчика;

&НаКлиенте
Перем ПеременныеКлиента;

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ФОРМА

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	
	ВариантыПанелиКлючТекущегоВарианта = "" - "";
	Если ЗначениеЗаполнено(Параметры.КлючВарианта) Тогда
		КлючТекущегоВарианта = Параметры.КлючВарианта;
	КонецЕсли;
	РежимВариантаОтчета = (ТипЗнч(КлючТекущегоВарианта) = Тип(""Строка"") И Не ПустаяСтрока(КлючТекущегоВарианта));
	
	// Параметры формы.
	РежимРасшифровки = (Параметры.Свойство(""Расшифровка"") И Параметры.Расшифровка <> Неопределено);
	ПравоВывода = ПравоДоступа(""Вывод"", Метаданные);
	
	ФормаПараметры = Новый Структура(
		""КлючНазначенияИспользования, КлючПользовательскихНастроек,
		|СформироватьПриОткрытии, ТолькоПросмотр,
		|ФиксированныеНастройки, Раздел, Подсистема, ПодсистемаПредставление"");
	ЗаполнитьЗначенияСвойств(ФормаПараметры, Параметры);
	ФормаПараметры.Вставить(""Отбор"", Новый Структура);
	Если ТипЗнч(Параметры.Отбор) = Тип(""Структура"") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ФормаПараметры.Отбор, Параметры.Отбор, Истина);
		Параметры.Отбор.Очистить();
	КонецЕсли;
	
	Если ФормаПараметры.Подсистема = Неопределено Тогда
		Элементы.ДругиеОтчеты.Видимость = Ложь;
	КонецЕсли;
	
	// Локальные переменные.
	ОтчетОбъект = РеквизитФормыВЗначение(""Отчет"");
	ОтчетМетаданные = ОтчетОбъект.Метаданные();
	НастройкиОтчета = ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию();
	АдресСхемы = ПоместитьВоВременноеХранилище(ОтчетОбъект.СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	НастройкиОтчета.Вставить(""АдресСхемы"",          АдресСхемы);
	НастройкиОтчета.Вставить(""СхемаМодифицирована"", Ложь);
	НастройкиОтчета.Вставить(""КлючСхемы"",           """");
	НастройкиОтчета.Вставить(""Контекстный"",         ТипЗнч(ФормаПараметры.Отбор) = Тип(""Структура"") И ФормаПараметры.Отбор.Количество() > 0);
	НастройкиОтчета.Вставить(""ПолноеИмя"",    ОтчетМетаданные.ПолноеИмя());
	НастройкиОтчета.Вставить(""Наименование"", СокрЛП(ОтчетМетаданные.Представление()));
	
	НастройкиОтчета.Вставить(""ОтчетСсылка"", Параметры.Отчет);
	ТипОтчетаСтрокой = ВариантыОтчетовКлиентСервер.ТипОтчета(НастройкиОтчета.ОтчетСсылка, Истина);
	Если ТипОтчетаСтрокой = Неопределено Тогда
		Информация = ВариантыОтчетов.СформироватьИнформациюОбОтчетеПоПолномуИмени(НастройкиОтчета.ПолноеИмя);
		НастройкиОтчета.ОтчетСсылка = Информация.Отчет;
	КонецЕсли;
	НастройкиОтчета.Вставить(""Внешний"",    ТипЗнч(НастройкиОтчета.ОтчетСсылка) = Тип(""Строка""));
	НастройкиОтчета.Вставить(""Безопасный"", БезопасныйРежим() <> Ложь);
	ОбновитьИнформациюОВариантеОтчета();
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(НастройкиОтчета, ВариантыОтчетов.ПараметрыКлиента());
	
	Если ВариантыОтчетовПовтИсп.Параметры().ОтчетыСНастройками.Найти(НастройкиОтчета.ОтчетСсылка) <> Неопределено Тогда
		ОтчетОбъект.ОпределитьНастройкиФормы(ЭтотОбъект, КлючТекущегоВарианта, НастройкиОтчета);
	КонецЕсли;
	
	НастройкиОтчета.Вставить(""ПрочитатьФлажокФормироватьСразуИзПользовательскихНастроек"", Истина);
	Если Параметры.Свойство(""СформироватьПриОткрытии"") И Параметры.СформироватьПриОткрытии = Истина Тогда
		Параметры.СформироватьПриОткрытии = Ложь;
		Элементы.ФормироватьСразу.Пометка = Истина;
		НастройкиОтчета.ПрочитатьФлажокФормироватьСразуИзПользовательскихНастроек = Ложь;
	КонецЕсли;
	
	НастройкиОтчета.Вставить(""ПредопределенныеВарианты"", Новый СписокЗначений);
	Если НастройкиОтчета.Внешний И ОтчетОбъект.СхемаКомпоновкиДанных <> Неопределено Тогда
		Для Каждого Вариант Из ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек Цикл
			НастройкиОтчета.ПредопределенныеВарианты.Добавить(Вариант.Имя, Вариант.Представление);
		КонецЦикла;
	КонецЕсли;
	
	// Параметры по умолчанию.
	Если Не ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(НастройкиОтчета, ""ВыводитьСуммуВыделенныхЯчеек"", Истина) Тогда
		Элементы.АвтоСуммаКнопка.Видимость = Ложь;
		Элементы.ОтчетТабличныйДокумент.УстановитьДействие(""ПриАктивизацииОбласти"", """");
	КонецЕсли;
	
	// Скрытие команд вариантов.
	Если Не НастройкиОтчета.Свойство(""РазрешеноМенятьВарианты"") Или Параметры.Свойство(""ВидимостьКомандВариантовОтчетов"") Тогда
		НастройкиОтчета.Вставить(""РазрешеноМенятьВарианты"", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, ""ВидимостьКомандВариантовОтчетов""));
	КонецЕсли;
	Если ТипЗнч(НастройкиОтчета.РазрешеноМенятьВарианты) <> Тип(""Булево"") Тогда
		НастройкиОтчета.РазрешеноМенятьВарианты = ВариантыОтчетовПовтИсп.ПравоДобавления();
		Если НастройкиОтчета.РазрешеноМенятьВарианты // Команды не отключены параметрами открытия формы.
			И ЗначениеЗаполнено(НастройкиОтчета.ВариантСсылка) // Вариант зарегистрирован.
			И ЗначениеЗаполнено(НастройкиОтчета.ПредопределенныйСсылка) Тогда // Это предопределенный.
			Отключенные = ВариантыОтчетовПовтИсп.ОтключенныеВариантыПрограммы();
			Если Отключенные.Найти(НастройкиОтчета.ПредопределенныйСсылка) <> Неопределено Тогда // Вариант отключен.
				Текст = НСтр(""ru = 'Контекстный вариант """"%1"""" отчета """"%2"""" открыт без контекста.'"");
				ВариантыОтчетов.ПредупреждениеПоВарианту(НастройкиОтчета.ВариантСсылка, Текст, НастройкиОтчета.ВариантСсылка, НастройкиОтчета.ОтчетСсылка);
				НастройкиОтчета.РазрешеноМенятьВарианты = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если НастройкиОтчета.РазрешеноМенятьВарианты = Ложь И ПустаяСтрока(КлючНазначенияИспользования) Тогда
		КлючНазначенияИспользования = Параметры.КлючВарианта;
		ФормаПараметры.КлючНазначенияИспользования = КлючНазначенияИспользования;
	КонецЕсли;
	Если Не ВариантыОтчетов.ОтчетПодключенКФормеНастроек(ОтчетМетаданные) Тогда
		НастройкиОтчета.РазрешеноМенятьВарианты = Ложь;
		ТекстОшибки = ВариантыОтчетовКлиентСервер.ТекстОшибки(1, НастройкиОтчета.ПолноеИмя);
		Если ОбщегоНазначенияКлиентСервер.РежимОтладки() Тогда
			ВызватьИсключение ТекстОшибки;
		Иначе
			ВариантыОтчетов.ОшибкаПоВарианту(НастройкиОтчета.ОтчетСсылка, ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
	
	// Регистрация команд и реквизитов формы, которые не удаляются при перезаполнении быстрых настроек.
	НаборРеквизитов = ПолучитьРеквизиты();
	Для Каждого Реквизит Из НаборРеквизитов Цикл
		ПолноеИмяРеквизита = Реквизит.Имя + ?(ПустаяСтрока(Реквизит.Путь), """", ""."" + Реквизит.Путь);
		ПостоянныеРеквизиты.Добавить(ПолноеИмяРеквизита);
	КонецЦикла;
	Для Каждого Команда Из Команды Цикл
		ПостоянныеКоманды.Добавить(Команда.Имя);
	КонецЦикла;
	
	// Приведение зависимых элементов формы к кондиции.
	ВидимостьДоступностьКорректность("""");
	
	// Тесная интеграция с почтой и рассылкой.
	ДоступнаОтправкаПисем = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует(""СтандартныеПодсистемы.РаботаСПочтовымиСообщениями"") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль(""РаботаСПочтовымиСообщениями"");
		ДоступнаОтправкаПисем = МодульРаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем();
	КонецЕсли;
	Если ДоступнаОтправкаПисем Тогда
		Если НастройкиОтчета.РазрешеноМенятьВарианты
			И ОбщегоНазначения.ПодсистемаСуществует(""СтандартныеПодсистемы.РассылкаОтчетов"") Тогда
			МодульРассылкаОтчетов = ОбщегоНазначения.ОбщийМодуль(""РассылкаОтчетов"");
			МодульРассылкаОтчетов.ФормаОтчетаДобавитьКоманды(ЭтотОбъект, Отказ, СтандартнаяОбработка);
		Иначе // Если в подменю одна команда, то выпадающий список не отображается.
			Элементы.ОтправитьПоЭлектроннойПочте.Заголовок = Элементы.ГруппаОтправить.Заголовок + ""..."";
			Элементы.Переместить(Элементы.ОтправитьПоЭлектроннойПочте, Элементы.ГруппаОтправить.Родитель, Элементы.ГруппаОтправить);
		КонецЕсли;
	Иначе
		Элементы.ГруппаОтправить.Видимость = Ложь;
	КонецЕсли;
	
	// Определение что отчет может содержать некорректные данные.
	Если Не Элементы.ФормироватьСразу.Пометка Тогда
		Попытка
			ИспользуемыеТаблицы = ВариантыОтчетов.ИспользуемыеТаблицы(ОтчетОбъект.СхемаКомпоновкиДанных);
			ИспользуемыеТаблицы.Добавить(НастройкиОтчета.ПолноеИмя);
			Если НастройкиОтчета.События.ПриОпределенииИспользуемыхТаблиц Тогда
				ОтчетОбъект.ПриОпределенииИспользуемыхТаблиц(КлючТекущегоВарианта, ИспользуемыеТаблицы);
			КонецЕсли;
			ВариантыОтчетов.ПроверитьИспользуемыеТаблицы(ИспользуемыеТаблицы);
		Исключение
			ТекстОшибки = НСтр(""ru = 'Не удалось определить используемые таблицы:'"");
			ТекстОшибки = ТекстОшибки + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ВариантыОтчетов.ОшибкаПоВарианту(НастройкиОтчета.ВариантСсылка, ТекстОшибки);
		КонецПопытки;
	КонецЕсли;
	
	ОтчетыПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если НастройкиОтчета.События.ПриСозданииНаСервере Тогда
		ОтчетОбъект.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПеременныеКлиента = Новый Структура;
	ПеременныеКлиента.Вставить(""ВыполнятьЗамеры"", Ложь);
	// В безопасном режиме доп. отчеты формируются непосредственно,
	// т.к. они не могут подключать себя и использовать собственные методы в фоновых заданиях.
	ПеременныеКлиента.Вставить(""Непосредственно"", НастройкиОтчета.Внешний Или НастройкиОтчета.Безопасный);
	ПеременныеКлиента.Вставить(""ФормированиеПриОткрытии"", Ложь);
	ПеременныеКлиента.Вставить(""ИнтервалОжидания"", ?(ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая, 1, 0.2));
	Если Элементы.ФормироватьСразу.Пометка Тогда
		ПеременныеКлиента.ФормированиеПриОткрытии = Истина;
		ПодключитьОбработчикОжидания(""СФормировать"", 0.1, Истина);
	КонецЕсли;
	ПоказатьРезультатЗаполненияНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(Результат, ПодчиненнаяФорма)
	РезультатОбработан = Ложь;
	
	// Приемка результата из стандартных форм.
	Если ТипЗнч(ПодчиненнаяФорма) = Тип(""УправляемаяФорма"") Тогда
		ИмяПодчиненнойФормы = ПодчиненнаяФорма.ИмяФормы;
		Если ИмяПодчиненнойФормы = ""ХранилищеНастроек.ХранилищеВариантовОтчетов.Форма.НастройкиОтчета""
			Или ПодчиненнаяФорма.ОписаниеОповещенияОЗакрытии <> Неопределено Тогда
			РезультатОбработан = Истина; // См. ВсеНастройкиЗавершение.
		ИначеЕсли ТипЗнч(Результат) = Тип(""Структура"") Тогда
			ПозицияТочки = СтрДлина(ИмяПодчиненнойФормы);
			Пока КодСимвола(ИмяПодчиненнойФормы, ПозицияТочки) <> 46 Цикл // Не точка.
				ПозицияТочки = ПозицияТочки - 1;
			КонецЦикла;
			СуффиксФормыИсточника = ВРег(Сред(ИмяПодчиненнойФормы, ПозицияТочки + 1));
			Если СуффиксФормыИсточника = ВРег(""ФормаНастроекОтчета"")
				Или СуффиксФормыИсточника = ВРег(""ФормаНастроек"")
				Или СуффиксФормыИсточника = ВРег(""ФормаВариантаОтчета"")
				Или СуффиксФормыИсточника = ВРег(""ФормаВарианта"") Тогда
				БыстрыеНастройкиЗаполнитьКлиент(Результат);
				РезультатОбработан = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Механизмы расширения.
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует(""СтандартныеПодсистемы.РассылкаОтчетов"") Тогда
		МодульРассылкаОтчетовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(""РассылкаОтчетовКлиент"");
		МодульРассылкаОтчетовКлиент.ФормаОтчетаОбработкаВыбора(ЭтотОбъект, Результат, ПодчиненнаяФорма, РезультатОбработан);
	КонецЕсли;
	ОтчетыКлиентПереопределяемый.ОбработкаВыбора(ЭтотОбъект, Результат, ПодчиненнаяФорма, РезультатОбработан);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОповещениеОбработано = Ложь;
	Если ИмяСобытия = ВариантыОтчетовКлиентСервер.ИмяСобытияИзменениеВарианта()
		Или ИмяСобытия = ""Запись_НаборКонстант"" Тогда
		ОповещениеОбработано = Истина;
		ВариантыПанелиКлючТекущегоВарианта = "" - "";
		ПодключитьОбработчикОжидания(""ВидимостьДоступностьЕслиТребуется"", 0.1, Истина);
	КонецЕсли;
	ОтчетыКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник, ОповещениеОбработано);
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойВариантаНаСервере(НовыеНастройкиКД)
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	Если НовыеНастройкиКД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Ничего не делать если отчет не на СКД и никаких настроек не загружено.
	РежимВариантаОтчета = (ТипЗнч(КлючТекущегоВарианта) = Тип(""Строка"") И Не ПустаяСтрока(КлючТекущегоВарианта));
	Если Не РежимВариантаОтчета И НовыеНастройкиКД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Вызов переопределяемого модуля.
	ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере(ЭтотОбъект, НовыеНастройкиКД);
	Если НастройкиОтчета.События.ПередЗагрузкойВариантаНаСервере Тогда
		ОтчетОбъект = РеквизитФормыВЗначение(""Отчет"");
		ОтчетОбъект.ПередЗагрузкойВариантаНаСервере(ЭтотОбъект, НовыеНастройкиКД);
	КонецЕсли;
	
	// Подготовка к вызову события переинициализации.
	Если НастройкиОтчета.События.ПередЗагрузкойНастроекВКомпоновщик Тогда
		Попытка
			НовыеНастройкиXML = ОбщегоНазначения.ЗначениеВСтрокуXML(НовыеНастройкиКД);
		Исключение
			НовыеНастройкиXML = Неопределено;
		КонецПопытки;
		НастройкиОтчета.Вставить(""НовыеНастройкиXML"", НовыеНастройкиXML);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(НовыеНастройкиКД)
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	
	// Ничего не делать если отчет не на СКД и никаких настроек не загружено.
	РежимВариантаОтчета = (ТипЗнч(КлючТекущегоВарианта) = Тип(""Строка"") И Не ПустаяСтрока(КлючТекущегоВарианта));
	Если Не РежимВариантаОтчета И НовыеНастройкиКД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Загрузка фиксированных настроек для режима расшифровки.
	Если РежимРасшифровки Тогда
		ОтчетНаименованиеТекущегоВарианта = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(НовыеНастройкиКД.ДополнительныеСвойства, ""ВариантНаименование"");
		Если Параметры <> Неопределено И Параметры.Свойство(""Расшифровка"") Тогда
			Отчет.КомпоновщикНастроек.ЗагрузитьФиксированныеНастройки(Параметры.Расшифровка.ПрименяемыеНастройки);
			Отчет.КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Вставить(""РежимРасшифровки"", Истина);
		КонецЕсли;
		Если КлючТекущегоВарианта = Неопределено Тогда
			КлючТекущегоВарианта = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(НовыеНастройкиКД.ДополнительныеСвойства, ""КлючВарианта"");
		КонецЕсли;
	Иначе
		Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить(""ВариантНаименование"", ОтчетНаименованиеТекущегоВарианта);
	КонецЕсли;
	// Установка фиксированных отборов выполняется через компоновщик, т.к. в нем наиболее полная коллекция настроек.
	// В ПередЗагрузкой в параметрах могут отсутствовать те параметры, настройки которые не переопределялись.
	Если ТипЗнч(ФормаПараметры.Отбор) = Тип(""Структура"") Тогда
		ОтчетыСервер.УстановитьФиксированныеОтборы(ФормаПараметры.Отбор, Отчет.КомпоновщикНастроек.Настройки, НастройкиОтчета);
	КонецЕсли;
	
	// Обновление ссылки варианта отчета.
	Если ВариантыПанелиКлючТекущегоВарианта <> КлючТекущегоВарианта Тогда
		ОбновитьИнформациюОВариантеОтчета();
	КонецЕсли;
	
	// Заполнение панели быстрых настроек.
	РежимВариантаОтчета = Истина;
	
	// Вызов переопределяемого модуля.
	Если НастройкиОтчета.События.ПриЗагрузкеВариантаНаСервере Тогда
		ОтчетОбъект = РеквизитФормыВЗначение(""Отчет"");
		ОтчетОбъект.ПриЗагрузкеВариантаНаСервере(ЭтотОбъект, НовыеНастройкиКД);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойПользовательскихНастроекНаСервере(НовыеПользовательскиеНастройкиКД)
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовка к вызову события переинициализации.
	Если НастройкиОтчета.События.ПередЗагрузкойНастроекВКомпоновщик Тогда
		Попытка
			НовыеПользовательскиеНастройкиXML = ОбщегоНазначения.ЗначениеВСтрокуXML(НовыеПользовательскиеНастройкиКД);
		Исключение
			НовыеПользовательскиеНастройкиXML = Неопределено;
		КонецПопытки;
		НастройкиОтчета.Вставить(""НовыеПользовательскиеНастройкиXML"", НовыеПользовательскиеНастройкиXML);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(НовыеПользовательскиеНастройкиКД)
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	Если Не РежимВариантаОтчета Тогда
		Возврат;
	КонецЕсли;
	
	// Вызов переопределяемого модуля.
	Если НастройкиОтчета.События.ПриЗагрузкеПользовательскихНастроекНаСервере Тогда
		ОтчетОбъект = РеквизитФормыВЗначение(""Отчет"");
		ОтчетОбъект.ПриЗагрузкеПользовательскихНастроекНаСервере(ЭтотОбъект, НовыеПользовательскиеНастройкиКД);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	Если Не РежимВариантаОтчета Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить(""ИмяСобытия"", ""ПриОбновленииСоставаПользовательскихНастроекНаСервере"");
	ПараметрыЗаполнения.Вставить(""СтандартнаяОбработкаСобытия"", СтандартнаяОбработка);
	БыстрыеНастройкиЗаполнить(ПараметрыЗаполнения);
	Если ПараметрыЗаполнения.СтандартнаяОбработкаСобытия <> СтандартнаяОбработка Тогда
		СтандартнаяОбработка = ПараметрыЗаполнения.СтандартнаяОбработкаСобытия;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Не РежимВариантаОтчета Тогда
		Возврат;
	КонецЕсли;
	ПользовательскиеНастройкиКД = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
	Для Каждого ПользовательскаяНастройкаКД Из ПользовательскиеНастройкиКД.Элементы Цикл
		Тип = ОтчетыКлиентСервер.ТипНастройкиСтрокой(ТипЗнч(ПользовательскаяНастройкаКД));
		
		Если Тип = ""ЗначениеПараметраНастроек""
			И ТипЗнч(ПользовательскаяНастройкаКД.Значение) = Тип(""СтандартныйПериод"")
			И ПользовательскаяНастройкаКД.Использование Тогда
			
			ИдентификаторЭлемента = ОтчетыКлиентСервер.ПривестиИдентификаторКИмени(ПользовательскаяНастройкаКД.ИдентификаторПользовательскойНастройки);
			
			ПериодНачало    = Элементы.Найти(Тип + ""_Начало_""    + ИдентификаторЭлемента);
			ПериодОкончание = Элементы.Найти(Тип + ""_Окончание_"" + ИдентификаторЭлемента);
			Если ПериодНачало = Неопределено Или ПериодОкончание = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Значение = ПользовательскаяНастройкаКД.Значение;
			Если ПериодНачало.АвтоОтметкаНезаполненного
				И Не ЗначениеЗаполнено(Значение.ДатаНачала)
				И Не ЗначениеЗаполнено(Значение.ДатаОкончания) Тогда
				ТекстОшибки = НСтр(""ru = 'Не указан период'"");
				ПутьКДанным = ПериодНачало.ПутьКДанным;
			ИначеЕсли Значение.ДатаНачала > Значение.ДатаОкончания Тогда
				ТекстОшибки = НСтр(""ru = 'Конец периода должен быть больше начала'"");
				ПутьКДанным = ПериодОкончание.ПутьКДанным;
			Иначе
				Продолжить;
			КонецЕсли;
			
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , ПутьКДанным);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииВариантаНаСервере(НастройкиКД)
	Если Не РежимВариантаОтчета Тогда
		Возврат;
	КонецЕсли;
	НовыеНастройкиКД = Отчет.КомпоновщикНастроек.ПолучитьНастройки();
	ОтчетыКлиентСервер.ЗагрузитьНастройки(Отчет.КомпоновщикНастроек, НовыеНастройкиКД);
	НастройкиКД.ДополнительныеСвойства.Вставить(""Адрес"", ПоместитьВоВременноеХранилище(НовыеНастройкиКД)); // Для платформы.
	НастройкиКД = НовыеНастройкиКД;
	ВариантыПанелиКлючТекущегоВарианта = "" - "";
	ОбновитьИнформациюОВариантеОтчета();
	ВидимостьДоступностьКорректность(""ВариантОтчета"");
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(ПользовательскиеНастройкиКД)
	Если Не РежимВариантаОтчета Тогда
		Возврат;
	КонецЕсли;
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, ПользовательскиеНастройкиКД);
	ЗаполнитьКомандыВыбораВариантов();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ФоновоеЗаданиеИдентификатор <> Неопределено Тогда
		ФоновоеЗаданиеОтменить(ФоновоеЗаданиеИдентификатор);
		ФоновоеЗаданиеИдентификатор = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ЭЛЕМЕНТЫ

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// Табличный документ

&НаКлиенте
Процедура ОтчетТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует(""СтандартныеПодсистемы.АнализЖурналаРегистрации"") Тогда
		МодульАнализЖурналаРегистрацииКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(""АнализЖурналаРегистрацииКлиент"");
		МодульАнализЖурналаРегистрацииКлиент.ФормаОтчетаОбработкаРасшифровки(ЭтотОбъект, Элемент, Расшифровка, СтандартнаяОбработка);
	КонецЕсли;
	ОтчетыКлиентПереопределяемый.ОбработкаРасшифровки(ЭтотОбъект, Элемент, Расшифровка, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетТабличныйДокументОбработкаДополнительнойРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует(""СтандартныеПодсистемы.АнализЖурналаРегистрации"") Тогда
		МодульАнализЖурналаРегистрацииКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(""АнализЖурналаРегистрацииКлиент"");
		МодульАнализЖурналаРегистрацииКлиент.ФормаОтчетаОбработкаДополнительнойРасшифровки(ЭтотОбъект, Элемент, Расшифровка, СтандартнаяОбработка);
	КонецЕсли;
	ОтчетыКлиентПереопределяемый.ОбработкаДополнительнойРасшифровки(ЭтотОбъект, Элемент, Расшифровка, СтандартнаяОбработка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подключаемые

&НаКлиенте
Процедура Подключаемый_ФлажокИспользование_ПриИзменении(Элемент)
	ИдентификаторЭлемента = Прав(Элемент.Имя, 32);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВвода_ПриИзменении(Элемент)
	ИдентификаторЭлемента = Прав(Элемент.Имя, 32);
	
	ПользовательскаяНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(ИдентификаторЭлемента);
	Если ТипЗнч(ПользовательскаяНастройкаКД) = Тип(""ЗначениеПараметраНастроекКомпоновкиДанных"") Тогда
		Значение = ПользовательскаяНастройкаКД.Значение;
	ИначеЕсли ТипЗнч(ПользовательскаяНастройкаКД) = Тип(""ЭлементОтбораКомпоновкиДанных"") Тогда
		Значение = ПользовательскаяНастройкаКД.ПравоеЗначение;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Значение) Тогда
		ПользовательскаяНастройкаКД.Использование = Истина;
	КонецЕсли;
	
	Если ПользовательскаяНастройкаКД.Использование Тогда // Очистка значений при изменении значения.
		Найденные = ОтключаемыеСвязи.НайтиСтроки(Новый Структура(""ВедущийИдентификаторВФорме"", ИдентификаторЭлемента));
		Для Каждого Связь Из Найденные Цикл
			Если Не ЗначениеЗаполнено(Связь.ПодчиненныйИдентификаторВФорме) Тогда
				Продолжить;
			КонецЕсли;
			Если Связь.ТипСвязи = ""ПараметровВыбора"" Тогда
				Если Связь.ПодчиненныйДействие <> РежимИзмененияСвязанногоЗначения.Очищать Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Продолжить;
			КонецЕсли;
			ПодчиненныйДополнительно = НайтиДополнительныеНастройкиЭлемента(Связь.ПодчиненныйИдентификаторВФорме);
			Если ПодчиненныйДополнительно <> Неопределено Тогда
				Если ПодчиненныйДополнительно.ВыводитьФлажок Тогда
					ПодчиненныйНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(Связь.ПодчиненныйИдентификаторВФорме);
					Если ПодчиненныйНастройкаКД <> Неопределено Тогда
						ПодчиненныйНастройкаКД.Использование = Ложь;
					КонецЕсли;
				КонецЕсли;
				Если Не ПодчиненныйДополнительно.ОграничиватьВыборУказаннымиЗначениями Тогда
					ПодчиненныйДополнительно.ЗначенияДляВыбора.Очистить();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ФлажокЗначения_ПриИзменении(Элемент)
	ИдентификаторЭлемента = Прав(Элемент.Имя, 32);
	Значение = ЭтотОбъект[Элемент.Имя];
	
	ПользовательскаяНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(ИдентификаторЭлемента);
	Если ТипЗнч(ПользовательскаяНастройкаКД) = Тип(""ЗначениеПараметраНастроекКомпоновкиДанных"") Тогда
		ПользовательскаяНастройкаКД.Значение = Значение;
	Иначе
		ПользовательскаяНастройкаКД.ПравоеЗначение = Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СписокКомпоновщика_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтчетыКлиент.СписокКомпоновщикаНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗначениеКомпоновщика_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтчетыКлиент.ЗначениеКомпоновщикаНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВидСравнения_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Подключаемый_ИзменитьВидСравнения(Элемент);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подключаемые - Стандартный период.

&НаКлиенте
Процедура Подключаемый_СтандартныйПериод_НачалоПериода_ПриИзменении(Элемент)
	// Формирование сведений по элементу.
	ПериодНачалоИмя = Элемент.Имя;
	ЗначениеИмя     = СтрЗаменить(ПериодНачалоИмя, ""_Начало_"", ""_Значение_"");
	ИдентификаторЭлемента = Прав(ПериодНачалоИмя, 32);
	
	Значение = ЭтотОбъект[ЗначениеИмя];
	Заполнено = ЗначениеЗаполнено(Значение.ДатаНачала);
	Если Заполнено Тогда
		Значение.ДатаНачала = НачалоДня(Значение.ДатаНачала);
	КонецЕсли;
	
	// Запись значения в пользовательские настройки компоновки данных.
	ПользовательскаяНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(ИдентификаторЭлемента);
	Если ТипЗнч(ПользовательскаяНастройкаКД) = Тип(""ЗначениеПараметраНастроекКомпоновкиДанных"") Тогда
		ПользовательскаяНастройкаКД.Значение = Значение;
	Иначе
		ПользовательскаяНастройкаКД.ПравоеЗначение = Значение;
	КонецЕсли;
	Если Заполнено Тогда
		ПользовательскаяНастройкаКД.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СтандартныйПериод_КонецПериода_ПриИзменении(Элемент)
	// Формирование сведений по элементу.
	ПериодОкончаниеИмя = Элемент.Имя;
	ЗначениеИмя        = СтрЗаменить(ПериодОкончаниеИмя, ""_Окончание_"", ""_Значение_"");
	ИдентификаторЭлемента = Прав(ПериодОкончаниеИмя, 32);
	
	Значение = ЭтотОбъект[ЗначениеИмя];
	Заполнено = ЗначениеЗаполнено(Значение.ДатаОкончания);
	Если Заполнено Тогда
		Значение.ДатаОкончания = КонецДня(Значение.ДатаОкончания);
	КонецЕсли;
	
	// Запись значения в пользовательские настройки компоновки данных.
	ПользовательскаяНастройкаКД = НайтиПользовательскуюНастройкуЭлемента(ИдентификаторЭлемента);
	Если ТипЗнч(ПользовательскаяНастройкаКД) = Тип(""ЗначениеПараметраНастроекКомпоновкиДанных"") Тогда
		ПользовательскаяНастройкаКД.Значение = Значение;
	Иначе
		ПользовательскаяНастройкаКД.ПравоеЗначение = Значение;
	КонецЕсли;
	Если Заполнено Тогда
		ПользовательскаяНастройкаКД.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыбратьПериод(Команда)
	ОтчетыКлиент.ВыбратьПериод(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВсеНастройки(Команда)
	Имя = НастройкиОтчета.ПолноеИмя + "".ФормаНастроек"";
	
	ПараметрыФормы = Новый Структура;
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыФормы, ФормаПараметры, Истина);
	ПараметрыФормы.Вставить(""КлючВарианта"",              Строка(КлючТекущегоВарианта));
	ПараметрыФормы.Вставить(""Вариант"",                   Отчет.КомпоновщикНастроек.Настройки);
	ПараметрыФормы.Вставить(""ПользовательскиеНастройки"", Отчет.КомпоновщикНастроек.ПользовательскиеНастройки);
	ПараметрыФормы.Вставить(""НастройкиОтчета"",     НастройкиОтчета);
	ПараметрыФормы.Вставить(""ВариантНаименование"", Строка(ОтчетНаименованиеТекущегоВарианта));
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	Обработчик = Новый ОписаниеОповещения(""ВсеНастройкиЗавершение"", ЭтотОбъект);
	
	ВыполнятьЗамеры = НастройкиОтчета.ВыполнятьЗамеры И ЗначениеЗаполнено(НастройкиОтчета.КлючЗамеров);
	Если ВыполнятьЗамеры Тогда
		МодульОценкаПроизводительностиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(""ОценкаПроизводительностиКлиент"");
		ИдентификаторЗамера = МодульОценкаПроизводительностиКлиент.НачатьЗамерВремени(
			Ложь,
			НастройкиОтчета.КлючЗамеров + "".Настройки"");
		МодульОценкаПроизводительностиКлиент.УстановитьКомментарийЗамера(ИдентификаторЗамера, НастройкиОтчета.ПрефиксЗамеров);
	КонецЕсли;
	
	ОткрытьФорму(Имя, ПараметрыФормы, ЭтотОбъект, , , , Обработчик, Режим);
	
	Если ВыполнятьЗамеры Тогда
		МодульОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(ИдентификаторЗамера);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВсеНастройкиЗавершение(Результат, ПараметрыВыполнения) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	БыстрыеНастройкиЗаполнитьКлиент(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВариантОтчета(Команда)
	ПараметрыФормы = Новый Структура;
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыФормы, ФормаПараметры, Истина);
	ПараметрыФормы.Вставить(""НастройкиОтчета"",                       НастройкиОтчета);
	ПараметрыФормы.Вставить(""Вариант"",                               Отчет.КомпоновщикНастроек.Настройки);
	ПараметрыФормы.Вставить(""КлючВарианта"",                          Строка(КлючТекущегоВарианта));
	ПараметрыФормы.Вставить(""ПользовательскиеНастройки"",             Отчет.КомпоновщикНастроек.ПользовательскиеНастройки);
	ПараметрыФормы.Вставить(""ПредставлениеВарианта"",                 Строка(ОтчетНаименованиеТекущегоВарианта));
	ПараметрыФормы.Вставить(""ПредставлениеПользовательскихНастроек"", """");
	
	ОткрытьФорму(НастройкиОтчета.ПолноеИмя + "".ФормаВарианта"", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоУмолчанию(Команда)
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить(""ИмяСобытия"", ""НастройкиПоУмолчанию"");
	Если ВариантМодифицирован Тогда
		ПараметрыЗаполнения.Вставить(""СброситьНастройкиВарианта"", Истина);
		ПараметрыЗаполнения.Вставить(""ВариантМодифицирован"", Ложь);
	КонецЕсли;
	ПараметрыЗаполнения.Вставить(""СброситьПользовательскиеНастройки"", Истина);
	ПараметрыЗаполнения.Вставить(""ПользовательскиеНастройкиМодифицированы"", Истина);
	
	БыстрыеНастройкиЗаполнитьКлиент(ПараметрыЗаполнения);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочте(Команда)
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	Если ОтображениеСостояния.Видимость = Истина
		И ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность Тогда
		ТекстВопроса = НСтр(""ru = 'Отчет не сформирован. Сформировать?'"");
		Обработчик = Новый ОписаниеОповещения(""ОтправитьПоЭлектроннойПочтеПослеДиалогаСформировать"", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Иначе
		ПоказатьДиалогОтправкиПоЭлектроннойПочте();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтчетСкомпоноватьРезультат(Команда)
	ОчиститьСообщения();
	Сформировать();
КонецПроцедуры

&НаКлиенте
Процедура ВычислитьСумму(Команда)
	СтандартныеПодсистемыКлиент.ПоказатьРасчетЯчеек(ЭтотОбъект, ОтчетТабличныйДокумент);
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьСразу(Команда)
	
	ФормироватьСразу = Не Элементы.ФормироватьСразу.Пометка;
	Элементы.ФормироватьСразу.Пометка = ФормироватьСразу;
	
	СостояниеДоИзменения = Новый Структура(""Видимость, ДополнительныйРежимОтображения, Картинка, Текст"");
	ЗаполнитьЗначенияСвойств(СостояниеДоИзменения, Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния);
	
	Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить(""ФормироватьСразу"", ФормироватьСразу);
	ПользовательскиеНастройкиМодифицированы = Истина;
	
	ЗаполнитьЗначенияСвойств(Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния, СостояниеДоИзменения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДругиеОтчеты(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""ВариантСсылка"",     НастройкиОтчета.ВариантСсылка);
	ПараметрыФормы.Вставить(""ОтчетСсылка"",       НастройкиОтчета.ОтчетСсылка);
	ПараметрыФормы.Вставить(""ПодсистемаСсылка"",  ФормаПараметры.Подсистема);
	ПараметрыФормы.Вставить(""ОтчетНаименование"", НастройкиОтчета.Наименование);
	
	Блокировать = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму(""ХранилищеНастроек.ХранилищеВариантовОтчетов.Форма.ПанельДругихОтчетов"", ПараметрыФормы, ЭтотОбъект, Истина, , , , Блокировать);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подключаемые

&НаКлиенте
Процедура Подключаемый_Команда(Команда)
	// Механизмы расширения
	Результат = Ложь;
	КомандаВПостоянных = ПостоянныеКоманды.НайтиПоЗначению(Команда.Имя);
	Если КомандаВПостоянных <> Неопределено И ЗначениеЗаполнено(КомандаВПостоянных.Представление) Тогда
		МодульКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(КомандаВПостоянных.Представление);
		МодульКлиент.ФормаОтчетаОбработчикКоманды(ЭтотОбъект, Команда, Результат);
	Иначе
		ОтчетыКлиентПереопределяемый.ОбработчикКоманды(ЭтотОбъект, Команда, Результат);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗагрузитьВариантОтчета(Команда)
	Найденные = ДобавленныеВарианты.НайтиСтроки(Новый Структура(""ИмяКоманды"", Команда.Имя));
	Если Найденные.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр(""ru = 'Вариант отчета не найден.'""));
		Возврат;
	КонецЕсли;
	ВариантФормы = Найденные[0];
	ЗагрузитьВариант(ВариантФормы.КлючВарианта);
	КлючУникальности = Лев(КлючУникальности, СтрНайти(КлючУникальности, ""/"")) + ""КлючВарианта."" + ВариантФормы.КлючВарианта;
	ПоказатьРезультатЗаполненияНастроек();
	Если Элементы.ФормироватьСразу.Пометка Тогда
		ПодключитьОбработчикОжидания(""Сформировать"", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИзменитьВидСравнения(Команда)
	ИдентификаторЭлемента = Прав(Команда.Имя, 32);
	Контекст = Новый Структура;
	Контекст.Вставить(""ИдентификаторЭлемента"", ИдентификаторЭлемента);
	Обработчик = Новый ОписаниеОповещения(""ПослеВыбораВидаСравнения"", ЭтотОбъект, Контекст);
	ОтчетыКлиент.ИзменитьВидСравнения(ЭтотОбъект, ИдентификаторЭлемента, Обработчик);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораВидаСравнения(ВидСравнения, Контекст) Экспорт
	Если ВидСравнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить(""ИмяСобытия"", ""ИзменитьВидСравнения"");
	ПараметрыЗаполнения.Вставить(""ПользовательскиеНастройкиМодифицированы"", Истина);
	БыстрыеНастройкиЗаполнитьКлиент(ПараметрыЗаполнения);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьУсловияОтборов(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""НастройкиОтчета"", НастройкиОтчета);
	ПараметрыФормы.Вставить(""КомпоновщикНастроек"", Отчет.КомпоновщикНастроек);
	ПараметрыФормы.Вставить(""ТолькоБыстрые"", Истина);
	Обработчик = Новый ОписаниеОповещения(""ИзменитьУсловияОтборовЗавершение"", ЭтотОбъект);
	ОткрытьФорму(""ХранилищеНастроек.ХранилищеВариантовОтчетов.Форма.УсловияОтборовОтчета"", ПараметрыФормы, ЭтотОбъект, Истина, , , Обработчик);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьУсловияОтборовЗавершение(ВыборПользователя, Контекст) Экспорт
	Если ВыборПользователя = Неопределено
		Или ВыборПользователя = КодВозвратаДиалога.Отмена
		Или ВыборПользователя.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить(""ИмяСобытия"", ""ИзменитьУсловияОтборов"");
	ПараметрыЗаполнения.Вставить(""ПользовательскиеНастройкиМодифицированы"", Истина);
	ПараметрыЗаполнения.Вставить(""УсловияОтборов"", ВыборПользователя);
	БыстрыеНастройкиЗаполнитьКлиент(ПараметрыЗаполнения);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура ФоновоеЗаданиеПроверитьНаКлиенте()
	Задание = ФоновоеЗаданиеПроверитьНаСервере();
	Если Задание.Выполняется Тогда
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
		ПодключитьОбработчикОжидания(""ФоновоеЗаданиеПроверитьНаКлиенте"", ПараметрыОбработчика.ТекущийИнтервал, Истина);
	Иначе
		Если ОтчетСформирован Тогда
			ПоказатьОповещениеПользователя(НСтр(""ru = 'Отчет сформирован'""), , Заголовок);
		Иначе
			ПоказатьОповещениеПользователя(НСтр(""ru = 'Отчет не сформирован'""), , Заголовок);
		КонецЕсли;
		ПослеФормированияНаКлиенте();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочтеПослеДиалогаСформировать(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПеременныеКлиента.Вставить(""ОтправитьПослеФормирования"", Истина);
		Сформировать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать()
	ПередФормированиемНаКлиенте();
	ТребуетсяОбработчик = ФоновоеЗаданиеЗапустить(ПеременныеКлиента.ФормированиеПриОткрытии, НастройкиОтчета.Внешний Или НастройкиОтчета.Безопасный);
	Если ТребуетсяОбработчик Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
		ПодключитьОбработчикОжидания(""ФоновоеЗаданиеПроверитьНаКлиенте"", 1, Истина);
	Иначе
		ПослеФормированияНаКлиенте();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередФормированиемНаКлиенте()
	ОтчетСформирован = Ложь;
	ПеременныеКлиента.Вставить(""ВыполнятьЗамеры"", НастройкиОтчета.ВыполнятьЗамеры И ЗначениеЗаполнено(НастройкиОтчета.КлючЗамеров));
	Если ПеременныеКлиента.ВыполнятьЗамеры Тогда
		ВариантыОтчетовКлиентСервер.ДополнитьСтруктуруКлючом(ПеременныеКлиента, ""МодульОценкаПроизводительностиКлиент"");
		ВариантыОтчетовКлиентСервер.ДополнитьСтруктуруКлючом(ПеременныеКлиента, ""ИдентификаторЗамера"");
		Комментарий = НастройкиОтчета.ПрефиксЗамеров + ""; "" + НСтр(""ru = 'Непосредственно:'"") + "" "" + Строка(ПеременныеКлиента.Непосредственно);
		ПеременныеКлиента.МодульОценкаПроизводительностиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(""ОценкаПроизводительностиКлиент"");
		ПеременныеКлиента.ИдентификаторЗамера = ПеременныеКлиента.МодульОценкаПроизводительностиКлиент.НачатьЗамерВремени(
			Ложь,
			НастройкиОтчета.КлючЗамеров + "".Формирование"");
		ПеременныеКлиента.МодульОценкаПроизводительностиКлиент.УстановитьКомментарийЗамера(ПеременныеКлиента.ИдентификаторЗамера, Комментарий);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеФормированияНаКлиенте()
	ОтключитьОбработчикОжидания(""ФоновоеЗаданиеПроверитьНаКлиенте"");
	ПеременныеКлиента.ФормированиеПриОткрытии = Ложь;
	Если ПеременныеКлиента.ВыполнятьЗамеры Тогда
		ПеременныеКлиента.МодульОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(ПеременныеКлиента.ИдентификаторЗамера);
	КонецЕсли;
	ОтправитьПослеФормирования = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПеременныеКлиента, ""ОтправитьПослеФормирования"");
	Если ОтправитьПослеФормирования = Истина Тогда
		ПеременныеКлиента.ОтправитьПослеФормирования = Ложь;
		Если ОтчетСформирован Тогда
			ПоказатьДиалогОтправкиПоЭлектроннойПочте();
		КонецЕсли;
	КонецЕсли;
	ПоказатьРезультатЗаполненияНастроек();
	ОбновитьОтображениеДанных(); // Для платформы.
	ОтчетыКлиентПереопределяемый.ПослеФормированияНаКлиенте(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогОтправкиПоЭлектроннойПочте()
	ТабличныеДокументы = Новый СписокЗначений;
	ТабличныеДокументы.Добавить(ОтчетТабличныйДокумент, ОтчетНаименованиеТекущегоВарианта);
	
	ЗаголовокСохранения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru = 'Отправка отчета """"%1"""" по почте'""), ОтчетНаименованиеТекущегоВарианта);
	
	ПараметрыОтправки = Новый Структура(""Тема"", ОтчетНаименованиеТекущегоВарианта);
	
	МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(""РаботаСПочтовымиСообщениямиКлиент"");
	МодульРаботаСПочтовымиСообщениямиКлиент.ОтправитьТабличныеДокументы(ТабличныеДокументы, ЗаголовокСохранения, ПараметрыОтправки);
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьДоступностьЕслиТребуется()
	Если ВариантыПанелиКлючТекущегоВарианта <> "" - "" Тогда // Изменения уже применены
		Возврат;
	КонецЕсли;
	ВидимостьДоступностьКорректность("""");
КонецПроцедуры

&НаКлиенте
Функция НайтиПользовательскуюНастройкуЭлемента(ИмяИлиИдентификаторЭлемента) Экспорт
	// Для пользовательских настроек хранятся идентификаторы компоновки данных,
	//  поскольку они не могут храниться по ссылке (происходит копирование значения).
	Если СтрДлина(ИмяИлиИдентификаторЭлемента) = 32 Тогда
		ИдентификаторЭлемента = ИмяИлиИдентификаторЭлемента;
	Иначе
		ИдентификаторЭлемента = Прав(ИмяИлиИдентификаторЭлемента, 32);
	КонецЕсли;
	ИдентификаторКД = БыстрыйПоискПользовательскихНастроек.Получить(ИдентификаторЭлемента);
	Если ИдентификаторКД = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьОбъектПоИдентификатору(ИдентификаторКД);
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция НайтиДополнительныеНастройкиЭлемента(ИдентификаторЭлемента) Экспорт
	// Для пользовательских настроек хранятся идентификаторы компоновки данных,
	//  поскольку они не могут храниться по ссылке (происходит копирование значения).
	ВсеДополнительныеНастройки = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства, ""ЭлементыФормы"");
	Если ВсеДополнительныеНастройки = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат ВсеДополнительныеНастройки[ИдентификаторЭлемента];
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура БыстрыеНастройкиЗаполнитьКлиент(ПараметрыЗаполнения)
	Если ПараметрыЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	БыстрыеНастройкиЗаполнить(ПараметрыЗаполнения);
	ПоказатьРезультатЗаполненияНастроек();
	Если ПараметрыЗаполнения.Свойство(""Переформировать"") И ПараметрыЗаполнения.Переформировать Тогда
		ОчиститьСообщения();
		Сформировать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРезультатЗаполненияНастроек()
	Если ТипЗнч(РезультатЗаполненияНастроек) <> Тип(""Структура"") Тогда
		Возврат;
	КонецЕсли;
	
	// Для платформы (переопределение доступных значений на клиенте).
	СвоиСпискиВыбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатЗаполненияНастроек, ""СвоиСпискиВыбора"");
	Если ТипЗнч(СвоиСпискиВыбора) = Тип(""Массив"") Тогда
		Для Каждого ИдентификаторЭлемента Из СвоиСпискиВыбора Цикл
			НастройкаВарианта = НайтиНастройкуВарианта(ЭтотОбъект, ИдентификаторЭлемента);
			Если НастройкаВарианта = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДополнительныеНастройки = НайтиДополнительныеНастройкиЭлемента(ИдентификаторЭлемента);
			Если ДополнительныеНастройки = Неопределено
				Или ТипЗнч(ДополнительныеНастройки.ЗначенияДляВыбора) <> Тип(""СписокЗначений"") Тогда
				Продолжить;
			КонецЕсли;
			Тип = ТипЗнч(НастройкаВарианта.ЭлементКД);
			Если Тип = Тип(""ЗначениеПараметраНастроекКомпоновкиДанных"") Тогда
				ДоступныеПараметры = НастройкаВарианта.УзелКД.ДоступныеПараметры;
				Если ДоступныеПараметры = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ДоступнаяНастройкаКД = ДоступныеПараметры.НайтиПараметр(НастройкаВарианта.ЭлементКД.Параметр);
			ИначеЕсли Тип = Тип(""ЭлементОтбораКомпоновкиДанных"") Тогда
				ДоступныеПоляОтбора = НастройкаВарианта.УзелКД.ДоступныеПоляОтбора;
				Если ДоступныеПоляОтбора = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ДоступнаяНастройкаКД = ДоступныеПоляОтбора.НайтиПоле(НастройкаВарианта.ЭлементКД.ЛевоеЗначение);
			КонецЕсли;
			Если ДоступнаяНастройкаКД = Неопределено
				Или ТипЗнч(ДоступнаяНастройкаКД.ДоступныеЗначения) <> Тип(""СписокЗначений"") Тогда
				Продолжить;
			КонецЕсли;
			Попытка
				ДоступнаяНастройкаКД.ДоступныеЗначения.Очистить();
				Для Каждого Элемент Из ДополнительныеНастройки.ЗначенияДляВыбора Цикл
					ЗаполнитьЗначенияСвойств(ДоступнаяНастройкаКД.ДоступныеЗначения.Добавить(), Элемент);
				КонецЦикла;
			Исключение
				Продолжить;
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	РезультатЗаполненияНастроек.Очистить();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Клиент или сервер

&НаКлиентеНаСервереБезКонтекста
Функция НайтиНастройкуВарианта(ЭтотОбъект, ИдентификаторЭлемента)
	ПоискНастройкиВарианта = ЭтотОбъект.БыстрыйПоискНастроекВарианта.Получить(ИдентификаторЭлемента);
	Если ПоискНастройкиВарианта = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	КорневойУзелКД = ЭтотОбъект.Отчет.КомпоновщикНастроек.Настройки.ПолучитьОбъектПоИдентификатору(ПоискНастройкиВарианта.ИдентификаторУзлаКД);
	Результат = Новый Структура(""УзелКД, ЭлементКД"");
	Результат.УзелКД = КорневойУзелКД[ПоискНастройкиВарианта.ИмяКоллекции];
	Результат.ЭлементКД = Результат.УзелКД.ПолучитьОбъектПоИдентификатору(ПоискНастройкиВарианта.ИдентификаторЭлементаКД);
	Возврат Результат;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Процедура ВидимостьДоступностьКорректность(Изменения = """")
	ПоказыватьКомандыВариантовОтчетов = РежимВариантаОтчета И НастройкиОтчета.РазрешеноМенятьВарианты;
	
	Если Изменения = """" Тогда
		Если Не РежимВариантаОтчета Тогда
			Элементы.ИзменитьУсловияОтборов.Видимость = Ложь;
		КонецЕсли;
		
		// Вычисление параметров отображения.
		ЕстьНастройки = ЕстьБыстрыеНастройки Или ЕстьОбычныеНастройки;
		
		// Применение параметров отображения.
		Элементы.ВсеНастройки.Видимость = ПоказыватьКомандыВариантовОтчетов Или ЕстьОбычныеНастройки;
		Элементы.ГруппаВариантыОтчета.Видимость = ПоказыватьКомандыВариантовОтчетов;
		Элементы.ИзменитьВариант.Видимость      = ПоказыватьКомандыВариантовОтчетов;
		Элементы.ВыбратьВариант.Видимость       = ПоказыватьКомандыВариантовОтчетов;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			""СохранитьВариант"",
			""Видимость"",
			ПоказыватьКомандыВариантовОтчетов); // Для платформы (кнопка исчезает если команда недоступна по правам).
		Элементы.ГруппаПользовательскиеНастройки.Видимость = ПоказыватьКомандыВариантовОтчетов И ЕстьНастройки;
	КонецЕсли;
	
	// Команды выбора вариантов.
	Если ВариантыПанелиКлючТекущегоВарианта <> КлючТекущегоВарианта Тогда
		ВариантыПанелиКлючТекущегоВарианта = КлючТекущегоВарианта;
		
		Если ПоказыватьКомандыВариантовОтчетов Тогда
			ЗаполнитьКомандыВыбораВариантов();
		КонецЕсли;
		
		Если ПравоВывода Тогда
			Уникальность = НастройкиОтчета.ПолноеИмя;
			Если ЗначениеЗаполнено(КлючТекущегоВарианта) Тогда
				Уникальность = Уникальность + ""/КлючВарианта."" + КлючТекущегоВарианта;
			КонецЕсли;
			
			КлючСохраненияПоложенияОкна = Уникальность;
			
			НастройкиОтчета.Печать.Вставить(""КлючПараметровПечати"", Уникальность);
			НастройкиПечатиВосстановить();
		КонецЕсли;
		
		НавигационнаяСсылка = """";
		Если ЗначениеЗаполнено(НастройкиОтчета.ВариантСсылка)
			И Не НастройкиОтчета.Внешний
			И Не НастройкиОтчета.Контекстный Тогда
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(НастройкиОтчета.ВариантСсылка);
		КонецЕсли;
	КонецЕсли;
	
	// Заголовок.
	ОтчетНаименованиеТекущегоВарианта = СокрЛП(ОтчетНаименованиеТекущегоВарианта);
	Если ЗначениеЗаполнено(ОтчетНаименованиеТекущегоВарианта) Тогда
		Заголовок = ОтчетНаименованиеТекущегоВарианта;
	Иначе
		Заголовок = НастройкиОтчета.Наименование;
	КонецЕсли;
	Если РежимРасшифровки Тогда
		Заголовок = Заголовок + "" ("" + НСтр(""ru = 'Расшифровка'"") + "")"";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция БыстрыеНастройкиЗаполнить(Знач ПараметрыКлиента)
	// Вставка значений по умолчанию для обязательных ключей параметров заполнения.
	ПараметрыЗаполнения = БыстрыеНастройкиДозаполнитьПараметры(ПараметрыКлиента);
	
	// Вызов переопределяемого модуля.
	Если НастройкиОтчета.События.ПередЗаполнениемПанелиБыстрыхНастроек Тогда
		ОтчетОбъект = ОтчетыСервер.ОтчетОбъект(ПараметрыЗаполнения.ОтчетОбъектИлиПолноеИмя);
		ОтчетОбъект.ПередЗаполнениемПанелиБыстрыхНастроек(ЭтотОбъект, ПараметрыЗаполнения);
	КонецЕсли;
	
	// Запись новых настроек варианта и пользовательских настроек в компоновщик.
	БыстрыеНастройкиЗагрузитьНастройкиВКомпоновщик(ПараметрыЗаполнения);
	
	// Получение информации из КД.
	УсловияВывода = Новый Структура;
	УсловияВывода.Вставить(""ТолькоПользовательские"", Истина);
	УсловияВывода.Вставить(""ТолькоБыстрые"",          Истина);
	УсловияВывода.Вставить(""ИдентификаторТекущегоУзлаКД"", Неопределено);
	Информация = ОтчетыСервер.РасширеннаяИнформацияОНастройках(
		Отчет.КомпоновщикНастроек,
		НастройкиОтчета,
		ПараметрыЗаполнения.ОтчетОбъектИлиПолноеИмя,
		УсловияВывода);
	ЕстьБыстрыеНастройки = Информация.ЕстьБыстрыеНастройки;
	ЕстьОбычныеНастройки = Информация.ЕстьОбычныеНастройки;
	
	// Удаление элементов старых настроек.
	БыстрыеНастройкиУдалитьСтарыеЭлементыИКоманды(ПараметрыЗаполнения);
	
	// Добавление элементов актуальных настроек и загрузка значений.
	БыстрыеНастройкиСоздатьЭлементыУправленияИЗагрузитьЗначения(ПараметрыЗаполнения, Информация);
	
	// Связи.
	ЗарегистрироватьОтключаемыеСвязи(Информация);
	
	// Стандартные периоды.
	НастройкиОтчета.Вставить(""СтандартныеПериоды"", Новый Массив);
	СтандартныеПериоды = Информация.ПользовательскиеНастройки.НайтиСтроки(Новый Структура(""ТипЭлементов"", ""СтандартныйПериод""));
	Для Каждого СвойстваНастройки Из СтандартныеПериоды Цикл
		НастройкиОтчета.СтандартныеПериоды.Добавить(СвойстваНастройки.ИдентификаторКД);
	КонецЦикла;
	
	// Обработка дополнительных настроек.
	ПослеИзмененияКлючевыхСостояний(ПараметрыЗаполнения);
	
	// Заголовок, видимость/доступность элементов, параметры печати и окна.
	ВидимостьДоступностьКорректность("""");
	
	// Вызов переопределяемого модуля.
	Если НастройкиОтчета.События.ПослеЗаполненияПанелиБыстрыхНастроек Тогда
		ОтчетОбъект = ОтчетыСервер.ОтчетОбъект(ПараметрыЗаполнения.ОтчетОбъектИлиПолноеИмя);
		ОтчетОбъект.ПослеЗаполненияПанелиБыстрыхНастроек(ЭтотОбъект, ПараметрыЗаполнения);
	КонецЕсли;
	
	Если НастройкиОтчета.Свойство(""ОтчетОбъект"") Тогда
		НастройкиОтчета.Удалить(""ОтчетОбъект"");
	КонецЕсли;
	
	РезультатЗаполненияНастроек = ПараметрыЗаполнения.Результат;
	
	// Очистка цикличных ссылок.
	Информация.ДеревоВарианта.Колонки.Очистить();
	Информация.НастройкиВарианта.Колонки.Очистить();
	Информация.ПользовательскиеНастройки.Колонки.Очистить();
КонецФункции

&НаСервере
Функция ФоновоеЗаданиеЗапустить(Знач ФормированиеПриОткрытии, Непосредственно)
	Если ФоновоеЗаданиеИдентификатор <> Неопределено Тогда
		ФоновоеЗаданиеОтменить(ФоновоеЗаданиеИдентификатор);
		ФоновоеЗаданиеИдентификатор = Неопределено;
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() Тогда
		Если ФормированиеПриОткрытии Тогда
			ТекстОшибки = """";
			Сообщения = ПолучитьСообщенияПользователю(Истина);
			Для Каждого Сообщение Из Сообщения Цикл
				ТекстОшибки = ТекстОшибки + ?(ТекстОшибки = """", """", "";"" + Символы.ПС + Символы.ПС) + Сообщение.Текст;
			КонецЦикла;
			ПоказатьОшибкиФормирования(ТекстОшибки);
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	
	// Запуск фонового задания
	ПараметрыФормированияОтчета = Новый Структура;
	ПараметрыФормированияОтчета.Вставить(""СсылкаОтчета"",   НастройкиОтчета.ОтчетСсылка);
	ПараметрыФормированияОтчета.Вставить(""СсылкаВарианта"", НастройкиОтчета.ВариантСсылка);
	ПараметрыФормированияОтчета.Вставить(""КлючВарианта"",   КлючТекущегоВарианта);
	ПараметрыФормированияОтчета.Вставить(""НастройкиКД"",                 Отчет.КомпоновщикНастроек.Настройки);
	ПараметрыФормированияОтчета.Вставить(""ФиксированныеНастройкиКД"",    Отчет.КомпоновщикНастроек.ФиксированныеНастройки);
	ПараметрыФормированияОтчета.Вставить(""ПользовательскиеНастройкиКД"", Отчет.КомпоновщикНастроек.ПользовательскиеНастройки);
	ПараметрыФормированияОтчета.Вставить(""СхемаМодифицирована"", НастройкиОтчета.СхемаМодифицирована);
	ПараметрыФормированияОтчета.Вставить(""КлючСхемы"",           НастройкиОтчета.КлючСхемы);
	
	Если НастройкиОтчета.ВыполнятьЗамеры И ЗначениеЗаполнено(НастройкиОтчета.КлючЗамеров) Тогда
		Разрезы = Новый Структура;
		Разрезы.Вставить(""ИмяОтчета"",            СтрРазделить(НастройкиОтчета.ПолноеИмя, ""."")[1]);
		Разрезы.Вставить(""ИмяИсходногоВарианта"", НастройкиОтчета.ИмяИсходногоВарианта);
		Разрезы.Вставить(""Внешний"",          Число(НастройкиОтчета.Внешний));
		Разрезы.Вставить(""Пользовательский"", Число(НастройкиОтчета.Пользовательский));
		Разрезы.Вставить(""Расшифровка"",      Число(РежимРасшифровки));
		Разрезы.Вставить(""Модифицирован"",    Число(ВариантМодифицирован));
		
		Если НастройкиОтчета.Свойство(""СтандартныеПериоды"") Тогда
			Для Каждого ИдентификаторКД Из НастройкиОтчета.СтандартныеПериоды Цикл
				ПользовательскаяНастройкаКД = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьОбъектПоИдентификатору(ИдентификаторКД);
				Если ТипЗнч(ПользовательскаяНастройкаКД) = Тип(""ЭлементОтбораКомпоновкиДанных"") Тогда
					Значение = ПользовательскаяНастройкаКД.ПравоеЗначение;
				ИначеЕсли ТипЗнч(ПользовательскаяНастройкаКД) = Тип(""ЗначениеПараметраНастроекКомпоновкиДанных"") Тогда
					Значение = ПользовательскаяНастройкаКД.Значение;
				Иначе
					Продолжить;
				КонецЕсли;
				Если ПользовательскаяНастройкаКД.Использование И ТипЗнч(Значение) = Тип(""СтандартныйПериод"") Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Разрезы, ОтчетыСервер.АнализПериода(Значение), Истина);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыФормированияОтчета.Вставить(""ИмяКлючевойОперации"", НастройкиОтчета.КлючЗамеров + "".Формирование"");
		ПараметрыФормированияОтчета.Вставить(""КомментарийКлючевойОперации"", НРег(ВариантыОтчетовКлиентСервер.СтруктураВСтроку(Разрезы, ""="", ""/"")));
	КонецЕсли;
	
	Если Непосредственно Тогда
		Если НастройкиОтчета.СхемаМодифицирована Тогда
			ПараметрыФормированияОтчета.Вставить(""АдресСхемы"", НастройкиОтчета.АдресСхемы);
		КонецЕсли;
		РезультатФоновогоЗадания = Новый Структура(""Статус, ИдентификаторЗадания, АдресРезультата, КраткоеПредставлениеОшибки"");
		РезультатФоновогоЗадания.АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		ПараметрыФормированияОтчета.Вставить(""Объект"", РеквизитФормыВЗначение(""Отчет""));
		ПараметрыФормированияОтчета.Вставить(""ПолноеИмя"", НастройкиОтчета.ПолноеИмя);
		Попытка
			ВариантыОтчетов.СформироватьОтчетВФоне(ПараметрыФормированияОтчета, РезультатФоновогоЗадания.АдресРезультата);
			РезультатФоновогоЗадания.Статус = ""Выполнено"";
		Исключение
			РезультатФоновогоЗадания.Статус = ""Ошибка"";
			РезультатФоновогоЗадания.КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
	Иначе
		Если НастройкиОтчета.СхемаМодифицирована Тогда
			ПараметрыФормированияОтчета.Вставить(""СхемаКД"", ПолучитьИзВременногоХранилища(НастройкиОтчета.АдресСхемы));
		КонецЕсли;
		ПараметрыЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
		ПараметрыЗапуска.НаименованиеФоновогоЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр(""ru = 'Выполнение отчета: %1'""),
			СтрРазделить(НастройкиОтчета.ПолноеИмя, ""."")[1]);
		ПараметрыЗапуска.ОжидатьЗавершение = Ложь;
		РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(
			""ВариантыОтчетов.СформироватьОтчетВФоне"",
			ПараметрыФормированияОтчета,
			ПараметрыЗапуска);
	КонецЕсли;
	
	Если РезультатФоновогоЗадания.Статус = ""Ошибка"" Тогда
		ПоказатьОшибкиФормирования(РезультатФоновогоЗадания.КраткоеПредставлениеОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	ФоновоеЗаданиеИдентификатор  = РезультатФоновогоЗадания.ИдентификаторЗадания;
	ФоновоеЗаданиеАдресХранилища = РезультатФоновогоЗадания.АдресРезультата;
	
	Если РезультатФоновогоЗадания.Статус = ""Выполнено"" Тогда
		ФоновоеЗаданиеЗагрузитьРезультат();
		ЗаданиеЗапущено = Ложь;
	Иначе
		ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
		ОтображениеСостояния.Видимость                      = Истина;
		ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
		ОтображениеСостояния.Картинка                       = БиблиотекаКартинок.ДлительнаяОперация48;
		ОтображениеСостояния.Текст                          = НСтр(""ru = 'Отчет формируется...'"");
		
		ЗаданиеЗапущено = Истина;
	КонецЕсли;
	
	Возврат ЗаданиеЗапущено;
КонецФункции

&НаСервере
Функция ФоновоеЗаданиеПроверитьНаСервере()
	Задание = НайтиЗаданиеСлужебный(ФоновоеЗаданиеИдентификатор);
	Если Не Задание.Выполняется Тогда
		Если Задание.Успех Тогда
			ФоновоеЗаданиеЗагрузитьРезультат();
		Иначе
			ПоказатьОшибкиФормирования(Задание.Ошибка);
		КонецЕсли;
	КонецЕсли;
	Задание.Удалить(""Ошибка"");
	Возврат Задание;
КонецФункции

&НаСервере
Функция НайтиЗаданиеСлужебный(Знач Идентификатор)
	// Считывает состояние фонового задания по переданному идентификатору.
	//
	// Параметры:
	//   Идентификатор - УникальныйИдентификатор - Идентификатор фонового задания.
	//
	// Возвращаемое значение:
	//   Неопределено - Задание не найдено.
	//   Структура - Сведения о задании.
	//       * Выполняется - Булево - Истина когда фоновое задание еще выполняется.
	//       * Успешно     - Булево - Истина когда сеанс фонового задания завершился без ошибок.
	//       * Ошибка      - Строка, ИнформацияОбОшибке, Неопределено - Описание ошибки.
	//
	Результат = Новый Структура(""Выполняется, Успех, Ошибка"", Ложь, Ложь, Неопределено);
	Если Идентификатор = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	Если Задание = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Результат.Выполняется = Истина;
	Иначе
		Результат.Выполняется = Ложь;
		Если Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
			Результат.Успех = Истина;
		Иначе
			Результат.Успех = Ложь;
			Результат.Ошибка = Задание.ИнформацияОбОшибке;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура ФоновоеЗаданиеОтменить(ФоновоеЗаданиеИдентификатор)
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ФоновоеЗаданиеИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьВариант(КлючВарианта)
	Если Не РежимРасшифровки Тогда
		// Сохранение текущих пользовательских настроек.
		ОбщегоНазначения.ХранилищеСистемныхНастроекСохранить(
			НастройкиОтчета.ПолноеИмя + ""/"" + КлючТекущегоВарианта + ""/ТекущиеПользовательскиеНастройки"",
			"""",
			Отчет.КомпоновщикНастроек.ПользовательскиеНастройки);
	КонецЕсли;
	РежимРасшифровки = Ложь;
	ВариантМодифицирован = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	НастройкиОтчета.ПрочитатьФлажокФормироватьСразуИзПользовательскихНастроек = Истина;
	НастройкиОтчета.Удалить(""ФормаНастроекРасширенныйРежим"");
	// Загрузка нового варианта.
	УстановитьТекущийВариант(КлючВарианта);
	// Переключение состояния.
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость = Истина;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Картинка  = БиблиотекаКартинок.Информация32;
	ОтображениеСостояния.Текст     = НСтр(""ru = 'Выбран другой вариант отчета. Нажмите """"Сформировать"""" для получения отчета.'"");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Функция БыстрыеНастройкиДозаполнитьПараметры(ПараметрыКлиента)
	ПараметрыЗаполнения = Новый Структура;
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыЗаполнения, ПараметрыКлиента, Истина);
	Если Не ПараметрыЗаполнения.Свойство(""ИмяСобытия"") Тогда
		ПараметрыЗаполнения.Вставить(""ИмяСобытия"", """");
	КонецЕсли;
	Если Не ПараметрыЗаполнения.Свойство(""ВариантМодифицирован"") Тогда
		ПараметрыЗаполнения.Вставить(""ВариантМодифицирован"", Ложь);
	КонецЕсли;
	Если Не ПараметрыЗаполнения.Свойство(""ПользовательскиеНастройкиМодифицированы"") Тогда
		ПараметрыЗаполнения.Вставить(""ПользовательскиеНастройкиМодифицированы"", Ложь);
	КонецЕсли;
	Если Не ПараметрыЗаполнения.Свойство(""Результат"") Тогда
		ПараметрыЗаполнения.Вставить(""Результат"", Новый Структура);
	КонецЕсли;
	
	ПараметрыЗаполнения.Вставить(""ОтчетОбъектИлиПолноеИмя"", НастройкиОтчета.ПолноеИмя);
	Если НастройкиОтчета.События.ПередЗаполнениемПанелиБыстрыхНастроек
		Или НастройкиОтчета.События.ПослеЗаполненияПанелиБыстрыхНастроек
		Или НастройкиОтчета.События.ПередЗагрузкойНастроекВКомпоновщик Тогда
		ПараметрыЗаполнения.ОтчетОбъектИлиПолноеИмя = РеквизитФормыВЗначение(""Отчет"");
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
КонецФункции

&НаСервере
Процедура БыстрыеНастройкиЗагрузитьНастройкиВКомпоновщик(ПараметрыЗаполнения)
	
	НовыеНастройкиКД = Неопределено;
	НовыеПользовательскиеНастройкиКД = Неопределено;
	Если ПараметрыЗаполнения.Свойство(""КомпоновщикНастроекКД"") Тогда
		НовыеНастройкиКД = ПараметрыЗаполнения.КомпоновщикНастроекКД.Настройки;
		НовыеПользовательскиеНастройкиКД = ПараметрыЗаполнения.КомпоновщикНастроекКД.ПользовательскиеНастройки;
	Иначе
		Если ПараметрыЗаполнения.Свойство(""НастройкиКД"") Тогда
			НовыеНастройкиКД = ПараметрыЗаполнения.НастройкиКД;
		КонецЕсли;
		Если ПараметрыЗаполнения.Свойство(""ПользовательскиеНастройкиКД"") Тогда
			НовыеПользовательскиеНастройкиКД = ПараметрыЗаполнения.ПользовательскиеНастройкиКД;
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиОтчета.События.ПередЗагрузкойНастроекВКомпоновщик Тогда
		НовыеНастройкиXML = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(НастройкиОтчета, ""НовыеНастройкиXML"");
		Если ТипЗнч(НовыеНастройкиXML) = Тип(""Строка"") Тогда
			Попытка
				НовыеНастройкиКД = ОбщегоНазначения.ЗначениеИзСтрокиXML(НовыеНастройкиXML);
			Исключение
				НовыеНастройкиКД = Неопределено;
			КонецПопытки;
			НастройкиОтчета.НовыеНастройкиXML = Неопределено;
		КонецЕсли;
		
		НовыеПользовательскиеНастройкиXML = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(НастройкиОтчета, ""НовыеПользовательскиеНастройкиXML"");
		Если ТипЗнч(НовыеПользовательскиеНастройкиXML) = Тип(""Строка"") Тогда
			Попытка
				НовыеПользовательскиеНастройкиКД = ОбщегоНазначения.ЗначениеИзСтрокиXML(НовыеПользовательскиеНастройкиXML);
			Исключение
				НовыеПользовательскиеНастройкиКД = Неопределено;
			КонецПопытки;
			НастройкиОтчета.НовыеПользовательскиеНастройкиXML = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	СброситьНастройкиВарианта = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЗаполнения, ""СброситьНастройкиВарианта"", Ложь);
	Если СброситьНастройкиВарианта Тогда
		ЗагрузитьВариант(КлючТекущегоВарианта);
	КонецЕсли;
	
	СброситьПользовательскиеНастройки = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЗаполнения, ""СброситьПользовательскиеНастройки"", Ложь);
	Если СброситьПользовательскиеНастройки Тогда
		НовыеПользовательскиеНастройкиКД = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	КонецЕсли;
	
	Если НастройкиОтчета.События.ПередЗагрузкойНастроекВКомпоновщик Тогда
		ОтчетОбъект = ОтчетыСервер.ОтчетОбъект(ПараметрыЗаполнения.ОтчетОбъектИлиПолноеИмя);
		ОтчетОбъект.ПередЗагрузкойНастроекВКомпоновщик(
			ЭтотОбъект,
			НастройкиОтчета.КлючСхемы,
			КлючТекущегоВарианта,
			НовыеНастройкиКД,
			НовыеПользовательскиеНастройкиКД);
	КонецЕсли;
	
	НастройкиЗагружены = ОтчетыКлиентСервер.ЗагрузитьНастройки(Отчет.КомпоновщикНастроек, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД);
	Если НастройкиЗагружены Тогда
		// Установка фиксированных отборов выполняется через компоновщик, т.к. в нем наиболее полная коллекция настроек.
		// В ПередЗагрузкой в параметрах могут отсутствовать те параметры, настройки которые не переопределялись.
		Если ТипЗнч(ФормаПараметры.Отбор) = Тип(""Структура"") Тогда
			ОтчетыСервер.УстановитьФиксированныеОтборы(ФормаПараметры.Отбор, Отчет.КомпоновщикНастроек.Настройки, НастройкиОтчета);
		КонецЕсли;
		Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить(""КлючВарианта"", КлючТекущегоВарианта);
		Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить(""ВариантНаименование"", ОтчетНаименованиеТекущегоВарианта);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство(""ФормаНастроекРасширенныйРежим"") Тогда
		НастройкиОтчета.Вставить(""ФормаНастроекРасширенныйРежим"", ПараметрыЗаполнения.ФормаНастроекРасширенныйРежим);
	КонецЕсли;
	Если ПараметрыЗаполнения.Свойство(""ФормаНастроекИмяСтраницы"") Тогда
		НастройкиОтчета.Вставить(""ФормаНастроекИмяСтраницы"", ПараметрыЗаполнения.ФормаНастроекИмяСтраницы);
	КонецЕсли;
	
	УсловияОтборов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЗаполнения, ""УсловияОтборов"");
	Если УсловияОтборов <> Неопределено Тогда
		УзелКД = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
		Для Каждого КлючИЗначение Из УсловияОтборов Цикл
			ПользовательскаяНастройкаКД = УзелКД.ПолучитьОбъектПоИдентификатору(КлючИЗначение.Ключ);
			ПользовательскаяНастройкаКД.ВидСравнения = КлючИЗначение.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВариантМодифицирован Тогда
		ВариантМодифицирован = Истина;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПользовательскиеНастройкиМодифицированы Тогда
		ПользовательскиеНастройкиМодифицированы = Истина;
	КонецЕсли;
	
	Если НастройкиОтчета.ПрочитатьФлажокФормироватьСразуИзПользовательскихНастроек Тогда
		НастройкиОтчета.ПрочитатьФлажокФормироватьСразуИзПользовательскихНастроек = Ложь;
		Элементы.ФормироватьСразу.Пометка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства,
			""ФормироватьСразу"",
			НастройкиОтчета.ФормироватьСразу);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура БыстрыеНастройкиУдалитьСтарыеЭлементыИКоманды(ПараметрыЗаполнения)
	// Удаление элементов.
	УдаляемыеЭлементы = Новый Массив;
	ДобавитьПодчиненныеЭлементы(УдаляемыеЭлементы, Элементы.БыстрыеНастройки.ПодчиненныеЭлементы);
	Для Каждого Элемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
	
	// Удаление команд
	УдаляемыеКоманды = Новый Массив;
	Для Каждого Команда Из Команды Цикл
		Если ПостоянныеКоманды.НайтиПоЗначению(Команда.Имя) = Неопределено Тогда
			УдаляемыеКоманды.Добавить(Команда);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Команда Из УдаляемыеКоманды Цикл
		Команды.Удалить(Команда);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьПодчиненныеЭлементы(Куда, Откуда)
	Для Каждого ПодчиненныйЭлемент Из Откуда Цикл
		Если ТипЗнч(ПодчиненныйЭлемент) = Тип(""ГруппаФормы"")
			Или ТипЗнч(ПодчиненныйЭлемент) = Тип(""ТаблицаФормы"") Тогда
			ДобавитьПодчиненныеЭлементы(Куда, ПодчиненныйЭлемент.ПодчиненныеЭлементы);
		КонецЕсли;
		Куда.Добавить(ПодчиненныйЭлемент);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура БыстрыеНастройкиСоздатьЭлементыУправленияИЗагрузитьЗначения(ПараметрыЗаполнения, Информация)
	// Кэши для быстрого поиска с клиента.
	СоответствиеПользовательскихНастроек = Новый Соответствие;
	СоответствиеИменОбъектовМетаданных   = Информация.СоответствиеИменОбъектовМетаданных;
	СоответствиеОтключаемыхСвязей        = Новый Соответствие;
	СоответствиеНастроекВарианта         = Новый Соответствие;
	
	// Удаление реквизитов
	ПараметрыЗаполнения.Вставить(""Реквизиты"", Новый Структура);
	ПараметрыЗаполнения.Реквизиты.Вставить(""Добавляемые"",  Новый Массив);
	ПараметрыЗаполнения.Реквизиты.Вставить(""Удаляемые"",    Новый Массив);
	ПараметрыЗаполнения.Реквизиты.Вставить(""Существующие"", Новый Соответствие);
	ВсеРеквизиты = ПолучитьРеквизиты();
	Для Каждого Реквизит Из ВсеРеквизиты Цикл
		ПолноеИмяРеквизита = Реквизит.Имя + ?(ПустаяСтрока(Реквизит.Путь), """", ""."" + Реквизит.Путь);
		Если ПостоянныеРеквизиты.НайтиПоЗначению(ПолноеИмяРеквизита) = Неопределено Тогда
			ПараметрыЗаполнения.Реквизиты.Существующие.Вставить(ПолноеИмяРеквизита, Реквизит.ТипЗначения);
		КонецЕсли;
	КонецЦикла;
	
	// Локальные переменные для установки значений и свойств после создания реквизитов.
	ДобавленныеПоляВвода          = Новый Структура;
	ДобавленныеСтандартныеПериоды = Новый Массив;
	
	// Структура связей.
	Связи = Информация.Связи;
	
	ИменаОсновныхРеквизитовФормы     = Новый Соответствие;
	ИменаЭлементовДляУстановкиСвязей = Новый Соответствие;
	ИменаФлажковИспользование        = Новый Соответствие;
	НастройкиСВидомСравненияРавно    = Новый Соответствие;
	
	КомпоновщикНастроекКД       = Отчет.КомпоновщикНастроек;
	ПользовательскиеНастройкиКД = КомпоновщикНастроекКД.ПользовательскиеНастройки;
	НастройкиКД                 = КомпоновщикНастроекКД.ПолучитьНастройки();
	
	ДополнительныеНастройкиЭлементов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПользовательскиеНастройкиКД.ДополнительныеСвойства, ""ЭлементыФормы"");
	Если ДополнительныеНастройкиЭлементов = Неопределено Тогда
		ДополнительныеНастройкиЭлементов = Новый Соответствие;
	КонецЕсли;
	
	Режимы = РежимОтображенияЭлементаНастройкиКомпоновкиДанных;
	
	ШаблонНастройки = Новый Структура(""Тип, Подтип, Шаблон, СтрокаДерева,
		|ПользовательскаяНастройкаКД, Идентификатор, НастройкаВариантаКД, ДоступнаяНастройкаКД"");
	ШаблонНастройки.Вставить(""Иерархия"", Ложь);
	ШаблонНастройки.Вставить(""ФлажокИспользование"", Ложь);
	ШаблонНастройки.Вставить(""ВводСписком"", Ложь);
	ШаблонНастройки.Вставить(""ОграничиватьВыборУказаннымиЗначениями"", Ложь);
	ШаблонНастройки = Новый ФиксированнаяСтруктура(ШаблонНастройки);
	
	ГруппыВывода = Новый Структура;
	ГруппыВывода.Вставить(""Быстрые"", Новый Структура(""Порядок, Размер"", Новый Массив, 0));
	
	ЕстьЗагрузкаДанныхИзФайла = ОбщегоНазначения.ПодсистемаСуществует(""СтандартныеПодсистемы.ЗагрузкаДанныхИзФайла"");
	
	ВыводимыеНастройки = Информация.ПользовательскиеНастройки.Скопировать(Новый Структура(""ВыводРазрешен, Быстрая"", Истина, Истина));
	ВыводимыеНастройки.Сортировать(""ИндексВКоллекции Возр"");
	
	Прочее = Новый Структура;
	Прочее.Вставить(""Связи"",       Связи);
	Прочее.Вставить(""ОтчетОбъект"", Неопределено);
	Прочее.Вставить(""ПараметрыЗаполнения"",       ПараметрыЗаполнения);
	Прочее.Вставить(""ПутьККомпоновщику"",         ""Отчет.КомпоновщикНастроек"");
	Прочее.Вставить(""ЕстьЗагрузкаДанныхИзФайла"", ЕстьЗагрузкаДанныхИзФайла);
	Прочее.Вставить(""ДополнительныеНастройкиЭлементов"",   ДополнительныеНастройкиЭлементов);
	Прочее.Вставить(""ИменаОсновныхРеквизитовФормы"",       ИменаОсновныхРеквизитовФормы);
	Прочее.Вставить(""ИменаЭлементовДляУстановкиСвязей"",   ИменаЭлементовДляУстановкиСвязей);
	Прочее.Вставить(""СоответствиеИменОбъектовМетаданных"", СоответствиеИменОбъектовМетаданных);
	Прочее.Вставить(""ДобавленныеПоляВвода"",          ДобавленныеПоляВвода);
	Прочее.Вставить(""ДобавленныеСтандартныеПериоды"", ДобавленныеСтандартныеПериоды);
	Прочее.Вставить(""ДобавленныеСпискиЗначений"",     Неопределено);
	Прочее.Вставить(""ЕстьОтборыСУсловиями"", Ложь);
	
	ГруппаВывода = ГруппыВывода.Быстрые;
	
	Для Каждого СвойстваНастройки Из ВыводимыеНастройки Цикл
		СоответствиеПользовательскихНастроек.Вставить(СвойстваНастройки.ИдентификаторЭлемента, СвойстваНастройки.ИдентификаторКД);
		
		Если СвойстваНастройки.НастройкаВарианта <> Неопределено Тогда
			ПоискНастройкиВарианта = Новый Структура;
			ПоискНастройкиВарианта.Вставить(""ИдентификаторУзлаКД"",     СвойстваНастройки.СтрокаДерева.ИдентификаторКД);
			ПоискНастройкиВарианта.Вставить(""ИмяКоллекции"",            СвойстваНастройки.НастройкаВарианта.ИмяКоллекции);
			ПоискНастройкиВарианта.Вставить(""ИдентификаторЭлементаКД"", СвойстваНастройки.НастройкаВарианта.ИдентификаторКД);
			СоответствиеНастроекВарианта.Вставить(СвойстваНастройки.ИдентификаторЭлемента, ПоискНастройкиВарианта);
		КонецЕсли;
		
		ОтчетыСервер.ВывестиЭлементыНастройки(ЭтотОбъект, Элементы, СвойстваНастройки, ГруппаВывода, Прочее);
	КонецЦикла;
	
	Элементы.ИзменитьУсловияОтборов.Видимость = Прочее.ЕстьОтборыСУсловиями;
	
	ОтчетыСервер.ВывестиПоПорядку(ЭтотОбъект, ГруппаВывода, Элементы.БыстрыеНастройки, 2, Ложь);
	
	// Удаление старых и добавление новых реквизитов.
	Для Каждого КлючИЗначение Из ПараметрыЗаполнения.Реквизиты.Существующие Цикл
		ПараметрыЗаполнения.Реквизиты.Удаляемые.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;
	ИзменитьРеквизиты(ПараметрыЗаполнения.Реквизиты.Добавляемые, ПараметрыЗаполнения.Реквизиты.Удаляемые);
	
	// Поля ввода (установка значений и связей).
	Для Каждого КлючИЗначение Из ДобавленныеПоляВвода Цикл
		ИмяРеквизита = КлючИЗначение.Ключ;
		ЭтотОбъект[ИмяРеквизита] = КлючИЗначение.Значение;
		Элементы[ИмяРеквизита].ПутьКДанным = ИмяРеквизита;
	КонецЦикла;
	
	// Стандартные периоды (установка значений и связей).
	Для Каждого СвойстваНастройки Из ДобавленныеСтандартныеПериоды Цикл
		Дополнительно = СвойстваНастройки.Дополнительно;
		ЭтотОбъект[Дополнительно.ЗначениеИмя] = СвойстваНастройки.Значение;
		Элементы[Дополнительно.ПериодНачалоИмя].ПутьКДанным    = Дополнительно.ЗначениеИмя + "".ДатаНачала"";
		Элементы[Дополнительно.ПериодОкончаниеИмя].ПутьКДанным = Дополнительно.ЗначениеИмя + "".ДатаОкончания"";
	КонецЦикла;
	
	// Сохранение соответствий для быстрого поиска в данные формы.
	БыстрыйПоискПользовательскихНастроек = Новый ФиксированноеСоответствие(СоответствиеПользовательскихНастроек);
	БыстрыйПоискИменОбъектовМетаданных   = Новый ФиксированноеСоответствие(СоответствиеИменОбъектовМетаданных);
	БыстрыйПоискОтключаемыхСвязей        = Новый ФиксированноеСоответствие(СоответствиеОтключаемыхСвязей);
	БыстрыйПоискНастроекВарианта         = Новый ФиксированноеСоответствие(СоответствиеНастроекВарианта);
	
	ПользовательскиеНастройкиКД.ДополнительныеСвойства.Вставить(""ЭлементыФормы"", ДополнительныеНастройкиЭлементов);
КонецПроцедуры

&НаСервере
Процедура НастройкиПечатиСохранить()
	ЗаполнитьЗначенияСвойств(НастройкиОтчета.Печать, ОтчетТабличныйДокумент);
КонецПроцедуры

&НаСервере
Процедура НастройкиПечатиВосстановить()
	ЗаполнитьЗначенияСвойств(ОтчетТабличныйДокумент, НастройкиОтчета.Печать);
КонецПроцедуры

&НаСервере
Процедура ФоновоеЗаданиеЗагрузитьРезультат()
	
	РезультатФормирования = ПолучитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилища);
	
	УдалитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилища);
	ФоновоеЗаданиеАдресХранилища = Неопределено;
	ФоновоеЗаданиеИдентификатор = Неопределено;
	
	Успех = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатФормирования, ""Успех"");
	Если Успех <> Истина Тогда
		ПоказатьОшибкиФормирования(РезультатФормирования.ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ДанныеЕщеОбновляются = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатФормирования, ""ДанныеЕщеОбновляются"", Ложь);
	Если ДанныеЕщеОбновляются Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ВариантыОтчетов.СообщениеДанныеЕщеОбновляются());
	КонецЕсли;
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость                      = Ложь;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	ОтображениеСостояния.Картинка                       = Новый Картинка;
	ОтображениеСостояния.Текст                          = """";
	
	НастройкиПечатиСохранить();
	ОтчетТабличныйДокумент = РезультатФормирования.ТабличныйДокумент;
	НастройкиПечатиВосстановить();
	
	ОтчетСформирован = Истина;
	
	Если ЗначениеЗаполнено(ОтчетДанныеРасшифровки) И ЭтоАдресВременногоХранилища(ОтчетДанныеРасшифровки) Тогда
		УдалитьИзВременногоХранилища(ОтчетДанныеРасшифровки);
	КонецЕсли;
	ОтчетДанныеРасшифровки = ПоместитьВоВременноеХранилище(РезультатФормирования.Расшифровка, УникальныйИдентификатор);
	
	Если РезультатФормирования.ВариантМодифицирован
		Или РезультатФормирования.ПользовательскиеНастройкиМодифицированы Тогда
		РезультатФормирования.Вставить(""ИмяСобытия"", ""ПослеФормирования"");
		РезультатФормирования.Вставить(""Непосредственно"", Ложь);
		БыстрыеНастройкиЗаполнить(РезультатФормирования);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоказатьОшибкиФормирования(ИнформацияОбОшибке)
	Если ТипЗнч(ИнформацияОбОшибке) = Тип(""ИнформацияОбОшибке"") Тогда
		ОписаниеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		ПодробноеПредставлениеОшибки = НСтр(""ru = 'Ошибка при формировании:'"") + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		Если ПустаяСтрока(ОписаниеОшибки) Тогда
			ОписаниеОшибки = ПодробноеПредставлениеОшибки;
		КонецЕсли;
	Иначе
		ОписаниеОшибки = ИнформацияОбОшибке;
		ПодробноеПредставлениеОшибки = """";
	КонецЕсли;
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость                      = Истина;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Картинка                       = Новый Картинка;
	ОтображениеСостояния.Текст                          = ОписаниеОшибки;
	
	Если Не ПустаяСтрока(ПодробноеПредставлениеОшибки) Тогда
		ВариантыОтчетов.ПредупреждениеПоВарианту(НастройкиОтчета.ВариантСсылка, ПодробноеПредставлениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РекурсивныйАнализНастроекКД(Коллекция, Соответствие)
	Если Коллекция = Неопределено Тогда
		РекурсивныйАнализНастроекКД(Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы, Соответствие);
		РекурсивныйАнализНастроекКД(Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы, Соответствие);
		РекурсивныйАнализНастроекКД(Отчет.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы, Соответствие);
		РекурсивныйАнализНастроекКД(Отчет.КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.Элементы, Соответствие);
	Иначе
		// Регистрация значений включенных отборов и параметров КД, не выведенных в быстрый доступ.
		Для Каждого НастройкаВарианта Из Коллекция Цикл
			// ЭлементОтбораКомпоновкиДанных, ГруппаЭлементовОтбораКомпоновкиДанных,
			// ЗначениеПараметраКомпоновкиДанных, ЗначениеПараметраНастроекКомпоновкиДанных.
			Если ТипЗнч(НастройкаВарианта) = Тип(""ЗначениеПараметраКомпоновкиДанных"") Тогда
				Значение = НастройкаВарианта.Значение;
				Если ЗначениеИлиПолеКомпоновкиДанныхЗаполнено(Значение) Тогда
					ПолеКД = Новый ПолеКомпоновкиДанных(""ПараметрыДанных."" + Строка(НастройкаВарианта.Параметр));
					Соответствие.Вставить(ПолеКД, Значение);
				КонецЕсли;
				РекурсивныйАнализНастроекКД(НастройкаВарианта.ЗначенияВложенныхПараметров, Соответствие);
				Продолжить;
			КонецЕсли;
			
			Если НастройкаВарианта.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ
				И ЗначениеЗаполнено(НастройкаВарианта.ИдентификаторПользовательскойНастройки) Тогда
				Продолжить;
			КонецЕсли;
			Если НастройкаВарианта.Использование <> Истина Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(НастройкаВарианта) = Тип(""ГруппаЭлементовОтбораКомпоновкиДанных"") Тогда
				РекурсивныйАнализНастроекКД(НастройкаВарианта.Элементы, Соответствие);
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(НастройкаВарианта) = Тип(""ЭлементОтбораКомпоновкиДанных"") Тогда
				Значение = НастройкаВарианта.ПравоеЗначение;
				Если ЗначениеИлиПолеКомпоновкиДанныхЗаполнено(Значение) Тогда
					ПолеКД = НастройкаВарианта.ЛевоеЗначение;
					Соответствие.Вставить(ПолеКД, Значение);
				КонецЕсли;
			ИначеЕсли ТипЗнч(НастройкаВарианта) = Тип(""ЗначениеПараметраКомпоновкиДанных"") Тогда
				Значение = НастройкаВарианта.ПравоеЗначение;
				Если ЗначениеИлиПолеКомпоновкиДанныхЗаполнено(Значение) Тогда
					ПолеКД = Новый ПолеКомпоновкиДанных(""ПараметрыДанных."" + Строка(НастройкаВарианта.Параметр));
					Соответствие.Вставить(ПолеКД, Значение);
				КонецЕсли;
				РекурсивныйАнализНастроекКД(НастройкаВарианта.ЗначенияВложенныхПараметров, Соответствие);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗначениеИлиПолеКомпоновкиДанныхЗаполнено(Значение)
	Если ТипЗнч(Значение) = Тип(""ПолеКомпоновкиДанных"") Тогда
		Возврат ЗначениеЗаполнено(Строка(Значение));
	Иначе
		Возврат ЗначениеЗаполнено(Значение);
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗаполнитьКомандыВыбораВариантов()
	ВариантыФормы = РеквизитФормыВЗначение(""ДобавленныеВарианты"");
	ВариантыФормы.Колонки.Добавить(""Найден"", Новый ОписаниеТипов(""Булево""));
	АвторизованныйПользователь = Пользователи.АвторизованныйПользователь();
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить(""Отчеты"", ОтчетыКлиентСервер.ЗначениеВМассив(НастройкиОтчета.ОтчетСсылка));
	ПараметрыПоиска.Вставить(""ПометкаУдаления"", Ложь);
	ПараметрыПоиска.Вставить(""ПолучатьИтоговуюТаблицу"", Истина);
	РезультатПоиска = ВариантыОтчетов.НайтиСсылки(ПараметрыПоиска);
	ТаблицаВариантов = РезультатПоиска.ТаблицаЗначений;
	Если НастройкиОтчета.Внешний Тогда // Добавить предопределенные варианты внешнего отчета в таблицу вариантов.
		Для Каждого ЭлементСписка Из НастройкиОтчета.ПредопределенныеВарианты Цикл
			СтрокаТаблицы = ТаблицаВариантов.Добавить();
			СтрокаТаблицы.Наименование = ЭлементСписка.Представление;
			СтрокаТаблицы.КлючВарианта = ЭлементСписка.Значение;
		КонецЦикла;
	КонецЕсли;
	ТаблицаВариантов.Свернуть(""Ссылка, КлючВарианта, Наименование, Автор, ТолькоДляАвтора"");
	ТаблицаВариантов.Сортировать(""Наименование Возр, КлючВарианта Возр"");
	
	Группа = Элементы.ВариантыОтчета;
	КнопкиГруппы = Группа.ПодчиненныеЭлементы;
	ПоследнийИндекс = ВариантыФормы.Количество() - 1;
	Для Каждого СтрокаТаблицы Из ТаблицаВариантов Цикл
		Если СтрокаТаблицы.ТолькоДляАвтора = Истина
			И СтрокаТаблицы.Автор <> АвторизованныйПользователь Тогда
			Продолжить;
		КонецЕсли;
		Найденные = ВариантыФормы.НайтиСтроки(Новый Структура(""КлючВарианта, Найден"", СтрокаТаблицы.КлючВарианта, Ложь));
		Если Найденные.Количество() = 1 Тогда
			ВариантФормы = Найденные[0];
			ВариантФормы.Найден = Истина;
			Кнопка = Элементы.Найти(ВариантФормы.ИмяКоманды);
			Кнопка.Видимость = Истина;
			Кнопка.Заголовок = СтрокаТаблицы.Наименование;
			Элементы.Переместить(Кнопка, Группа);
		Иначе
			ПоследнийИндекс = ПоследнийИндекс + 1;
			ВариантФормы = ВариантыФормы.Добавить();
			ЗаполнитьЗначенияСвойств(ВариантФормы, СтрокаТаблицы);
			ВариантФормы.Найден = Истина;
			ВариантФормы.ИмяКоманды = ""ВыбратьВариант_"" + Формат(ПоследнийИндекс, ""ЧН=0; ЧГ="");
			
			Команда = Команды.Добавить(ВариантФормы.ИмяКоманды);
			Команда.Действие = ""Подключаемый_ЗагрузитьВариантОтчета"";
			
			Кнопка = Элементы.Добавить(ВариантФормы.ИмяКоманды, Тип(""КнопкаФормы""), Группа);
			Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			Кнопка.ИмяКоманды = ВариантФормы.ИмяКоманды;
			Кнопка.Заголовок = СтрокаТаблицы.Наименование;
			
			ПостоянныеКоманды.Добавить(ВариантФормы.ИмяКоманды);
		КонецЕсли;
		Кнопка.Пометка = (КлючТекущегоВарианта = СтрокаТаблицы.КлючВарианта);
	КонецЦикла;
	
	Найденные = ВариантыФормы.НайтиСтроки(Новый Структура(""Найден"", Ложь));
	Для Каждого ВариантФормы Из Найденные Цикл
		Кнопка = Элементы.Найти(ВариантФормы.ИмяКоманды);
		Кнопка.Видимость = Ложь;
	КонецЦикла;
	
	ВариантыФормы.Колонки.Удалить(""Найден"");
	ЗначениеВРеквизитФормы(ВариантыФормы, ""ДобавленныеВарианты"");
КонецПроцедуры

&НаСервере
Процедура ПослеИзмененияКлючевыхСостояний(ПараметрыЗаполнения)
	Если ПараметрыЗаполнения.ИмяСобытия <> ""ПослеФормирования"" Тогда
		Переформировать = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЗаполнения, ""Переформировать"");
		Если Переформировать = Истина Тогда
			ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
			ОтображениеСостояния.Видимость                      = Истина;
			ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
			ОтображениеСостояния.Картинка                       = БиблиотекаКартинок.ДлительнаяОперация48;
			ОтображениеСостояния.Текст                          = НСтр(""ru = 'Отчет формируется...'"");
		ИначеЕсли ПараметрыЗаполнения.ВариантМодифицирован
			Или ПараметрыЗаполнения.ПользовательскиеНастройкиМодифицированы Тогда
			ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
			ОтображениеСостояния.Видимость = Истина;
			ОтображениеСостояния.Текст     = НСтр(""ru = 'Изменились настройки. Нажмите """"Сформировать"""" для получения отчета.'"");
			Если Переформировать = Неопределено Тогда
				ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
			Иначе
				ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// В безопасном режиме отчеты нельзя сохранить при помощи стандартного диалога,
	// возникающего перед закрытием, поскольку не включается привилегированный режим при доступе к планам обмена.
	Если НастройкиОтчета.Безопасный
		И Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		ВариантМодифицирован = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьОтключаемыеСвязи(Информация)
	ОтключаемыеСвязи.Очистить();
	Для Каждого ОписаниеСвязи Из Информация.ОтключаемыеСвязи Цикл
		Связь = ОтключаемыеСвязи.Добавить();
		ЗаполнитьЗначенияСвойств(Связь, ОписаниеСвязи);
		Связь.ВедущийИдентификаторВФорме     = ОписаниеСвязи.Ведущий.ИдентификаторЭлемента;
		Связь.ПодчиненныйИдентификаторВФорме = ОписаниеСвязи.Подчиненный.ИдентификаторЭлемента;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюОВариантеОтчета()
	Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить(""КлючВарианта"", КлючТекущегоВарианта);
	Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить(""ВариантНаименование"", ОтчетНаименованиеТекущегоВарианта);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	""ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВариантыОтчетов.Ссылка КАК ВариантСсылка,
	|	ВариантыОтчетов.ПредопределенныйВариант.КлючЗамеров КАК КлючЗамеров,
	|	ВариантыОтчетов.ПредопределенныйВариант КАК ПредопределенныйСсылка,
	|	ВЫБОР
	|		КОГДА ВариантыОтчетов.Пользовательский
	|				ИЛИ ВариантыОтчетов.Родитель.КлючВарианта ЕСТЬ NULL 
	|			ТОГДА ВариантыОтчетов.КлючВарианта
	|		ИНАЧЕ ВариантыОтчетов.Родитель.КлючВарианта
	|	КОНЕЦ КАК ИмяИсходногоВарианта,
	|	ВариантыОтчетов.Пользовательский КАК Пользовательский
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет = &Отчет
	|	И ВариантыОтчетов.КлючВарианта = &КлючВарианта"";
	Запрос.УстановитьПараметр(""Отчет"", НастройкиОтчета.ОтчетСсылка);
	Запрос.УстановитьПараметр(""КлючВарианта"", КлючТекущегоВарианта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		НастройкиОтчета.Вставить(""ВариантСсылка"",          Выборка.ВариантСсылка);
		НастройкиОтчета.Вставить(""КлючЗамеров"",            Выборка.КлючЗамеров);
		НастройкиОтчета.Вставить(""ПредопределенныйСсылка"", Выборка.ПредопределенныйСсылка);
		НастройкиОтчета.Вставить(""ИмяИсходногоВарианта"",   ?(Выборка.Пользовательский, Выборка.ИмяИсходногоВарианта, КлючТекущегоВарианта));
		НастройкиОтчета.Вставить(""Пользовательский"",       Выборка.Пользовательский);
	Иначе
		НастройкиОтчета.Вставить(""ВариантСсылка"",          Неопределено);
		НастройкиОтчета.Вставить(""КлючЗамеров"",            Неопределено);
		НастройкиОтчета.Вставить(""ПредопределенныйСсылка"", Неопределено);
		НастройкиОтчета.Вставить(""ИмяИсходногоВарианта"",   Неопределено);
		НастройкиОтчета.Вставить(""Пользовательский"",       Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкаПоддержанияЗапасовНажатие(Элемент)
	
	ОткрытьФорму(""Обработка.НастройкаПоддержанияЗапасов.Форма"");
	
КонецПроцедуры

#КонецОбласти",
{4,25,
{9,
{1},0,"Отчет",
{1,0},
{"Pattern",
{"#",1dd6fdb9-553d-40d4-b2d1-c7fc31f497bb}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ОтчетНаименованиеТекущегоВарианта",
{1,1,
{"ru","Вариант отчета"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ОтчетТабличныйДокумент",
{1,1,
{"ru","Табличный документ - результат формирования отчета"}
},
{"Pattern",
{"#",e603103e-a318-4edc-a014-b1c6cf94d49f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ОтчетДанныеРасшифровки",
{1,1,
{"ru","Отчет данные расшифровки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"РежимРасшифровки",
{1,1,
{"ru","Режим расшифровки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"РежимВариантаОтчета",
{1,1,
{"ru","Режим варианта отчета"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"НастройкиОтчета",
{1,1,
{"ru","Настройки отчета"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{20},0,"ПостоянныеКоманды",
{1,1,
{"ru","Постоянные команды"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{21},0,"ПостоянныеРеквизиты",
{1,1,
{"ru","Постоянные реквизиты"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ФормаПараметры",
{1,1,
{"ru","Форма параметры"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{14},0,"ОтчетСформирован",
{1,1,
{"ru","Отчет сформирован"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ПравоВывода",
{1,1,
{"ru","Право вывода"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{12},0,"ФоновоеЗаданиеАдресХранилища",
{1,1,
{"ru","Фоновое задание адрес хранилища"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{16},0,"ФоновоеЗаданиеИдентификатор",
{1,1,
{"ru","Фоновое задание идентификатор"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{24},0,"РежимРасшифровкиПредставлениеВладельца",
{1,1,
{"ru","Режим расшифровки представление владельца"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{15},0,"БыстрыйПоискПользовательскихНастроек",
{1,1,
{"ru","Быстрый поиск пользовательских настроек"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{28},0,"БыстрыйПоискИменОбъектовМетаданных",
{1,1,
{"ru","Быстрый поиск имен объектов метаданных"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"БыстрыйПоискОтключаемыхСвязей",
{1,1,
{"ru","Быстрый поиск отключаемых связей"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{17},0,"ЕстьБыстрыеНастройки",
{1,1,
{"ru","Есть быстрые настройки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{22},0,"ВариантыПанелиКлючТекущегоВарианта",
{1,1,
{"ru","Варианты панели ключ текущего варианта"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{31},0,"ЕстьОбычныеНастройки",
{1,1,
{"ru","Есть обычные настройки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{26},0,"ДобавленныеВарианты",
{1,1,
{"ru","Добавленные варианты"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,3,
{5,1,0,"Ссылка",
{1,1,
{"ru","Ссылка"}
},
{"Pattern",
{"#",b7ea0510-1c17-417a-b55c-5e6720efe4fd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"КлючВарианта",
{1,1,
{"ru","Ключ варианта"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ИмяКоманды",
{1,1,
{"ru","Имя команды"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{18},0,"ОтключаемыеСвязи",
{1,1,
{"ru","Отключаемые связи"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,7,
{5,1,0,"ТипСвязи",
{1,1,
{"ru","Тип связи"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ВедущийИдентификаторВФорме",
{1,1,
{"ru","Ведущий идентификатор в форме"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ПодчиненныйИдентификаторВФорме",
{1,1,
{"ru","Подчиненный идентификатор в форме"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ВедущийТип",
{1,1,
{"ru","Ведущий тип"}
},
{"Pattern",
{"#",f5c65050-3bbb-11d5-b988-0050bae0a95d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ПодчиненныйТип",
{1,1,
{"ru","Подчиненный тип"}
},
{"Pattern",
{"#",f5c65050-3bbb-11d5-b988-0050bae0a95d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ПодчиненныйИмяПараметра",
{1,1,
{"ru","Подчиненный имя параметра"}
},
{"Pattern",
{"S"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"ПодчиненныйДействие",
{1,1,
{"ru","Подчиненный действие"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{35},0,"БыстрыйПоискНастроекВарианта",
{1,1,
{"ru","Быстрый поиск настроек варианта"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{36},0,"РезультатЗаполненияНастроек",
{1,1,
{"ru","Результат заполнения настроек"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,2,
{0,"Ссылка",
{"Pattern",
{"#",b7ea0510-1c17-417a-b55c-5e6720efe4fd}
},0},
{0,"Отчет",
{"Pattern"},0}
},
{0,11,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВсеНастройки",
{1,1,
{"ru","Настройки..."}
},
{1,1,
{"ru","Все настройки..."}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,942e0303-a3ec-4fe8-887c-5aea8516d424},"",-1,-1,1,0,""},"ВсеНастройки",2,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ИзменитьВариантОтчета",
{1,1,
{"ru","Изменить вариант отчета..."}
},
{1,1,
{"ru","Изменить вариант отчета"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ИзменитьВариантОтчета",3,0,0,
{0,0},1,0,1,0,0},
{8,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НастройкиПоУмолчанию",
{1,1,
{"ru","Стандартные настройки"}
},
{1,1,
{"ru","Настройки по умолчанию"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"НастройкиПоУмолчанию",3,0,0,
{0,0},1,0,1,0,0},
{8,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОтправитьПоЭлектроннойПочте",
{1,1,
{"ru","Отправить сейчас..."}
},
{1,1,
{"ru","Создать новое письмо и прикрепить отчет как вложение"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,f64de21f-5a7c-4a1a-a929-07fc53049f6c},"",-1,-1,0,0,""},"ОтправитьПоЭлектроннойПочте",3,0,0,
{0,0},1,0,1,0,0},
{8,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОтчетСкомпоноватьРезультат",
{1,1,
{"ru","Сформировать"}
},
{1,1,
{"ru","Сформировать отчет"}
},
{0,
{0,
{"B",1},0}
},
{0,116,0},
{4,1,
{0,0ce78048-0196-4f80-a781-9829cdb7f43e},"",-1,-1,1,0,""},"ОтчетСкомпоноватьРезультат",0,0,0,
{0,0},1,0,1,0,0},
{8,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВычислитьСумму",
{1,1,
{"ru","Подсчитать"}
},
{1,1,
{"ru","Вычислить сумму чисел выделенных ячеек"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,9d12d556-fd85-4942-99ba-63073dee5127},"",-1,-1,0,0,""},"ВычислитьСумму",1,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ФормироватьСразу",
{1,1,
{"ru","Формировать сразу"}
},
{1,1,
{"ru","Формировать сразу"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ФормироватьСразу",3,0,0,
{0,0},1,0,1,0,0},
{8,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДругиеОтчеты",
{1,1,
{"ru","Другие отчеты..."}
},
{1,1,
{"ru","Другие отчеты"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,2997e4da-d831-48e4-96e2-c29f9d077302},"",-1,-1,1,0,""},"ДругиеОтчеты",3,0,0,
{0,0},1,0,1,0,0},
{8,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ИзменитьВидСравнения",
{1,1,
{"ru","Изменить вид сравнения"}
},
{1,1,
{"ru","Изменить вид сравнения"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"",3,0,0,
{0,0},1,0,1,0,0},
{8,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыбратьПериод",
{1,1,
{"ru","Выбрать период"}
},
{1,1,
{"ru","Выбрать период"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-1},"",-1,-1,1,0,""},"",3,0,0,
{0,0},1,0,1,0,0},
{8,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ИзменитьУсловияОтборов",
{1,1,
{"ru","Изменить условия отборов..."}
},
{1,1,
{"ru","Изменить условия отборов"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,dcdf2b25-b024-4a89-b2c4-0a2ee43ef623},"",-1,-1,1,0,""},"ИзменитьУсловияОтборов",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}