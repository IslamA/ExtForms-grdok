
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗвукОшибки = Параметры.ЗвукОшибки;
	
	ПараметрыРежима = Новый Структура;
	ПараметрыРежима.Вставить("МожноЗакрытьФорму", Ложь);
	
	Элементы.Страницы.ОтображениеСтраниц           = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыПриемка.ОтображениеСтраниц    = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыОтгрузка.ОтображениеСтраниц   = ОтображениеСтраницФормы.Нет;
	Элементы.СтраницыИнформация.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	ИспользоватьПодключаемоеОборудование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// МеханизмВнешнегоОборудования
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(
		Новый ОписаниеОповещения("НачатьПодключениеОборудованиеПриОткрытииФормыЗавершение", ЭтотОбъект),
		ЭтотОбъект,
		"СканерШтрихкода");
	// Конец МеханизмВнешнегоОборудования
	
	ИмяФайлаWav = КаталогВременныхФайлов() + "error.mp3";
	Файл = Новый Файл(ИмяФайлаWav);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Макет",    "error_mp3");
	ДопПараметры.Вставить("ИмяФайла", ИмяФайлаWav);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаФайлаЗавершение", ЭтотОбъект, ДопПараметры);
	
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
	
	ИмяФайлаExe = КаталогВременныхФайлов() + "cmdmp3win.exe";
	Файл = Новый Файл(ИмяФайлаExe);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Макет",    "cmdmp3win_exe");
	ДопПараметры.Вставить("ИмяФайла", ИмяФайлаExe);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаФайлаЗавершение", ЭтотОбъект, ДопПараметры);
	
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
	СтрокаКомандыЗвук = """" + ИмяФайлаExe + """ """ + ИмяФайлаWav + """";
	ПодключитьОбработчикОжидания("АктивизироватьШтрихкод", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаФайлаЗавершение(Существует, ДопПараметры) Экспорт
	
	Если Существует Тогда
		Возврат;
	КонецЕсли;	
	
	ДвоичныеДанные = ПолучитьМакетСервер(ДопПараметры.Макет);
	ДвоичныеДанные.Записать(ДопПараметры.ИмяФайла);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.ПолучитьМакет(ИмяМакета);
	
КонецФункции	

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" Тогда
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияКлиентПереопределяемый.ЕстьНеобработанноеСобытие() Тогда
			ДанныеШтрихкодов = ПодключаемоеОборудованиеУТКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр);
			ОбработатьШтрихкоды(ДанныеШтрихкодов[0].Штрихкод);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаГлавное Тогда
			
		Отказ = НЕ ВыполнитьЗакрытие;
			
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриемка Тогда
		
		Отказ = Истина;
		Если Элементы.СтраницыПриемка.ТекущаяСтраница = Элементы.СтраницаВыборПриходногоОрдера Тогда
			Назад(Команды.Назад);
		Иначе	
			ЗавершитьПриемку(Команды.ЗавершитьПриемку);
		КонецЕсли;	
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтгрузка Тогда
		
		Отказ = Истина;
		Если Элементы.СтраницыОтгрузка.ТекущаяСтраница = Элементы.СтраницаВыборРасходногоОрдера Тогда
			Назад(Команды.Назад);
		Иначе	
			ЗавершитьОтгрузку(Команды.ЗавершитьОтгрузку);
		КонецЕсли;	
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнформация Тогда
		
		Отказ = Истина;
		Назад(Команды.Назад);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// МеханизмВнешнегоОборудования
	МенеджерОборудованияКлиентПереопределяемый.НачатьОтключениеОборудованиеПриЗакрытииФормы(ЭтаФорма);
	// Конец МеханизмВнешнегоОборудования
	
	Если Не ЭтоПолноправныйПользователь() Тогда
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Оборудование

&НаКлиенте
Процедура НачатьПодключениеОборудованиеПриОткрытииФормыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	Если НЕ РезультатВыполнения.Результат Тогда
		
		ПриОшибкеПодключенияОборудованияНаСервере(РезультатВыполнения.ОписаниеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриОшибкеПодключенияОборудованияНаСервере(ОписаниеОшибки)
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбщиеФорма

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	ВыполнитьЗакрытие = Истина;
	Закрыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоПолноправныйПользователь()
	
	Возврат Пользователи.ЭтоПолноправныйПользователь();
	
КонецФункции	

&НаСервере
Процедура ПерейтиНаСтраницуГлавное()
	
	Заголовок = "Выберите операцию";
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаГлавное;
	ОтключитьСочетанияКлавишВыборДокумента();
	ВключитьСочетанияКлавишГлавное();
	
	ТекущийЭлемент = Элементы.Приемка;
	
КонецПроцедуры	

&НаСервере
Процедура ОтключитьСочетанияКлавишГлавное()
	
	Команды.Приемка.СочетаниеКлавиш    = Новый СочетаниеКлавиш(Клавиша.Нет);
	Команды.Отгрузка.СочетаниеКлавиш   = Новый СочетаниеКлавиш(Клавиша.Нет);
	Команды.Информация.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.Нет);
	
КонецПроцедуры	

&НаСервере
Процедура ВключитьСочетанияКлавишГлавное()
	
	Команды.Приемка.СочетаниеКлавиш    = Новый СочетаниеКлавиш(Клавиша._1);
	Команды.Отгрузка.СочетаниеКлавиш   = Новый СочетаниеКлавиш(Клавиша._2);
	Команды.Информация.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша._3);
	
КонецПроцедуры	

&НаСервере
Процедура ОтключитьСочетанияКлавишВыборДокумента()
	
	Для Счетчик = 0 По 9 Цикл
		Команды["Документ" + Счетчик].СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.Нет);
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ВключитьСочетанияКлавишВыборДокумента(Количество)
	
	Для Счетчик = 1 По Мин(9, Количество) Цикл
		Команды["Документ" + Счетчик].СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша["_" + Счетчик]);
	КонецЦикла;
	
	Если Количество = 10 Тогда
		Команды["Документ10"].СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша["_0"]);
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура АктивизироватьШтрихкод()
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриемка Тогда
		
		Если Элементы.СтраницыПриемка.ТекущаяСтраница = Элементы.СтраницаВыполнениеПриемки Тогда
			Если ЭтаФорма.ТекущийЭлемент <> Элементы.ШтрихкодПриемка Тогда
				ЭтаФорма.ТекущийЭлемент = Элементы.ШтрихкодПриемка;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтгрузка Тогда
		
		Если Элементы.СтраницыПриемка.ТекущаяСтраница = Элементы.СтраницаВыполнениеОтгрузки Тогда
			Если ЭтаФорма.ТекущийЭлемент <> Элементы.ШтрихкодОтгрузка Тогда
				ЭтаФорма.ТекущийЭлемент = Элементы.ШтрихкодОтгрузка;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнформация Тогда
		
		Если ЭтаФорма.ТекущийЭлемент <> Элементы.ШтрихкодИнформация Тогда
			ЭтаФорма.ТекущийЭлемент = Элементы.ШтрихкодИнформация;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		
		// Прверим по последним цифрам 
		// Код введен вручную
		Если СтрДлина(Штрихкод) < 3 Тогда
			Штрихкод = Прав("00" + Штрихкод, 3);
		КонецЕсли;	
	
		ОбработатьШтрихкоды(Штрихкод);
		Штрихкод = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ПерейтиНаСтраницуГлавное();
	
КонецПроцедуры

&НаКлиенте
Функция ВоспроизвестиСигналОшибки()
	
	Если ЗвукОшибки Тогда
		ЗапуститьПриложение(СтрокаКомандыЗвук);
	КонецЕсли;	

КонецФункции	

&НаКлиенте
Процедура ПослатьКодВСистему(Шртихкод)
	
	глПодключаемоеОборудованиеСобытиеОбработано = Ложь;
	
	МассивПосыла = Новый Массив;
	МассивПосыла.Вставить(0, Шртихкод); //Это и есть штрихкод
	МассивПосыла.Вставить(1, Неопределено);
	Оповестить("ScanData", МассивПосыла, "ПодключаемоеОборудование");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросДоп(ОписаниеОповещения, Заголовок, Кнопки, Таймаут)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", Заголовок);
	ПараметрыФормы.Вставить("Кнопки",    Кнопки);
	ПараметрыФормы.Вставить("Таймаут",   Таймаут);
	
	ОткрытьФорму("Обработка._ТСД.Форма.ФормаВопрос", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры	

&НаКлиенте
Процедура КомандаДокумент(Команда)
	
	Индекс = Число(Прав(Команда.Имя, 1)); 
	Если Индекс = 0 Тогда
		Индекс = 10;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнформация Тогда
		
		Если Индекс <= ТаблицаСерий.Количество() Тогда
			ВывестиОтчетПоСерии(ТаблицаСерий[Индекс-1].Серия);
		КонецЕсли;
		
	Иначе	
		
		Если Индекс <= ТаблицаДокументов.Количество() Тогда
			ИДСтроки = ТаблицаДокументов[Индекс-1].ПолучитьИдентификатор();
			УстановитьТекущийОрдер(ИДСтроки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Общие

&НаСервереБезКонтекста
Функция ПолучитьПредставлениеДокумента(Номер, Дата, Номенклатура)
	
	Стр = Номер + " от " + Формат(Дата, "ДФ=dd.MM.yyyy");
	Если Найти(Номенклатура, "ФК") > 0 Тогда
		Стр = Стр + " (ФК)";
	ИначеЕсли Найти(Номенклатура, "Латофлекс") > 0 Тогда	
		Стр = Стр + " (ЛФ)";
	Иначе
		Стр = Стр + " (" + Номенклатура + ")";
	Конецесли;
	
	Возврат Стр;
	
КонецФункции	

&НаКлиенте
Функция НайтиСтрокуТаблицыПоСериям(Штрихкод)
	
	Штрихкод = СокрЛП(Штрихкод);
	НайденныеСтроки = ТаблицаВыполненияПоСериям.НайтиСтроки(Новый Структура("Штрихкод", Штрихкод));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0];
	КонецЕсли;	
	
	Для каждого СтрокаТЗ из ТаблицаВыполненияПоСериям Цикл
		
		Если СтрЗаканчиваетсяНа(СтрокаТЗ.Штрихкод, СокрЛП(Штрихкод)) Тогда
			Возврат СтрокаТЗ;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат Неопределено;
		
КонецФункции	

&НаКлиенте
Процедура ОбработатьШтрихкоды(ТекущийШтрихкод)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнформация Тогда
		ПоказатьИнформациюПоШтрихкоду(ТекущийШтрихкод);
		Возврат;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриемка Тогда
		ЭлементТекстОшибки = Элементы.ТекстОшибкиПриемка;
		ЭлементЗавершить   = Элементы.ЗавершитьПриемку;
		ЭлементТаблица     = Элементы.ТаблицаВыполненияПриемка;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтгрузка Тогда	
		ЭлементТекстОшибки = Элементы.ТекстОшибкиОтгрузка;
		ЭлементЗавершить   = Элементы.ЗавершитьОтгрузку;
		ЭлементТаблица     = Элементы.ТаблицаВыполненияОтгрузка;
	КонецЕсли;	
		
	ЭлементТекстОшибки.Видимость = Ложь;
	
	флЕстьОшибка = Ложь;
	
	СтрокаТЗ = НайтиСтрокуТаблицыПоСериям(ТекущийШтрихкод);
	Если СтрокаТЗ <> Неопределено Тогда
		
		Если СтрокаТЗ.Факт < СтрокаТЗ.План Тогда
			
			СтрокаТЗ.Факт = СтрокаТЗ.Факт + 1;
			ИтогоФакт = ИтогоФакт + 1;
			
			Если ИтогоПлан = ИтогоФакт Тогда
				ЭлементЗавершить.ЦветФона = WebЦвета.СветлоЗеленый;
			КонецЕсли;	
			
		Иначе
			Если ЗначениеЗаполнено(СтрокаТЗ.Серия) Тогда
				ТекстОшибки = Новый ФорматированнаяСтрока("Данная серия уже принята");
			Иначе	
				ТекстОшибки = Новый ФорматированнаяСтрока("Данный товар уже принят");
			КонецЕсли;	
			ЭлементТекстОшибки.Видимость = Истина;
			флЕстьОшибка = Истина;
		КонецЕсли;	
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Номенклатура",   СтрокаТЗ.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", СтрокаТЗ.Характеристика);
		
		НайденныеСтроки = ТаблицаВыполнения.НайтиСтроки(СтруктураОтбора);
		СтрокаТЗ = НайденныеСтроки[0];
		Если флЕстьОшибка = Ложь Тогда
			СтрокаТЗ.Факт = СтрокаТЗ.Факт + 1;
		КонецЕсли;	
		
		ЭлементТаблица.ТекущаяСтрока = СтрокаТЗ.ПолучитьИдентификатор();
		
	Иначе
		флЕстьОшибка = Истина;
		ТекстОшибки = Новый ФорматированнаяСтрока("Штрихкод не найден");
	КонецЕсли;	
	
	Если флЕстьОшибка Тогда
		ЭлементТекстОшибки.Видимость = Истина;
		ЭлементТекстОшибки.Подсказка = ТекущийШтрихкод;
		ВоспроизвестиСигналОшибки();
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСписокДокументов(Тип)
	
	Запрос = Новый Запрос;
	
	Если Тип = "ПриходныйОрдерНаТовары" Тогда
		
		Запрос.Параметры.Вставить("Статус", Перечисления.СтатусыПриходныхОрдеров.КПоступлению);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 10
		|	Док.Ссылка,
		|	Док.Номер,
		|	Док.Дата КАК Дата,
		|	ДокТовары.Номенклатура.Наименование КАК Номенклатура
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары.Товары КАК ДокТовары
		|		ПО (ДокТовары.Ссылка = Док.Ссылка)
		|			И (ДокТовары.НомерСтроки = 1)
		|ГДЕ
		|	Док.Проведен
		|	И Док.Статус = &Статус
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	ИначеЕсли Тип = "РасходныйОрдерНаТовары" Тогда
		
		Запрос.Параметры.Вставить("Статус", Перечисления.СтатусыРасходныхОрдеров.Подготовлено);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 10
		|	Док.Ссылка,
		|	Док.Номер,
		|	Док.Дата КАК Дата,
		|	ДокТовары.Номенклатура.Наименование КАК Номенклатура
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ДокТовары
		|		ПО (ДокТовары.Ссылка = Док.Ссылка)
		|			И (ДокТовары.НомерСтроки = 1)
		|ГДЕ
		|	Док.Проведен
		|	И Док.Статус = &Статус
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	КонецЕсли;
	
	ТаблицаДокументов.Очистить();
	Номер = 0;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Номер = Номер + 1;
		
		НоваяСтрока = ТаблицаДокументов.Добавить();
		НоваяСтрока.Номер  = Номер;
		НоваяСтрока.Ссылка = СтрокаТЗ.Ссылка;
		НоваяСтрока.Представление = ПолучитьПредставлениеДокумента(СтрокаТЗ.Номер, СтрокаТЗ.Дата, СтрокаТЗ.Номенклатура);
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Функция ЗаполнитьТаблицуВыполнения(Тип)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ТекущийДокумент);
	
	Если Тип = "ПриходныйОрдерНаТовары" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокТовары.Номенклатура,
		|	ДокТовары.Характеристика,
		|	ДокТовары.Серия,
		|	ДокТовары.Серия.Номер КАК СерияНомер,
		|	ДокТовары.Серия.ГоденДо КАК СерияГоденДо,
		|	ДокТовары.Количество,
		|	0 КАК План,
		|	ШтрихкодыНоменклатуры.Штрихкод
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары.Товары КАК ДокТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО ДокТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
		|			И ДокТовары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
		|ГДЕ
		|	ДокТовары.Ссылка = &Ссылка
		|	И ДокТовары.Номенклатура.ВидНоменклатуры.ИспользоватьСерии";
	
	ИначеЕсли Тип = "РасходныйОрдерНаТовары" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокТовары.Номенклатура,
		|	ДокТовары.Характеристика,
		|	ДокТовары.Серия,
		|	ДокТовары.Серия.Номер КАК СерияНомер,
		|	ДокТовары.Серия.ГоденДо КАК СерияГоденДо,
		|	ДокТовары.Количество,
		|	0 КАК План,
		|	ШтрихкодыНоменклатуры.Штрихкод
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ДокТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО ДокТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
		|			И ДокТовары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
		|ГДЕ
		|	ДокТовары.Ссылка = &Ссылка";
	
	КонецЕсли;	
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЗ.Серия) Тогда
			СтрокаТЗ.План     = 1;
			СтрокаТЗ.Штрихкод = _ПечатьЦенников.СформироватьШтрихкодСерии(СтрокаТЗ.СерияНомер, СтрокаТЗ.СерияГоденДо);
		Иначе
			
			СтрокаТЗ.План = _ОбщегоНазначенияДоп.ПолучитьКоличествоМест(СтрокаТЗ.Характеристика, СтрокаТЗ.Количество);
			Если СтрокаТЗ.План = 0 Тогда
				СтрокаТЗ.План = СтрокаТЗ.Количество;
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	ТаблицаВыполненияПоСериям.Загрузить(Таблица);
	
	Таблица.Свернуть("Номенклатура, Характеристика", "План");
	ТаблицаВыполнения.Загрузить(Таблица);
	
	ИтогоПлан = ТаблицаВыполнения.Итог("План");
	ИтогоФакт = 0;
	
КонецФункции	
	
&НаСервере
Процедура УстановитьТекущийОрдер(ИДСтроки)
	
	СтрокаТЗ = ТаблицаДокументов.НайтиПоИдентификатору(ИДСтроки);
	
	ТекущийДокумент      = СтрокаТЗ.Ссылка;
	ТекущийДокументТекст = СтрокаТЗ.Представление;
	ОтключитьСочетанияКлавишВыборДокумента();
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриемка Тогда
		
		Элементы.СтраницыПриемка.ТекущаяСтраница = Элементы.СтраницаВыполнениеПриемки;
		ТекущийЭлемент = Элементы.ШтрихкодПриемка;
	
		ЗаполнитьТаблицуВыполнения("ПриходныйОрдерНаТовары");
		Элементы.ЗавершитьПриемку.ЦветФона = Новый Цвет;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтгрузка Тогда
		
		Элементы.СтраницыОтгрузка.ТекущаяСтраница = Элементы.СтраницаВыполнениеОтгрузки;
		ТекущийЭлемент = Элементы.ШтрихкодОтгрузка;
	
		ЗаполнитьТаблицуВыполнения("РасходныйОрдерНаТовары");
		Элементы.ЗавершитьОтгрузку.ЦветФона = Новый Цвет;
		
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область Приемка

&НаКлиенте
Процедура Приемка(Команда)
	
	ПриемкаСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПриемкаСервер()
	
	ЗаполнитьСписокДокументов("ПриходныйОрдерНаТовары");
	ОтключитьСочетанияКлавишГлавное();
	
	Заголовок = "Приемка";
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриемка;
	Элементы.ТекстОшибкиПриемка.Видимость = Ложь;
	
	Если ТаблицаДокументов.Количество() = 1 Тогда
		УстановитьТекущийОрдер(ТаблицаДокументов[0].ПолучитьИдентификатор());
	Иначе
		Элементы.СтраницыПриемка.ТекущаяСтраница = Элементы.СтраницаВыборПриходногоОрдера;
		ВключитьСочетанияКлавишВыборДокумента(ТаблицаДокументов.Количество());
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриходныхОрдеровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	УстановитьТекущийОрдер(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПриемку(Команда)
	
	Если ИтогоФакт = 0 Тогда
		
		ПерейтиНаСтраницуГлавное();
		
	ИначеЕсли ИтогоФакт < ИтогоПлан Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("Продолжить" ,      "Продолжить (ESC)");
		Кнопки.Добавить("Отменить",         "1. Вернуться на главную");
		Кнопки.Добавить("ПринятьВведенное", "2. Принять введенное");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьПриемкуВопрос", ЭтотОбъект);
		
		ПоказатьВопросДоп(ОписаниеОповещения, "Приемка не завершена", Кнопки, 100);
		
	Иначе
		
		ЗавершитьПриемкуПоДокументу();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПриемкуВопрос(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = "ПринятьВведенное" Тогда
		
		ЗавершитьПриемкуПоДокументуЧастично();
		
	ИначеЕсли Ответ = "Отменить" Тогда
		
		ПерейтиНаСтраницуГлавное();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьПриемкуПоДокументу()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументОбъект = ТекущийДокумент.ПолучитьОбъект();
	ДокументОбъект.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ПерейтиНаСтраницуГлавное();
	Исключение	
		ТекстОшибки = "Не удалось записать документ";
		Элементы.ТекстОшибкиПриемка.Видимость = Истина;
		Элементы.ТекстОшибкиПриемка.Подсказка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;	
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьПриемкуПоДокументуЧастично()
	
	ДокументОбъект = ТекущийДокумент.ПолучитьОбъект();
	ДокументОбъект.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Номенклатура");
	СтруктураОтбора.Вставить("Характеристика");
	СтруктураОтбора.Вставить("Серия");
	
	Для каждого СтрокаТЗ из ТаблицаВыполненияПоСериям Цикл
		
		Если СтрокаТЗ.Факт = СтрокаТЗ.План Тогда
			Продолжить;
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТЗ);
		НайденныеСтроки = ДокументОбъект.Товары.НайтиСтроки(СтруктураОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		СтрокаТЧ = НайденныеСтроки[0];
		
		Если СтрокаТЗ.Факт = 0 Тогда
			ДокументОбъект.Товары.Удалить(СтрокаТЧ);
		Иначе	
			СтрокаТЧ.Количество = СтрокаТЧ.Количество * СтрокаТЗ.Факт / СтрокаТЗ.План;
			СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.КоличествоУпаковок * СтрокаТЗ.Факт / СтрокаТЗ.План;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ПерейтиНаСтраницуГлавное();
	Исключение	
		ТекстОшибки = "Не удалось записать документ";
		Элементы.ТекстОшибки.Видимость = Истина;
		Элементы.ТекстОшибки.Подсказка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти

#Область Отгрузка

&НаКлиенте
Процедура Отгрузка(Команда)
	
	ОтгрузкаСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОтгрузкаСервер()
	
	ЗаполнитьСписокДокументов("РасходныйОрдерНаТовары");
	ОтключитьСочетанияКлавишГлавное();
	
	Заголовок = "Отгрузка";
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтгрузка;
	Элементы.ТекстОшибкиОтгрузка.Видимость = Ложь;
	
	Если ТаблицаДокументов.Количество() = 1 Тогда
		УстановитьТекущийОрдер(ТаблицаДокументов[0].ПолучитьИдентификатор());
		
	Иначе
		Элементы.СтраницыОтгрузка.ТекущаяСтраница = Элементы.СтраницаВыборРасходногоОрдера;
		ВключитьСочетанияКлавишВыборДокумента(ТаблицаДокументов.Количество());
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОтгрузку(Команда)
	
	Если ИтогоФакт = 0 Тогда
		
		ПерейтиНаСтраницуГлавное();
		
	ИначеЕсли ИтогоФакт < ИтогоПлан Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("Продолжить" ,      "Продолжить (ESC)");
		Кнопки.Добавить("Отменить",         "1. Вернуться на главную");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьПриемкуВопрос", ЭтотОбъект);
		
		ПоказатьВопросДоп(ОписаниеОповещения, "Отгрузка не завершена", Кнопки, 100);
		
	Иначе
		
		ЗавершитьОтгрузкуПоДокументу();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОтгрузкуВопрос(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = "Отменить" Тогда
		
		ПерейтиНаСтраницуГлавное();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьОтгрузкуПоДокументу()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументОбъект = ТекущийДокумент.ПолучитьОбъект();
	ДокументОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен;
	
	Для каждого СтрокаТЧ из ДокументОбъект.ОтгружаемыеТовары Цикл
		СтрокаТЧ.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
	КонецЦикла;	
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ПерейтиНаСтраницуГлавное();
	Исключение	
		ТекстОшибки = "Не удалось записать документ";
		Элементы.ТекстОшибкиОтгрузка.Видимость = Истина;
		Элементы.ТекстОшибкиОтгрузка.Подсказка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти

#Область Информация


&НаКлиенте
Процедура Информация(Команда)
	
	ИнформацияСервер();
	
КонецПроцедуры

&НаСервере
Процедура ИнформацияСервер()
	
	ОтключитьСочетанияКлавишГлавное();
	
	Заголовок = "Информация";
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаИнформация;
	ТекущийЭлемент = Элементы.ШтрихкодИнформация;
	
	ТабДокКарточкаСерии.Очистить();
	ТаблицаСерий.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИнформациюПоШтрихкоду(Штрихкод)
	
	ПоказатьИнформациюПоШтрихкодуСервер(Штрихкод);
	
КонецПроцедуры	

&НаСервере
Процедура ПоказатьИнформациюПоШтрихкодуСервер(Штрихкод)
	
	ЗаполнитьСписокСерий(Штрихкод);
	Если ТаблицаСерий.Количество() = 1 Тогда
		ВывестиОтчетПоСерии(ТаблицаСерий[0].Серия);
	Иначе
		ПоказатьВыборСерии();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьВыборСерии()
	
	Элементы.СтраницыИнформация.ТекущаяСтраница = Элементы.СтраницаВыборСерии;
	ВключитьСочетанияКлавишВыборДокумента(ТаблицаСерий.Количество());
	
КонецПроцедуры

&НаСервере
Процедура ВывестиОтчетПоСерии(Серия)
	
	Элементы.СтраницыИнформация.ТекущаяСтраница = Элементы.СтраницаИнформацияПоСерии;
	ОтключитьСочетанияКлавишВыборДокумента();
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ОбработкаОбъект.ПолучитьМакет("КарточкаСерии");
	
	Если ТипЗнч(Серия) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		Данные = ПолучитьДанныеСерии(Серия);
	Иначе	
		Данные = ПолучитьДанныеХарактристики(Серия);
	КонецЕсли;
	
	ТабДокКарточкаСерии.Очистить();
	
	Область = Макет.ПолучитьОбласть("Наименование");
	Область.Параметры.Заполнить(Данные);
	ТабДокКарточкаСерии.Вывести(Область);
	
	Если ЗначениеЗаполнено(Данные.Назначение) Тогда
		Область = Макет.ПолучитьОбласть("Назначение");
		Область.Параметры.Заполнить(Данные);
		ТабДокКарточкаСерии.Вывести(Область);
	КонецЕсли;	
	
	Область = Макет.ПолучитьОбласть("Серия");
	Область.Параметры.Заполнить(Данные);
	ТабДокКарточкаСерии.Вывести(Область);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиСерию(Штрихкод)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Номер", Штрихкод); 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.Номер = &Номер";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.СерииНоменклатуры.ПустаяСсылка();
	Иначе	
		Возврат Результат.Выгрузить()[0][0];
	КонецЕсли;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеСерии(Серия)
	
	Структура = Новый Структура("Номенклатура, Характеристика, Назначение, 
		|Серия, СерияНомер, СерияДата, Документ, ДокументНомер, ДокументДата, Бригада");
		
	Структура.Серия = Серия;
	Структура.СерияНомер = Серия.Номер;
	Структура.СерияДата  = Формат(Серия.ГоденДо, "ДФ=dd.MM.yyyy");
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Серия", Серия);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокВыходныеИзделия.Номенклатура,
	|	ДокВыходныеИзделия.Характеристика,
	|	ДокВыходныеИзделия.Ссылка.Назначение КАК Назначение,
	|	ДокВыходныеИзделия.Ссылка КАК Документ,
	|	ДокВыходныеИзделия.Ссылка.Номер КАК ДокументНомер,
	|	ДокВыходныеИзделия.Ссылка.Дата КАК ДокументДата,
	|	ДокТрудозатраты.Бригада
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделияСерии КАК ДокВыходныеИзделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства.Трудозатраты КАК ДокТрудозатраты
	|		ПО ДокВыходныеИзделия.Ссылка = ДокТрудозатраты.Ссылка
	|			И (ДокТрудозатраты.НомерСтроки = 1)
	|ГДЕ
	|	ДокВыходныеИзделия.Серия = &Серия";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ЗаполнитьЗначенияСвойств(Структура, Результат.Выгрузить()[0]);
		Структура.Назначение = СтрЗаменить(Структура.Назначение, " (Заказ клиента)", "");
	КонецЕсли;	
	
	Возврат Структура;
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьДанныеХарактристики(Характеристика)
	
	Структура = Новый Структура("Номенклатура, Характеристика, Назначение");
		
	Структура.Номенклатура   = Характеристика.Владелец;
	Структура.Характеристика = Характеристика;
	
	Возврат Структура;
	
КонецФункции	

&НаСервере
Процедура ЗаполнитьСписокСерий(Штрихкод)
	
	ТаблицаСерий.Очистить();
	
	Если СтрДлина(Штрихкод) = 13 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("Номер", Штрихкод); 
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Рег.Характеристика КАК Серия
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК Рег
		|ГДЕ
		|	Рег.Штрихкод = &Номер";
		
	Иначе
		
		Если СтрДлина(Штрихкод) = 8 Тогда
			
			Запрос = Новый Запрос;
			Запрос.Параметры.Вставить("Номер", Штрихкод); 
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СерииНоменклатуры.Ссылка КАК Серия
			|ИЗ
			|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
			|ГДЕ
			|	СерииНоменклатуры.Номер = &Номер";
			
		Иначе
			
			Запрос = Новый Запрос;
			Запрос.Параметры.Вставить("Номер", "%" + Штрихкод); 
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 10
			|	СерииНоменклатуры.Ссылка КАК Серия
			|ИЗ
			|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
			|ГДЕ
			|	СерииНоменклатуры.Номер ПОДОБНО &Номер
			|
			|УПОРЯДОЧИТЬ ПО
			|	СерииНоменклатуры.Номер";
			
		КонецЕсли;	
		
	КонецЕсли;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Счетчик = 0;
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Счетчик = Счетчик + 1;
		НоваяСтрока = ТаблицаСерий.Добавить();
		НоваяСтрока.Номер = Счетчик;
		НоваяСтрока.Серия = СтрокаТЗ.Серия;
		
	КонецЦикла;	
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСерийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ТаблицаСерий.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ВывестиОтчетПоСерии(ТекущиеДанные.Серия);
	
КонецПроцедуры

#КонецОбласти

