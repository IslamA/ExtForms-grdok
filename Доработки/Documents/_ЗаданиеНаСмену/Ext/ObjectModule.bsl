
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Дата = ТекущаяДатаСеанса();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ОбъектКопирования.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокЗаказы.ЗаказНаПроизводство
	|ИЗ
	|	Документ._ЗаданиеНаСмену.Заказы КАК ДокЗаказы
	|ГДЕ
	|	ДокЗаказы.Ссылка = &Ссылка
	|	И ДокЗаказы.ЗаказНаПроизводство.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство.Закрыт)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокЗаказы.НомерСтроки";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Заказы.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДатаСмены = ТекущаяДатаСеанса();
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьПродукцию() Экспорт
	
	ТаблицаСтарая = Продукция.Выгрузить(, "Номенклатура, Характеристика, Количество, КоличествоЛистов");
	
	Если Заказы.Количество() = 0 Тогда
		ЗаполнитьЗаказы();
	КонецЕсли;	
	
	Таблица = _ЗаказНаПроизводство.НевыполненнаяПродукция(Заказы.ВыгрузитьКолонку("ЗаказНапроизводство"), Подразделение);
	Продукция.Загрузить(Таблица);
	
	Отбор = Новый Структура("Номенклатура, Характеристика");
	
	Для каждого СтрокаТЗ из ТаблицаСтарая Цикл
		
		Если СтрокаТЗ.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТЗ);
		НайденныеСтроки = Продукция.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Количество       = СтрокаТЗ.Количество;
			НайденныеСтроки[0].КоличествоЛистов = СтрокаТЗ.КоличествоЛистов;
		КонецЕсли;
		
	КонецЦикла;	
	
	Для каждого СтрокаТЧ из Продукция Цикл
		СтрокаТЧ.КоличествоОстатокЛистов = _ОбщегоНазначенияДоп.ПолучитьКоличествоЛистов(СтрокаТЧ.Характеристика, СтрокаТЧ.КоличествоОстаток);
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗаполнитьЗаказы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Подразделение", Подразделение);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Рег.Распоряжение КАК ЗаказНаПроизводство
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства КАК Рег
	|ГДЕ
	|	Рег.Подразделение = &Подразделение
	|	И Рег.Распоряжение.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство.Закрыт)
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Распоряжение
	|
	|ИМЕЮЩИЕ
	|	СУММА(Рег.ЗапланированоЗаказом) - СУММА(Рег.Выполнено) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Рег.Распоряжение.Дата";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Заказы.Загрузить(Таблица);
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьКоличествоЛистовПоЗаданию(ЗаданиеНаСмену) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ЗаданиеНаСмену);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокПродукция.Характеристика,
	|	ДокПродукция.КоличествоЛистов
	|ИЗ
	|	Документ._ЗаданиеНаСмену.Продукция КАК ДокПродукция
	|ГДЕ
	|	ДокПродукция.Ссылка = &Ссылка";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Таблица.Колонки.Добавить("Толщина");
	Таблица.Колонки.Добавить("Покрытие");
	Таблица.Колонки.Добавить("Сорт");
	
	Для каждого СтрокаТЗ из Таблица Цикл
		
		ЗначенияСвойств   = _ОбщегоНазначенияДоп.ПолучитьЗначенияСвойств(СтрокаТЗ.Характеристика);
		СтрокаТЗ.Толщина  = _ХарактеристикиНоменклатуры.ПолучитьТолщину(СтрокаТЗ.Характеристика, ЗначенияСвойств);
		СтрокаТЗ.Покрытие = _ОбщегоНазначенияДоп.ПолучитьДопРеквизитИзСписка(СтрокаТЗ.Характеристика, ЗначенияСвойств, "5 Покрытие");
		СтрокаТЗ.Сорт     = _ОбщегоНазначенияДоп.ПолучитьДопРеквизитИзСписка(СтрокаТЗ.Характеристика, ЗначенияСвойств, "6 Сорт");
		
	КонецЦикла;	
	
	СтруктураОтбора = Новый Структура("Толщина, Покрытие, Сорт");
	Для каждого СтрокаТЧ из Продукция Цикл
		
		ЗначенияСвойств = _ОбщегоНазначенияДоп.ПолучитьЗначенияСвойств(СтрокаТЧ.Характеристика);
		СтруктураОтбора.Толщина  = _ХарактеристикиНоменклатуры.ПолучитьТолщину(СтрокаТЧ.Характеристика, ЗначенияСвойств);
		СтруктураОтбора.Покрытие = _ОбщегоНазначенияДоп.ПолучитьДопРеквизитИзСписка(СтрокаТЧ.Характеристика, ЗначенияСвойств, "5 Покрытие");
		СтруктураОтбора.Сорт     = _ОбщегоНазначенияДоп.ПолучитьДопРеквизитИзСписка(СтрокаТЧ.Характеристика, ЗначенияСвойств, "6 Сорт");
		
		НайденныеСтроки = Таблица.НайтиСтроки(СтруктураОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			СтрокаТЧ.КоличествоЛистов = НайденныеСтроки[0].КоличествоЛистов;
			Если СтрокаТЧ.КоличествоЛистов = СтрокаТЧ.КоличествоОстатокЛистов Тогда
				СтрокаТЧ.Количество = СтрокаТЧ.КоличествоОстаток;
			Иначе	
				СтрокаТЧ.Количество = _ОбщегоНазначенияДоп.ПолучитьКоличествоПоКоличествуЛистов(СтрокаТЧ.Характеристика, СтрокаТЧ.КоличествоЛистов, ЗначенияСвойств);
			КонецЕсли;			
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецЕсли
