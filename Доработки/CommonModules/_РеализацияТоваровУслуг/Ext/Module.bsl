
Процедура ПриСозданииНаСервере_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Объект = Форма.Объект;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("_ТаможеннаяДекларация",   Новый ОписаниеТипов("ДокументСсылка.ТаможеннаяДекларацияЭкспорт"),, "Таможенная декларация", Ложь));
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Группа = Форма.Элементы.Вставить("_ГруппаМест", Тип("ГруппаФормы"), Форма.Элементы.Товары, );
	Группа.Вид          = ВидГруппыФормы.ГруппаКолонок;
	Группа.Заголовок    = "Группа мест";
	Группа.Группировка  = ГруппировкаКолонок.Горизонтальная;
	
	Элемент = Форма.Элементы.Вставить("_КоличествоМест", Тип("ПолеФормы"), Группа, );
   	Элемент.Вид         = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Объект.Товары._КоличествоМест";
	Элемент.Ширина      = 8;
		
	Элемент = Форма.Элементы.Вставить("_ЕдиницаМест", Тип("ПолеФормы"), Группа, );
   	Элемент.Вид         = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Объект.Товары._ЕдиницаМест";
	Элемент.КнопкаВыпадающегоСписка = Ложь;
	Элемент.КнопкаВыбора            = Истина;
	
	
	Команда = Форма.Команды.Добавить("_РассчитатьКоличествоМест");
	Команда.Заголовок = "Рассчитать количество мест";
	Команда.ИзменяетСохраняемыеДанные = Истина;
	Команда.Действие  = "_РассчитатьКоличествоМест";
	
	Кнопка = Форма.Элементы.Вставить("_РассчитатьКоличествоМест", Тип("КнопкаФормы"), Форма.Элементы.ТоварыГруппаЗаполнить, );
	Кнопка.ИмяКоманды = "_РассчитатьКоличествоМест";
	
	
	Элемент = Форма.Элементы.Вставить("_НомерГТДЭкспортный", Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыПраво, Форма.Элементы.ГруппаТара);
    Элемент.Вид         = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Объект._НомерГТДЭкспортный";
	Элемент.Ширина      = 35;
	Элемент.ВысотаЗаголовка = 2;
	Элемент.Заголовок   = "Номер ГТД экспортный";
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элемент.РастягиватьПоГоризонтали = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И Объект.Валюта <> Константы.ВалютаРегламентированногоУчета.Получить()
		И Объект.СуммаДокумента <> 0 Тогда
		
		СуммаРуб = ПолучитьСуммуРубПоПроводкам(Объект.Ссылка);
		Курс = Окр(СуммаРуб / Объект.СуммаДокумента, 4);
		
		Элемент = Форма.Элементы.Вставить("_СуммаРуб", Тип("ДекорацияФормы"), Форма.Элементы.ГруппаИтого, );
   		Элемент.Вид         = ВидДекорацииФормы.Надпись;
		Элемент.Заголовок   = "( " + Формат(СуммаРуб, "ЧДЦ=2") + " руб, курс: " + Курс + " )";
		Элемент.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Центр;
				
		Если ПравоДоступа("Просмотр", Метаданные.Документы.ТаможеннаяДекларацияЭкспорт) Тогда
			
			Элемент = Форма.Элементы.Вставить("_ТаможеннаяДекларация", Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыПраво, Форма.Элементы.ГруппаТара);
		    Элемент.Вид         = ВидПоляФормы.ПолеВвода;
			Элемент.ПутьКДанным = "_ТаможеннаяДекларация";
			Элемент.Ширина      = 35;
			Элемент.ВысотаЗаголовка = 1;
			Элемент.Заголовок   = "Таможенная декларация";
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
			Элемент.РастягиватьПоГоризонтали = Ложь;
			Элемент.ТолькоПросмотр = Истина;
	
			Форма._ТаможеннаяДекларация = ПолучитьТаможеннуюДекларациюЭкспорт(Объект.Ссылка); 
		
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриСозданииНаСервере_ЖурналДокументовПродажи_СписокДокументов(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если ПравоДоступа("Просмотр", Метаданные.Документы.ТаможеннаяДекларацияЭкспорт) Тогда
		
		Список = Форма.СписокДокументыПродажи; 
		ТекстЗапроса = Список.ТекстЗапроса;
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);	
		
		ЗапросВыбораСхемыЗапроса = СхемаЗапроса.ПакетЗапросов[0];
		Оператор = ЗапросВыбораСхемыЗапроса.Операторы[0];
		
		Оператор.Источники.Добавить("Документ.ТаможеннаяДекларацияЭкспорт.ДокументыОснования", "ДокТД");
		_ОбработчикиПроведенияСервер.ДобавитьУсловиеСоединения(Оператор, "РеестрДокументов", "ДокТД", "РеестрДокументов.Ссылка = ДокТД.ДокументОснование И НЕ ДокТД.Ссылка.ПометкаУдаления");
		
		_ОбработчикиПроведенияСервер.ДобавитьПолеВЗапрос(ЗапросВыбораСхемыЗапроса, Оператор, "_ТаможеннаяДекларация", "ДокТД.Ссылка");
		
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		// Обходим глюк схемы, убираем лишние псевдонимы полей
		Для Инд = 1 По 9 Цикл
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " КАК Поле" + Инд, "");
		КонецЦикла;		
		Список.ТекстЗапроса = ТекстЗапроса;
		
		Элемент = Форма.Элементы.Вставить("_ТаможеннаяДекларация", Тип("ПолеФормы"), Форма.Элементы.СписокДокументыПродажи, );
		Элемент.Вид         = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = "СписокДокументыПродажи._ТаможеннаяДекларация";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьКоличествоМест(Объект) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	КонецЕсли;	
	
	Для каждого СтрокаТЧ из Объект.Товары Цикл
		
		КоличествоМест = _ОбщегоНазначенияДоп.ПолучитьКоличествоМест(СтрокаТЧ.Характеристика, СтрокаТЧ.Количество);
		Если ЗначениеЗаполнено(КоличествоМест) Тогда
			СтрокаТЧ._КоличествоМест = КоличествоМест;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ЗаполнитьЕдиницуМест(Объект) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	КонецЕсли;	
	
	Для каждого СтрокаТЧ из Объект.Товары Цикл
		
		ПараметрыСтроки = _ЗаказКлиента.ПолучитьПараметрыСтроки(СтрокаТЧ.ЗаказКлиента, СтрокаТЧ.КодСтроки);
		СтрокаТЧ._ЕдиницаМест    = ПараметрыСтроки._ЕдиницаМест;
		СтрокаТЧ._КоличествоМест = ПараметрыСтроки._КоличествоМест;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, СтруктураПараметров, ОбластьМакета) Экспорт
	
	РеквизитыСтроки = ПолучитьРеквизитыСтроки(СтрокаТовары);
	
	// Берем вес из характеристики, если он есть
	ВесЕдиницы = _ОбщегоНазначенияДоп.ПолучитьДопРеквизит(СтрокаТовары.Характеристика, "Вес");
	Если ЗначениеЗаполнено(ВесЕдиницы) Тогда
		МассаБрутто = Окр(ВесЕдиницы * СтрокаТовары.Количество, 3);
	Иначе	
		Попытка
			МассаБрутто = СтрокаТовары.МассаБрутто;
		Исключение
			МассаБрутто = 0;
		КонецПопытки;	
	КонецЕсли;	
	
	// Прибавляем вес единиц мест
	Если ЗначениеЗаполнено(РеквизитыСтроки.КоличествоМест) Тогда
		СтруктураПараметров.Вставить("КоличествоМест", РеквизитыСтроки.КоличествоМест);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.ЕдиницаМестВес) Тогда
		МассаБрутто = МассаБрутто + РеквизитыСтроки.ЕдиницаМестВес;
	КонецЕсли;	
		
	СтруктураПараметров.Вставить("МассаБрутто",  МассаБрутто);
	
	ОбъемПачки        = _ХарактеристикиНоменклатуры.ПолучитьОбъемПачки(СтрокаТовары.Характеристика);
	КолвоЛистовВПачке = _ХарактеристикиНоменклатуры.ПолучитьКоличествоЛистов(СтрокаТовары.Характеристика);
	
	СтруктураПараметров.Вставить("КоличествоВОдномМесте", ОбъемПачки);
	
	Если ЗначениеЗаполнено(ОбъемПачки)
		И ЗначениеЗаполнено(КолвоЛистовВПачке) Тогда
		
		КолвоЛистов = Окр(СтрокаТовары.Количество / ОбъемПачки * КолвоЛистовВПачке, 0);
		СтруктураПараметров.Вставить("КоличествоМест", Формат(СтруктураПараметров.КоличествоМест) + Символы.ПС + КолвоЛистов);
		
	КонецЕсли;
	
	ОбластьМакета.Область(1, 9, 1, 9).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
	
КонецПроцедуры	

Процедура СтруктураРесурсовДляИтогов(Структура) Экспорт
	
	Структура.Вставить("КолвоЛистов", 0);
	
КонецПроцедуры	

Процедура РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары, СтруктураСуммПоСтроке) Экспорт
	
	РеквизитыСтроки = ПолучитьРеквизитыСтроки(СтрокаТовары);
	
	ОбъемПачки        = _ХарактеристикиНоменклатуры.ПолучитьОбъемПачки(СтрокаТовары.Характеристика);
	КолвоЛистовВПачке = _ХарактеристикиНоменклатуры.ПолучитьКоличествоЛистов(СтрокаТовары.Характеристика);
	
	Если ЗначениеЗаполнено(ОбъемПачки)
		И ЗначениеЗаполнено(КолвоЛистовВПачке) Тогда
		
		КолвоЛистов = Окр(СтрокаТовары.Количество / ОбъемПачки * КолвоЛистовВПачке, 0);
		
		ИтоговыеСуммы.ИтогоКолвоЛистов           = ИтоговыеСуммы.ИтогоКолвоЛистов + КолвоЛистов;
		ИтоговыеСуммы.ИтогоКолвоЛистовНаСтранице = ИтоговыеСуммы.ИтогоКолвоЛистовНаСтранице + КолвоЛистов;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.КоличествоМест)
		И ИтоговыеСуммы.Свойство("ИтогоКоличествоМест") Тогда
		ИтоговыеСуммы.ИтогоКоличествоМест           = ИтоговыеСуммы.ИтогоКоличествоМест           - СтруктураСуммПоСтроке.КоличествоМест + РеквизитыСтроки.КоличествоМест;
		ИтоговыеСуммы.ИтогоКоличествоМестНаСтранице = ИтоговыеСуммы.ИтогоКоличествоМестНаСтранице - СтруктураСуммПоСтроке.КоличествоМест + РеквизитыСтроки.КоличествоМест;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.ЕдиницаМестВес)
		И ИтоговыеСуммы.Свойство("ИтогоМассаБрутто") Тогда
		ИтоговыеСуммы.ИтогоМассаБрутто           = ИтоговыеСуммы.ИтогоМассаБрутто           + РеквизитыСтроки.ЕдиницаМестВес;
		ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + РеквизитыСтроки.ЕдиницаМестВес;
	КонецЕсли;	
	
КонецПроцедуры	

Функция ПолучитьРеквизитыСтроки(СтрокаТовары) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка",         СтрокаТовары.Ссылка);
	Запрос.Параметры.Вставить("Номенклатура",   СтрокаТовары.Номенклатура);
	Запрос.Параметры.Вставить("Характеристика", СтрокаТовары.Характеристика);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(РеализацияТоваровУслугТовары._КоличествоМест) КАК КоличествоМест,
	|	СУММА(РеализацияТоваровУслугТовары._ЕдиницаМест.Вес * РеализацияТоваровУслугТовары._КоличествоМест) КАК ЕдиницаМестВес
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	|	И РеализацияТоваровУслугТовары.Номенклатура = &Номенклатура
	|	И РеализацияТоваровУслугТовары.Характеристика = &Характеристика";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Новый Структура("КоличествоМест, ЕдиницаМестВес");
	Иначе
		Возврат Результат.Выгрузить()[0];
	КонецЕсли;	
	
КонецФункции	

Процедура ЗаполнитьПараметрыИтоговНаСтранице(ИтоговыеСуммы, ОбластьИтоговПоСтранице) Экспорт
	
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоМестНаСтранице = Формат(ИтоговыеСуммы.ИтогоКоличествоМестНаСтранице, "") + Символы.ПС + Формат(ИтоговыеСуммы.ИтогоКолвоЛистовНаСтранице, "");
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыОбщихИтогов(ИтоговыеСуммы, ОбластьИтогов) Экспорт
	
	ОбластьИтогов.Параметры.ИтогоКоличествоМест = Формат(ИтоговыеСуммы.ИтогоКоличествоМест, "") + Символы.ПС + Формат(ИтоговыеСуммы.ИтогоКолвоЛистов, "");
	
КонецПроцедуры

Функция ПолучитьСуммуРубПоПроводкам(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ДокументСсылка);
	Запрос.Параметры.Вставить("СчетДт", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	Запрос.Параметры.Вставить("СчетКт", ПланыСчетов.Хозрасчетный.НайтиПоКоду("90"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(Хозрасчетный.Сумма) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Регистратор В(&Ссылка)
	|	И Хозрасчетный.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиВал)
	|	И Хозрасчетный.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыручкаНеЕНВД)";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Возврат _ОбщегоНазначенияДоп.ЕстьNULL(Результат.Выгрузить()[0].Сумма, 0);
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
		
КонецФункции

Функция ПолучитьТаможеннуюДекларациюЭкспорт(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДокДокументыОснования.Ссылка
	|ИЗ
	|	Документ.ТаможеннаяДекларацияЭкспорт.ДокументыОснования КАК ДокДокументыОснования
	|ГДЕ
	|	ДокДокументыОснования.ДокументОснование = &Ссылка
	|	И НЕ ДокДокументыОснования.Ссылка.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Возврат Результат.Выгрузить()[0].Ссылка; 
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции
