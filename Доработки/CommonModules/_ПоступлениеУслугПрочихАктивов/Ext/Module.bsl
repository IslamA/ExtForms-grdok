
Процедура ПриСозданииНаСервере_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Элемент = Форма.Элементы.Вставить("_ЗаказПоставщику", Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыПраво, );
	Элемент.Вид         = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Объект._ЗаказПоставщику";
	Элемент.РастягиватьПоГоризонтали = Ложь;
	Элемент.Ширина      = 28;
	
	Если Форма.Элементы.Найти("Руководитель") = Неопределено Тогда
		
		Элемент = Форма.Элементы.Вставить("Руководитель", Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыПраво, );
		Элемент.Вид         = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = "Объект.Руководитель";
		Элемент.РастягиватьПоГоризонтали = Ложь;
		Элемент.Ширина      = 28;
		
	КонецЕсли;	
	
	Если Форма.Элементы.Найти("ГлавныйБухгалтер") = Неопределено Тогда
		
		Элемент = Форма.Элементы.Вставить("ГлавныйБухгалтер", Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыПраво, );
		Элемент.Вид         = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = "Объект.ГлавныйБухгалтер";
		Элемент.РастягиватьПоГоризонтали = Ложь;
		Элемент.Ширина      = 28;
		
	КонецЕсли;	
	
КонецПроцедуры

Функция ТекстЗапросаПроведение(Запрос, ТекстыЗапроса, Регистры) Экспорт

    ТекстЗапроса_РасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	
	Возврат "";

КонецФункции

Процедура ТекстЗапроса_РасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры) Экспорт

	ИмяРегистра = "РасчетыСПоставщиками";
    ЭлементТекстЗапроса = _ОбработчикиПроведенияСервер.НайтиЭлементСписка(ТекстыЗапроса, ИмяРегистра);
	Если ЭлементТекстЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
    ТекстЗапроса = ЭлементТекстЗапроса.Значение;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запрос.Параметры.Ссылка, "_ЗаказПоставщику, ПорядокРасчетов");
	Запрос.Параметры.Вставить("ЗаказПоставщику", Реквизиты._ЗаказПоставщику);
	Запрос.Параметры.Вставить("ПорядокРасчетов", Реквизиты.ПорядокРасчетов);
	Если ЗначениеЗаполнено(Реквизиты._ЗаказПоставщику) 
		И Реквизиты.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаРасходы.Период КАК Период,
		|	ТаблицаРасходы.Период КАК ДатаРегистратора,
		|	&ДатаПлатежа КАК ДатаПлатежа,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|
		|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
		|		&Договор
		//Ситников++
		|	КОГДА &ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|		И &ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным) ТОГДА
		|		&ЗаказПоставщику
		//Ситников--
		|	ИНАЧЕ
		|		&Ссылка
		|	КОНЕЦ КАК ЗаказПоставщику,
		|
		|	&ВалютаВзаиморасчетов КАК Валюта,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
		|	&ФормаОплаты КАК ФормаОплаты,
		|	ТаблицаРасходы.СуммаВзаиморасчетов КАК Сумма,
		|	ТаблицаРасходы.СуммаРегл КАК СуммаРегл,
		|	ТаблицаРасходы.СуммаУпр КАК СуммаУпр,
		|	0 КАК КОплате,
		//Ситников++
		|	ТаблицаРасходы.СуммаВзаиморасчетов КАК КПоступлению,
		//|	0 КАК КПоступлению,
		//Ситников--
		|	&Организация КАК Организация
		|ИЗ
		|	втРасходы КАК ТаблицаРасходы
		|ГДЕ
		|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаПрочиеАктивыПассивы.Период КАК Период,
		|	ТаблицаПрочиеАктивыПассивы.Период КАК ДатаРегистратора,
		|	&ДатаПлатежа КАК ДатаПлатежа,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|
		|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
		|		&Договор
		//Ситников++
		|	КОГДА &ЗаказПоставщику <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|		И &ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным) ТОГДА
		|		&ЗаказПоставщику
		//Ситников--
		|	ИНАЧЕ
		|		&Ссылка
		|	КОНЕЦ КАК ЗаказПоставщику,
		|
		|	&ВалютаВзаиморасчетов КАК Валюта,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
		|	&ФормаОплаты КАК ФормаОплаты,
		|	ТаблицаПрочиеАктивыПассивы.СуммаВзаиморасчетов КАК Сумма,
		|	ТаблицаПрочиеАктивыПассивы.СуммаРегл КАК СуммаРегл,
		|	ТаблицаПрочиеАктивыПассивы.СуммаУпр КАК СуммаУпр,
		|	0 КАК КОплате,
		//Ситников++
		|	ТаблицаПрочиеАктивыПассивы.СуммаВзаиморасчетов КАК КПоступлению,
		//|	0 КАК КПоступлению,
		//Ситников--
		|	&Организация КАК Организация
		|ИЗ
		|	втПрочиеАктивыПассивы КАК ТаблицаПрочиеАктивыПассивы
		|ГДЕ
		|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		//Ситников++
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	КОНЕЦПЕРИОДА(&ДатаПлатежа, День) КАК Период,
		//|	&Период КАК ДатаРегистратора,
		//|	&ДатаПлатежа КАК ДатаПлатежа,
		//|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		//|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		//|
		//|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
		//|		&Договор
		//|	ИНАЧЕ
		//|		&Ссылка
		//|	КОНЕЦ КАК ЗаказПоставщику,
		//|
		//|	&ВалютаВзаиморасчетов КАК Валюта,
		//|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
		//|	&ФормаОплаты КАК ФормаОплаты,
		//|	0 КАК Сумма,
		//|	0 КАК СуммаРегл,
		//|	0 КАК СуммаУпр,
		//|	ТаблицаРасходы.СуммаВзаиморасчетов КАК КОплате,
		//|	ТаблицаРасходы.СуммаВзаиморасчетов КАК КПоступлению,
		//|	&Организация КАК Организация
		//|ИЗ
		//|	Документ.ПоступлениеУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
		//|
		//|ГДЕ
		//|	ТаблицаРасходы.Ссылка = &Ссылка
		//|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
		//|	И НЕ &ГрафикИсполненияВДоговоре
		//Ситников--
		|";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		ЭлементТекстЗапроса.Значение = ТекстЗапроса;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура Подписка_ОбработкаПроведения(Ссылка, Отказ) Экспорт
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "_ЗаказПоставщику, Дата");
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", Реквизиты._ЗаказПоставщику);
	Запрос.Параметры.Вставить("Период", Реквизиты.Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ДокТовары.Ссылка КАК ЗаказПоставщику,
	|	ДокТовары.Номенклатура,
	|	ДокТовары.Характеристика,
	|	ДокТовары.КодСтроки,
	|	ДокТовары.Склад,
	|	ДокТовары.Количество КАК Заказано,
	|	ДокТовары.Количество КАК КОформлению
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ДокТовары
	|ГДЕ
	|	ДокТовары.Ссылка = &Ссылка
	//|	И ДокТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И НЕ ДокТовары.Отменено";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыНакопления.ЗаказыПоставщикам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Загрузить(Таблица);
	НаборЗаписей.Записывать = Истина;
	НаборЗаписей.Записать();
	
	
	// Для поступления ОС
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	Рег.Номенклатура,
	|	Рег.Характеристика,
	|	Рег.Склад,
	|	Рег.Назначение,
	|	Рег.Распоряжение,
	|	-Рег.ПланируемоеПоступление КАК ПланируемоеПоступление,
	|	-Рег.ПланируемоеПоступлениеПодЗаказ КАК ПланируемоеПоступлениеПодЗаказ,
	|	-Рег.ПланируемоеПоступлениеСНеподтвержденными КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	-Рег.ПланируемоеПоступлениеПодЗаказСНеподтвержденными КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	РегистрНакопления.ДвижениеТоваров КАК Рег
	|ГДЕ
	|	Рег.Регистратор = &Ссылка";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыНакопления.ДвижениеТоваров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Загрузить(Таблица);
	НаборЗаписей.Записывать = Истина;
	НаборЗаписей.Записать();
	
	Если ЗначениеЗаполнено(Реквизиты._ЗаказПоставщику) Тогда
		РегистрыСведений.СостоянияЗаказовПоставщикам.ОтразитьСостояниеЗаказа(Реквизиты._ЗаказПоставщику, Отказ);
	КонецЕсли;	
	
КонецПроцедуры	