
Процедура ПриСозданииНаСервере_ОбеспечениеПотребностей(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Объект = Форма.Объект;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("_СрТолщинаЛиста",   ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),, "Средняя толщина листа", Ложь));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("_КоличествоЛистов", ОбщегоНазначения.ОписаниеТипаЧисло(15, 0),, "Количество листов",     Ложь));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("_ИтогоКЗаказу",     ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),, "Итого к заказу",        Ложь));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Группа = Форма.Элементы.Вставить("_ГруппаДопРеквизиты", Тип("ГруппаФормы"), Форма.Элементы.ГруппаИнформационнаяСтрока, Форма.Элементы.ИнформационнаяСтрока);
	Группа.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	Группа.ОтображатьЗаголовок = Ложь;
	
	Элемент = Форма.Элементы.Вставить("_СрТолщинаЛиста", Тип("ПолеФормы"), Группа, );
    Элемент.Вид         = ВидПоляФормы.ПолеНадписи;
	Элемент.ПутьКДанным = "_СрТолщинаЛиста";
	Элемент.Шрифт       = Новый Шрифт(,, Истина);
	Элемент.РастягиватьПоГоризонтали = Ложь;
	Элемент.Ширина      = 10;
	
	Элемент = Форма.Элементы.Вставить("_КоличествоЛистов", Тип("ПолеФормы"), Группа, );
    Элемент.Вид         = ВидПоляФормы.ПолеНадписи;
	Элемент.ПутьКДанным = "_КоличествоЛистов";
	Элемент.Шрифт       = Новый Шрифт(,, Истина);
	Элемент.РастягиватьПоГоризонтали = Ложь;
	Элемент.Ширина      = 10;
	
	Элемент = Форма.Элементы.Вставить("_ИтогоКЗаказу", Тип("ПолеФормы"), Группа, );
    Элемент.Вид         = ВидПоляФормы.ПолеНадписи;
	Элемент.ПутьКДанным = "_ИтогоКЗаказу";
	Элемент.Шрифт       = Новый Шрифт(,, Истина);
	Элемент.РастягиватьПоГоризонтали = Ложь;
	Элемент.Ширина      = 10;
	
	Команда = Форма.Команды.Добавить("_ЗаполнитьКоличествоКЗаказуРавноТребуется");
	Команда.Заголовок = "К заказу = Требуется";
	Команда.ИзменяетСохраняемыеДанные = Истина;
	Команда.Действие  = "_ЗаполнитьКоличествоКЗаказуРавноТребуется";
	Команда.Подсказка = "Установить значение ""К заказу"" равное ""Требуется""";
	
	Кнопка = Форма.Элементы.Вставить("_ЗаполнитьКоличествоКЗаказуРавноТребуется", Тип("КнопкаФормы"), Форма.Элементы.ВсеДействияЗаказы, Форма.Элементы.РекомендацииЗаказы);
	Кнопка.ИмяКоманды = "_ЗаполнитьКоличествоКЗаказуРавноТребуется";
	Кнопка.ТолькоВоВсехДействиях = Истина;
	
	
	Команда = Форма.Команды.Добавить("_РасчетОбеспеченияПотребностей");
	Команда.Заголовок = "Расчет обеспечения";
	Команда.ИзменяетСохраняемыеДанные = Истина;
	Команда.Действие  = "_РасчетОбеспеченияПотребностей";
	Команда.Подсказка = "Открыть отчет ""Расчет обеспечения потребностей""";
	
	Кнопка = Форма.Элементы.Вставить("_РасчетОбеспеченияПотребностей", Тип("КнопкаФормы"), Форма.Элементы.ВсеДействияЗаказы, Форма.Элементы.РекомендацииЗаказы);
	Кнопка.ИмяКоманды = "_РасчетОбеспеченияПотребностей";
	
КонецПроцедуры

Процедура ПриСозданииНаСервере_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Объект = Форма.Объект;
	
	Форма.Элементы.Продукция.Подвал = Истина;
	Форма.Элементы.ПродукцияКоличествоУпаковок.ПутьКДаннымПодвала = "Объект.Продукция.ИтогКоличество";
	
	Команда = Форма.Команды.Добавить("_ЗаполнитьСпецификацииПоТолщинам");
	Команда.Заголовок = "Заполнить спецификации по толщинам";
	Команда.ИзменяетСохраняемыеДанные = Истина;
	Команда.Действие  = "_ЗаполнитьСпецификацииПоТолщинам";
	
	Кнопка = Форма.Элементы.Вставить("_ЗаполнитьСпецификацииПоТолщинам", Тип("КнопкаФормы"), Форма.Элементы.ПродукцияПодменюСпецификация, );
	Кнопка.ИмяКоманды = "_ЗаполнитьСпецификацииПоТолщинам";
	
КонецПроцедуры

Процедура РассчитатьСреднююТолщину(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	НакопленноеКоличествоЛистов = 0;
	НакопленнаяТолшина = 0;
	НакопленныйОбъем = 0;
	
	Для каждого СтрокаТЗ из Объект.ЗаказыКОбеспечению Цикл
		
		Если НЕ СтрокаТЗ.Отметка Тогда
			Продолжить;
		КонецЕсли;	
		
		Длина   = _ХарактеристикиНоменклатуры.ПолучитьДлину(СтрокаТЗ.Характеристика);
		Ширина  = _ХарактеристикиНоменклатуры.ПолучитьШирину(СтрокаТЗ.Характеристика);
		Толщина = _ХарактеристикиНоменклатуры.ПолучитьТолщину(СтрокаТЗ.Характеристика);
		
		ОбъемЛиста       = Длина * Толщина * Ширина / (1000*1000*1000);
		КоличествоЛистов = ?(ОбъемЛиста = 0, 0, СтрокаТЗ.КЗаказу/ОбъемЛиста);
		ОбщаяТолщина     = КоличествоЛистов*Толщина;
		
		НакопленноеКоличествоЛистов = НакопленноеКоличествоЛистов + КоличествоЛистов;
		НакопленнаяТолшина          = НакопленнаяТолшина + ОбщаяТолщина;
		НакопленныйОбъем            = НакопленныйОбъем + СтрокаТЗ.КЗаказу; 
	
	КонецЦикла;
	
	Форма._СрТолщинаЛиста = ?(НакопленноеКоличествоЛистов = 0, 0, НакопленнаяТолшина/НакопленноеКоличествоЛистов);
	Форма._КоличествоЛистов = НакопленноеКоличествоЛистов;
	Форма._ИтогоКЗаказу = НакопленныйОбъем;
	
КонецПроцедуры	

Процедура ЗаполнитьСпецификацииПоТолщинам(Объект, СпецификацииПоТолщинам) Экспорт
	
	РеквизитыСпецификации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СпецификацииПоТолщинам.СпецификацияПоУмолчанию, "Статус, НачалоДействия, КонецДействия");
	Если РеквизитыСпецификации.Статус <> Перечисления.СтатусыСпецификаций.Действует
		ИЛИ РеквизитыСпецификации.НачалоДействия > НачалоДня(ТекущаяДатаСеанса())
		ИЛИ (ЗначениеЗаполнено(РеквизитыСпецификации.КонецДействия) И РеквизитыСпецификации.КонецДействия < ТекущаяДатаСеанса()) Тогда
		
		СпецификацияПоУмолчанию = "Спецификация не действительна";
		
	Иначе	
		СпецификацияПоУмолчанию = СпецификацииПоТолщинам.СпецификацияПоУмолчанию;	
	КонецЕсли;	
	
	СоответствиеСпецификаций = Новый Соответствие;
	Для каждого СтрокаТЗ из СпецификацииПоТолщинам.Толщины Цикл
		
		РеквизитыСпецификации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТЗ.Спецификация, "Статус, НачалоДействия, КонецДействия");
		Если РеквизитыСпецификации.Статус <> Перечисления.СтатусыСпецификаций.Действует
			ИЛИ РеквизитыСпецификации.НачалоДействия > НачалоДня(ТекущаяДатаСеанса())
			ИЛИ (ЗначениеЗаполнено(РеквизитыСпецификации.КонецДействия) И РеквизитыСпецификации.КонецДействия < ТекущаяДатаСеанса()) Тогда
			
			СоответствиеСпецификаций.Вставить(СтрокаТЗ.Толщина, "Спецификация не действительна");
			Продолжить;
			
		КонецЕсли;	
		
		СоответствиеСпецификаций.Вставить(СтрокаТЗ.Толщина, СтрокаТЗ.Спецификация);
		
	КонецЦикла;	
	
	Для каждого СтрокаТЗ из Объект.Продукция Цикл
		
		Толщина = _ХарактеристикиНоменклатуры.ПолучитьТолщину(СтрокаТЗ.Характеристика);
		Спецификация = СоответствиеСпецификаций[Толщина];
		Если Спецификация = Неопределено Тогда
			Спецификация = СпецификацияПоУмолчанию;
		Конецесли;	
		
		Если Спецификация = "Спецификация не действительна" Тогда
		Иначе	
			СтрокаТЗ.Спецификация = Спецификация;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ВТСостояниеЗаказа(МенеджерВременныхТаблиц, МассивЗаказов, Подразделение = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Параметры.Вставить("Заказы",               МассивЗаказов);
	Запрос.Параметры.Вставить("Подразделение",        Подразделение);
	Запрос.Параметры.Вставить("ПодразделениеУказано", ЗначениеЗаполнено(Подразделение));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Рег.Распоряжение КАК Заказ,
	|	Рег.КодСтрокиПродукция КАК КодСтроки,
	|	Рег.ЗапланированоЗаказомОборот КАК Запланировано,
	|	Рег.ВыполненоОборот КАК Выполнено,
	|	Рег.ЗапланированоЗаказомОборот - Рег.ВыполненоОборот КАК Остаток
	|ПОМЕСТИТЬ Этапы
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства.Обороты(
	|			,
	|			,
	|			,
	|			Распоряжение В (&Заказы)
	|				И (Подразделение = &Подразделение
	|					ИЛИ НЕ &ПодразделениеУказано)) КАК Рег
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выборка.Заказ КАК Заказ,
	|	Выборка.КодСтроки КАК КодСтроки,
	|	Выборка.Номенклатура КАК Номенклатура,
	|	Выборка.Характеристика КАК Характеристика,
	|	Выборка.Назначение КАК Назначение,
	|	СУММА(Выборка.КоличествоПлан) КАК КоличествоПлан,
	|	СУММА(Выборка.КоличествоФакт) КАК КоличествоФакт,
	|	СУММА(Выборка.КоличествоПлан) - СУММА(Выборка.КоличествоФакт) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТСостояниеЗаказа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокПродукция.Ссылка КАК Заказ,
	|		ДокПродукция.КодСтроки КАК КодСтроки,
	|		ДокПродукция.Номенклатура КАК Номенклатура,
	|		ДокПродукция.Характеристика КАК Характеристика,
	|		ДокПродукция.Назначение КАК Назначение,
	|		ДокПродукция.Количество КАК КоличествоПлан,
	|		0 КАК КоличествоФакт
	|	ИЗ
	|		Документ.ЗаказНаПроизводство.Продукция КАК ДокПродукция
	|	ГДЕ
	|		ДокПродукция.Ссылка В(&Заказы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Док.Ссылка.Распоряжение,
	|		Док.Ссылка.КодСтроки,
	|		Док.Номенклатура,
	|		Док.Характеристика,
	|		Док.Ссылка.Назначение,
	|		0,
	|		Док.КоличествоФакт
	|	ИЗ
	|		Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК Док
	|	ГДЕ
	|		Док.Ссылка.Распоряжение В(&Заказы)
	|		И (Док.Ссылка.Подразделение = &Подразделение
	|				ИЛИ НЕ &ПодразделениеУказано)
	|		И Док.Ссылка.Проведен
	|		И Док.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыМаршрутныхЛистовПроизводства.Выполнен)) КАК Выборка
	|
	|СГРУППИРОВАТЬ ПО
	|	Выборка.Номенклатура,
	|	Выборка.Характеристика,
	|	Выборка.Назначение,
	|	Выборка.Заказ,
	|	Выборка.КодСтроки";
	
	Запрос.Выполнить();
	
КонецФункции

Функция НевыполненнаяПродукция(МассивЗаказов, Подразделение = Неопределено) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ВТСостояниеЗаказа(МенеджерВременныхТаблиц, МассивЗаказов, Подразделение);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТСостояниеЗаказа.Номенклатура КАК Номенклатура,
	|	ВТСостояниеЗаказа.Характеристика КАК Характеристика,
	|	ВТСостояниеЗаказа.Назначение КАК Назначение,
	|	СУММА(ВТСостояниеЗаказа.КоличествоПлан) КАК КоличествоПлан,
	|	СУММА(ВТСостояниеЗаказа.КоличествоФакт) КАК КоличествоФакт,
	|	СУММА(ВТСостояниеЗаказа.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	ВТСостояниеЗаказа КАК ВТСостояниеЗаказа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Этапы КАК Этапы
	|		ПО ВТСостояниеЗаказа.Заказ = Этапы.Заказ
	|			И ВТСостояниеЗаказа.КодСтроки = Этапы.КодСтроки
	|ГДЕ
	|	Этапы.Остаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСостояниеЗаказа.Номенклатура,
	|	ВТСостояниеЗаказа.Характеристика,
	|	ВТСостояниеЗаказа.Назначение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Назначение,
	|	Номенклатура,
	|	Характеристика
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Возврат Таблица;
	
КонецФункции	